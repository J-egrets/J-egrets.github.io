<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>javaWeb基础知识总结</title>
    <url>/2022/01/20/JavaWeb%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="从Servlet出发"><a href="#从Servlet出发" class="headerlink" title="从Servlet出发"></a>从Servlet出发</h1><p>servlet是一个相当古老的技术了，可以说现在的任何一家公司都不再直接使用servlet来写项目，但是这并不能否认他的重要性，把目光放到现在的市场上，可以看到流行的spring全家桶也是基于servlet开发出来的。各种框架追寻到底层，还是servlet。</p>
<p>学习servlet的最大好处就是可以为我们打下坚实的基础，进而在往后的框架学习过程中学得更加得心应手。</p>
<p>tomcat，</p>
<h1 id="1-Tomcat"><a href="#1-Tomcat" class="headerlink" title="1  Tomcat"></a>1  Tomcat</h1><p>Tomcat 服务器是一个免费的开放源代码的运行JAVA的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 jsp 程序的首选，它的底层是Socket的一个程序，同时它也是一个JSP和Serlvet的容器。</p>
<h2 id="1-1-为什么我们需要用到Tomcat"><a href="#1-1-为什么我们需要用到Tomcat" class="headerlink" title="1.1  为什么我们需要用到Tomcat"></a>1.1  为什么我们需要用到Tomcat</h2><p>如果你学过html，css，你会知道你写的页面只能自己访问，<strong>别人不能远程访问你写的页面</strong>，Tomcat就是<strong>提供能够让别人访问自己写的页面的一个程序</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/Tomcat%E5%92%8Cservlet%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE202201221550060.png" alt="Tomcat和servlet在网络中的位置"></p>
<h2 id="1-2-Tomcat的目录结构"><a href="#1-2-Tomcat的目录结构" class="headerlink" title="1.2  Tomcat的目录结构"></a>1.2  Tomcat的目录结构</h2><p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/Tomcat%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84202201221555849.png" alt="Tomcat目录结构"></p>
<h3 id="1-2-1-bin目录"><a href="#1-2-1-bin目录" class="headerlink" title="1.2.1  bin目录"></a>1.2.1  bin目录</h3><p><strong>bin目录主要是用来存放tomcat的命令，</strong>主要有两大类，一类是以.sh结尾的（linux命令），另一类是以.bat结尾的（windows命令）。同时很多环境变量的设置也都在此处，例如可以设置JDK路径、tomcat路径 。</p>
<ul>
<li><strong>startup 用来启动tomcat</strong> </li>
<li><strong>shutdown 用来关闭tomcat</strong> </li>
<li><strong>修改catalina可以设置tomcat的内存</strong></li>
</ul>
<h3 id="1-2-2-conf目录"><a href="#1-2-2-conf目录" class="headerlink" title="1.2.2  conf目录"></a>1.2.2  conf目录</h3><p>conf目录主要是用来存放tomcat的一些配置文件。</p>
<ul>
<li><strong>server.xml可以设置端口号、设置域名或IP、默认加载的项目、请求编码</strong> </li>
<li><strong>web.xml可以设置tomcat支持的文件类型</strong> </li>
<li><strong>context.xml可以用来配置数据源之类的</strong> </li>
<li><strong>tomcat-users.xml用来配置管理tomcat的用户与权限</strong> </li>
<li><strong>在Catalina目录下可以设置默认加载的项目</strong> </li>
</ul>
<h3 id="1-2-3-lib目录"><a href="#1-2-3-lib目录" class="headerlink" title="1.2.3  lib目录"></a>1.2.3  lib目录</h3><p><strong>lib目录主要用来存放tomcat运行需要加载的jar包。</strong><br>例如，像连接数据库的jdbc的包我们可以加入到lib目录中来。</p>
<h3 id="1-2-4-logs目录"><a href="#1-2-4-logs目录" class="headerlink" title="1.2.4  logs目录"></a>1.2.4  logs目录</h3><p>logs目录用来存放tomcat在运行过程中产生的日志文件，非常重要的是在控制台输出的日志。<br>在windows环境中，控制台的输出日志在catalina.xxxx-xx-xx.log文件中<br>在linux环境中，控制台的输出日志在catalina.out文件中</p>
<h3 id="1-2-5-temp目录"><a href="#1-2-5-temp目录" class="headerlink" title="1.2.5  temp目录"></a>1.2.5  temp目录</h3><p>temp目录用户存放tomcat在运行过程中产生的临时文件。（清空不会对tomcat运行带来影响） </p>
<h3 id="1-2-6-webapp目录"><a href="#1-2-6-webapp目录" class="headerlink" title="1.2.6  webapp目录"></a>1.2.6  webapp目录</h3><p><strong>webapps目录用来存放应用程序，</strong>当tomcat启动时会去加载webapps目录下的应用程序。<strong>可以以文件夹、war包、jar包的形式发布应用。</strong><br><strong>当然，你也可以把应用程序放置在磁盘的任意位置，只要在配置文件中映射好就行。</strong> </p>
<h3 id="1-2-7-work目录"><a href="#1-2-7-work目录" class="headerlink" title="1.2.7  work目录"></a>1.2.7  work目录</h3><p><strong>work目录用来存放tomcat在运行时的编译后文件，例如JSP编译后的文件。</strong><br>清空work目录，然后重启tomcat，可以达到清除缓存的作用。</p>
<h2 id="1-3-Tomcat的web应用实例"><a href="#1-3-Tomcat的web应用实例" class="headerlink" title="1.3  Tomcat的web应用实例"></a>1.3  Tomcat的web应用实例</h2><p>我们可以在<strong>webapps</strong>中建立了<strong>webtest</strong>目录，下面放置我们的html文件，jsp文件，图片等等，那么<strong>webtest</strong>就被当做一个web应用被管理起来。</p>
<p>举例：在<strong>webapps</strong>下创建一个web站点，在web站点下创建一个html文件，然后访问这个html文件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/web%E5%BA%94%E7%94%A8%E5%AE%9E%E4%BE%8B202201221656336.png" alt="web应用实例"></p>
<p>以下是访问结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E8%AE%BF%E9%97%AE%E7%BB%93%E6%9E%9C202201221710742.png" alt="访问结果"></p>
<p>对于一个web站点，它内部的文件目录是有规范的。这个规范是约定熟成的。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/web%E7%AB%99%E7%82%B9%E5%86%85%E9%83%A8%E8%A7%84%E8%8C%83202201221731780.png" alt="web站点内部规范"></p>
<p>为什么要这样设置web站点⽬录呢？</p>
<p>假如说我有一个需求：我有多个html⽂件，想把其中的⼀个html⽂件作为我web站点的⾸⻚。 如果没有WEB-INF⽬录下的web.xml⽂件⽀持，是⽆法解决我的这个需求的。</p>
<p>下面将webtest站点下的welcome.html页面作为我网站的首页，那么我们需要做的是：</p>
<ul>
<li>在web站点下面创建一个WEB-INF目录</li>
<li>在WEB-INF目录中创建一个web.xml文件</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E6%B7%BB%E5%8A%A0%E6%AC%A2%E8%BF%8E%E9%A1%B5%E9%9D%A2202201221801221.png" alt="添加欢迎页面"></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6202201221803501.png" alt="添加配置文件"></p>
<p><strong>web.xml</strong>我们不可能会写，所以可以在webapps⽬录下其他的站点中抄⼀份过来【复制ROOT/WEB-INF/web.xml的⽂件到⾃⼰的站点中】在web.xml中添加以下代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>welcome.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>最后<strong>web.xml</strong>文件中的内容为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">         </span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>welcome.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>访问结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E5%B8%A6%E6%AC%A2%E8%BF%8E%E7%95%8C%E9%9D%A2%E7%9A%84%E8%AE%BF%E9%97%AE%E7%BB%93%E6%9E%9C202201221753321.png" alt="带欢迎界面的访问结果"></p>
<h2 id="1-4-Tomcat的体系结构"><a href="#1-4-Tomcat的体系结构" class="headerlink" title="1.4  Tomcat的体系结构"></a>1.4  Tomcat的体系结构</h2><p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/Tomcat%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84202201221805275.png" alt="Tomcat体系结构"></p>
<h2 id="1-5-Tomcat访问WEB资源的流程图"><a href="#1-5-Tomcat访问WEB资源的流程图" class="headerlink" title="1.5  Tomcat访问WEB资源的流程图"></a>1.5  Tomcat访问WEB资源的流程图</h2><p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/Tomcat%E8%AE%BF%E9%97%AEWEB%E8%B5%84%E6%BA%90%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE202201221912765.png" alt="Tomcat访问WEB资源的流程图"></p>
<h1 id="2-Servlet"><a href="#2-Servlet" class="headerlink" title="2  Servlet"></a>2  Servlet</h1><h2 id="2-1-Servlet定义"><a href="#2-1-Servlet定义" class="headerlink" title="2.1  Servlet定义"></a>2.1  Servlet定义</h2><p>我们编写Java程序想要在⽹上实现聊天、发帖这样⼀些的交互性功能，普通的Java技术是⾮常难完成的。于是sun公司就提供了一种名为Servlet的技术供我们使⽤，Servlet其实就是⼀个遵循Servlet开发的java类，Servlet由服务器调⽤的，运⾏在服务器端。</p>
<h2 id="2-2-HTTP协议"><a href="#2-2-HTTP协议" class="headerlink" title="2.2 HTTP协议"></a>2.2 HTTP协议</h2><h3 id="2-1-1-HTTP协议的定义"><a href="#2-1-1-HTTP协议的定义" class="headerlink" title="2.1.1  HTTP协议的定义"></a>2.1.1  HTTP协议的定义</h3><p><strong>超⽂本传输协议</strong>（HTTP，HyperText Transfer Protocol）是互联⽹上应⽤最为⼴泛的⼀种⽹络协议。所有的WWW⽂件都必须遵守这个标准。它是TCP/IP协议的⼀个<strong>应⽤层</strong>协议。</p>
<p>简单来说，HTTP协议就是客户端和服务器交互的⼀种<strong>通迅的格式</strong>。 </p>
<p><strong>例子</strong>：在浏览器点击⼀个<strong>链接</strong>，浏览器就为我打开这个链接的<strong>网页</strong>。</p>
<p><strong>原理</strong>：当在浏览器中点击这个链接的时候，浏览器会向服务器发送⼀段<strong>⽂本</strong>，告诉服务器请求打开的是哪⼀个网页。服务器收到请求后，就返回⼀段<strong>⽂本</strong>给浏览器，浏览器会将该<strong>⽂本</strong>解析，然后显示出来。 </p>
<p><strong>这段文本就是遵循HTTP协议规范的。</strong></p>
<h3 id="2-1-2-HTTP1-0和HTTP1-1的区别"><a href="#2-1-2-HTTP1-0和HTTP1-1的区别" class="headerlink" title="2.1.2  HTTP1.0和HTTP1.1的区别"></a>2.1.2  HTTP1.0和HTTP1.1的区别</h3><ul>
<li>HTTP1.0协议中，客户端与web服务器建立连接后，只能获得⼀个web资源【短连接，获取资源后就断开连接】</li>
<li>HTTP1.1协议中，允许客户端与web服务器建立连接后，在⼀个连接上获取多个web资源【保持连接】</li>
</ul>
<h3 id="2-1-3-HTTP请求"><a href="#2-1-3-HTTP请求" class="headerlink" title="2.1.3  HTTP请求"></a>2.1.3  HTTP请求</h3><p>浏览器向服务器请求某个web资源时，称之为浏览器向服务器发送了⼀个http请求。</p>
<p>⼀个完整http请求应该包含三个部分：</p>
<ul>
<li>请求⾏【描述客户端的请求⽅式、请求的资源名称，以及使⽤的HTTP协议版本号】</li>
<li>多个消息头【描述客户端请求哪台主机，以及客户端的⼀些环境信息等】</li>
<li>一个空行</li>
</ul>
<h4 id="2-1-3-1-请求行"><a href="#2-1-3-1-请求行" class="headerlink" title="2.1.3.1  请求行"></a>2.1.3.1  请求行</h4><p>请求行：GET/java.html HTTP/1.1</p>
<p>请求行中的GET称之为请求方式，请求方式有：POST、GET、HEAD、OPTIONS、DELETE、TRACE、PUT。</p>
<p>常用的有：POST、GET</p>
<p>⼀般来说，当我们点击超链接，通过地址栏访问都是get请求方式。通过表单提交的数据⼀般是post方式。可以简单理解GET方式用来查询数据，POST方式用来提交数据，get的提交速度比post快</p>
<p>GET方式：在URL地址后附带的参数是有限制的，其数据容量通常不能超过1K。</p>
<p>POST方式：可以在请求的实体内容中向服务器发送数据，传送的数据量⽆限制。</p>
<h4 id="2-1-1-2-请求头"><a href="#2-1-1-2-请求头" class="headerlink" title="2.1.1.2  请求头"></a>2.1.1.2  请求头</h4><ul>
<li>Accept：text/html,img/*  【浏览器告诉服务器，它支持的数据类型】</li>
<li>Accept-Charset：ISO-8859-1  【浏览器告诉服务器，它支持哪种字符集】</li>
<li>Accept-Encoding：gzip，compress  【浏览器告诉服务器，它支持的压缩格式】</li>
<li>Accept-Language：en-us，zn-cn  【浏览器告诉服务器，它的语言环境】</li>
<li>HOST：<a href="http://www.jegret.cn/">www.jegret.cn</a> 【浏览器告诉服务器，它想访问哪台主机】</li>
<li>If-Modified-Since：Tue，11 Jul 2000 20:32:55 GMT【浏览器告诉服务器，缓冲数据的时间】</li>
<li>Referer：<a href="http://www.jegret.cn/">http://www.jegret.cn</a>  【浏览器告诉服务器，客户机是从哪个页面来的，常用与做防盗链】</li>
<li>User-Agent：Mozilla/4.0（compatible；MSIE 5.5；Windows NT 5.0）  【浏览器告诉服务器，浏览器的内核是什么】</li>
<li>Cookie：浏览器告诉服务器，带来的Cookie是什么</li>
<li>Connection：close/Keep-Alive  【浏览器告诉服务器，请求完断开连接还是保持连接】</li>
<li>Date：Tue，11 Jul 2000 20:32:55 GMT  【浏览器告诉服务器，请求的时间】</li>
</ul>
<h3 id="2-1-4-HTTP响应"><a href="#2-1-4-HTTP响应" class="headerlink" title="2.1.4  HTTP响应"></a>2.1.4  HTTP响应</h3><p>一个HTTP响应代表着服务器向浏览器回送数据。</p>
<p>一个完整的HTTP响应应该包含四个部分：</p>
<ul>
<li>一个状态行【用与描述服务器对请求的处理结果】</li>
<li>多个消息头【用与描述服务器的基本信息，以及数据的描述，服务器通过这些数据的描述信息，可以通知客户端如何处理等一会它回送的数据】</li>
<li>一个空行</li>
<li>实体内容【服务器向客户端回送数据】</li>
</ul>
<h4 id="2-1-4-1-状态行"><a href="#2-1-4-1-状态行" class="headerlink" title="2.1.4.1  状态行"></a>2.1.4.1  状态行</h4><p>格式：HTTP版本号  状态码  原因叙述</p>
<p>状态行：HTTP/1.1 200 OK</p>
<p>状态码用与表示服务器对请求的处理结果，它是一个三位的十进制数。响应状态码分为5类</p>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">100~199</td>
<td align="center">表示成功接受请求，要求客户端继续提交下一次请求才能完成整个处理过程</td>
</tr>
<tr>
<td align="center">200~299</td>
<td align="center">表示成功接受请求并已完成整个处理过程，常用200</td>
</tr>
<tr>
<td align="center">300~399</td>
<td align="center">为完成请求，客户需进一步细化请求。例如，请求的资源已移动一个新地址，常用302、307和304</td>
</tr>
<tr>
<td align="center">400~499</td>
<td align="center">客户端的请求有错误，常用404</td>
</tr>
<tr>
<td align="center">500~599</td>
<td align="center">服务器端出现错误，常用500</td>
</tr>
</tbody></table>
<h4 id="2-1-4-2-响应头"><a href="#2-1-4-2-响应头" class="headerlink" title="2.1.4.2  响应头"></a>2.1.4.2  响应头</h4><ul>
<li>Location：<a href="http://www.jegret.cn/index.html%E3%80%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%91%8A%E8%AF%89%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A6%81%E8%B7%B3%E8%BD%AC%E5%88%B0%E5%93%AA%E4%B8%AA%E9%A1%B5%E9%9D%A2%E3%80%91">http://www.jegret.cn/index.html【服务器告诉浏览器要跳转到哪个页面】</a></li>
<li>Server：apache tomcat【服务器告诉浏览器，服务器的型号是什么】</li>
<li>Content-Encoding：gzip 【服务器告诉浏览器数据压缩的格式】</li>
<li>Content-Length：80 【服务器告诉浏览器回送数据的长度】</li>
<li>Content-Language：zh-cn 【服务器告诉浏览器，服务器的语言环境】</li>
<li>Content-Type：text/html; charset=GB2312 【服务器告诉浏览器，回送数据的类型】</li>
<li>Last-Modified：Tue, 11 Jul 2000 18:23:51 GMT【服务器告诉浏览器该资源上次更新时间】</li>
<li>Refresh：1;url=<a href="http://www.jegret.cn【服务器告诉浏览器要定时刷新】/">http://www.jegret.cn【服务器告诉浏览器要定时刷新】</a></li>
<li>Content-Disposition：attachment; filename=aaa.zip【服务器告诉浏览器以下载方式打开数据】</li>
<li>Transfer-Encoding：chunked 【服务器告诉浏览器数据以分块方式回送】</li>
<li>Set-Cookie：SS=Q0=5Lb_nQ; path=/search【服务器告诉浏览器要保存Cookie】</li>
<li>Expires：-1【服务器告诉浏览器不要设置缓存】</li>
<li>Cache-Control：no-cache 【服务器告诉浏览器不要设置缓存】</li>
<li>Pragma：no-cache 【服务器告诉浏览器不要设置缓存】</li>
<li>Connection：close/Keep-Alive 【服务器告诉浏览器连接方式】</li>
<li>Date：Tue，11 Jul 2000 20:32:55 GMT 【服务器告诉浏览器回送数据的时间】</li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础数据类型和运算符</title>
    <url>/2021/01/25/Java%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p><strong>标识符</strong>是赋给类、方法、变量……的<strong>名字</strong>。<br>一个标识符可以是<strong>字母、数字、下划线、美元符号</strong>的任意顺序组合，但不能以一个数字开始，也不能是关键字。<br><strong>注:Java是区分大小写的，Student和student是不一样的</strong><br><font color="red">由于Java采用的Unicode编码，所以中文也算是字母，但是并不建议用中文做标识符</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> 中文 = <span class="number">5</span>;</span><br><span class="line">System.out.println(中文); <span class="comment">// 输出5</span></span><br></pre></td></tr></table></figure>

<h1 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h1><p><strong>关键字</strong>是Java里事先定义好并赋予特殊含义的单词，也被称为保留字，标识符不能和关键字冲突。<br><img src="https://img-blog.csdnimg.cn/20210125200259566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"><br><font color="red">注意：main不是关键字</font></p>
<h1 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h1><p>常量就是在程序中固定不变的值，是不能改变的数据。例如数字1，字符‘a’，浮点数3.2等。在Java中，常量包括<font color="red">整型常量、浮点数常量、布尔常量、字符常量</font>等等。</p>
<h2 id="1-整型常量"><a href="#1-整型常量" class="headerlink" title="1.整型常量"></a>1.整型常量</h2><p><strong>整型常量</strong>是整数类型的数据，有二进制，八进制，十进制和十六进制四种表示形式：</p>
<ul>
<li>二进制：由数字0和1组成的数字序列，前面要以0b或0B开头，目的是为了和十进制进行区分，如0b01101100，0B10110101</li>
<li>八进制：以0开头并且其后由0~7范围内（包含0和7）的整数组成的数字序列，如0342。</li>
<li>十进制：由数字0~9范围内（包含0和9）的整数组成的数字序列，如198。</li>
<li>十六进制：以0x或0X开头并且其后由0-9，A-F（包含端点）组成的数字序列，如0X25AF</li>
</ul>
<p><font color="red">注意：在程序中为了标明不同的进制，数据都有上述的特定标识，必须遵守。</font></p>
<h2 id="2-浮点数常量"><a href="#2-浮点数常量" class="headerlink" title="2.浮点数常量"></a>2.浮点数常量</h2><p><strong>浮点数常量</strong>就是在数学中用到的小数，分为<strong>float单精度浮点数</strong>和<strong>double双精度浮点数</strong>两种类型。其中，单精度浮点数后面以<strong>F或f</strong>结尾，双精度浮点数后面以<strong>D或d</strong>结尾。当然，也可以不加任何的后缀，此时Java虚拟机会默认为double双精度浮点数。</p>
<h2 id="3-字符常量"><a href="#3-字符常量" class="headerlink" title="3.字符常量"></a>3.字符常量</h2><p><strong>字符常量</strong>用于表示一个字符，它可以是英文字母，数字，标点符号以及转义序列来表示的特殊字符。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;a&#x27;</span> <span class="string">&#x27;1&#x27;</span> <span class="string">&#x27;&amp;&#x27;</span> <span class="string">&#x27;\r&#x27;</span> <span class="string">&#x27;\u0000&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="4-字符串常量"><a href="#4-字符串常量" class="headerlink" title="4.字符串常量"></a>4.字符串常量</h2><p><strong>字符串常量</strong>用于表示一串连续的字符。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello World&quot;</span> <span class="string">&quot;123&quot;</span> <span class="string">&quot;Welcome \n XXX&quot;</span>  <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="5-布尔常量"><a href="#5-布尔常量" class="headerlink" title="5.布尔常量"></a>5.布尔常量</h2><p><strong>布尔常量</strong>即布尔型的两个值<font color="red">true</font>和<font color="red">false</font>，该常量用于区分一个事物的真与假</p>
<h2 id="6-null常量"><a href="#6-null常量" class="headerlink" title="6.null常量"></a>6.null常量</h2><p><strong>null常量</strong>只有一个值null，表示对象的引用为空。</p>
<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h2><p>在程序运行期间，随时可能产生一些临时数据，应用程序会将这些数据保存在一些内存单元中，每个内存单元都用一个标识符来标识。这些<strong>内存单元</strong>被称为<font color="red">变量</font>，定义的<strong>标识符</strong>就是<font color="red">变量名</font>，<strong>内存单元中存储的数据</strong>就是<font color="red">变量的值</font>。</p>
<h2 id="变量的数据类型"><a href="#变量的数据类型" class="headerlink" title="变量的数据类型"></a>变量的数据类型</h2><p>在JAVA中的变量数据类型分为两种：<strong>基本数据类型</strong>和<strong>引用数据类型</strong>。<br><img src="https://img-blog.csdnimg.cn/20210125204512507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"><br><a href="https://blog.csdn.net/ThinkWon/article/details/101649568?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161157846516780265429893%252522%25252C%252522scm%252522%25253A%25252220140713.130102334..%252522%25257D&request_id=161157846516780265429893&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-101649568.pc_search_result_hbase_insert&utm_term=Java%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">此图从这篇博客转载而来</a></p>
<p><strong>操作误区</strong>：<br>定义一个long变量时，如果用常量给他赋值，并且这个常量的值超过了int的范围，则一定要在这个常量后面加一个L或者l。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> val = <span class="number">9999999999999L</span>；</span><br></pre></td></tr></table></figure>

<p>定义一个float变量时，如果用常量给他赋值，并且这个常量是小数，则必须在这个常量后面加个f或者F，因为小数会被默认为double类型的值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> val = <span class="number">1.2f</span>;</span><br></pre></td></tr></table></figure>
<p>定义一个boolean变量，只能用true或者false给他赋值，并不能用0或1去赋值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>; <span class="comment">// 正确</span></span><br><span class="line"><span class="keyword">boolean</span> flag = <span class="number">1</span>; <span class="comment">// 错误</span></span><br></pre></td></tr></table></figure>

<h2 id="变量类型的转换"><a href="#变量类型的转换" class="headerlink" title="变量类型的转换"></a>变量类型的转换</h2><h3 id="1-自动类型转换"><a href="#1-自动类型转换" class="headerlink" title="1.自动类型转换"></a>1.自动类型转换</h3><p>自动类型转换也叫隐式类型转换，指的是两种数据类型在转换的过程中不需要显式地进行声明。<br>他需要两个条件：第一，<strong>两种数据类型彼此兼容</strong>；第二，<strong>目标类型的取值范围大于源类型的取值范围</strong>（<font color="red">目标类型可以类比成水桶，源类型可以类比成水杯</font>）<br>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">byte</span> b = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> a = b; <span class="comment">// 程序把byte类型的b自动转换成了int类型，无须特殊声明</span></span><br></pre></td></tr></table></figure>
<p>下面列举三种可以进行自动类型转换的情况：</p>
<ul>
<li>整数类型之间可以实现转换，低取值范围的向高取值范围转换</li>
<li>整数类型可以转换成float类型。</li>
<li>其他类型可以转换成double类型。</li>
</ul>
<h3 id="2-强制类型转换"><a href="#2-强制类型转换" class="headerlink" title="2.强制类型转换"></a>2.强制类型转换</h3><p>强制类型转换也叫显式类型转换，指的是两种数据类型之间需要进行显式地声明。<br>当两种类型彼此不兼容，或者目标类型的取值范围小于源类型时，自动类型转换无法进行，这时就需要强制类型转换。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">目标类型 变量名 = （目标类型） 值；</span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>) num;</span><br></pre></td></tr></table></figure>
<p><font color="red">注意</font>：在对变量进行强制类型转换时，会发生取<strong>值范围较大的数据类型向取值范围较小的数据类型的转换</strong>，如将一个int类型的数转换成byte类型，这样极其容易造成<strong>数据精度的丢失</strong>。因为两者的取值范围不同，所以小范围的数据类型会截断大范围的数据类型，造成精度丢失。<br>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">128</span>;</span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>) a;</span><br><span class="line">System.out.println(b); <span class="comment">// 输出-128，精度丢失，具体原理：自行写出他们的二进制表示即可理解</span></span><br></pre></td></tr></table></figure>

<h3 id="3-表达式类型的自动提升"><a href="#3-表达式类型的自动提升" class="headerlink" title="3.表达式类型的自动提升"></a>3.表达式类型的自动提升</h3><p>所谓表达式是指由变量和运算符组成的一个算式，变量在表达式中进行运算时，也有可能发生自动类型转换，这就是表达式数据类型的自动提升，如一个byte型的变量在运算期间类型会自动提升为int型。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">byte</span> b1 = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">byte</span> b2 = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">byte</span> b = b1 + b2; <span class="comment">// 此时报错，因为在运算期间，变量b1和变量b2都被提升为了int型，直接赋值就会出错</span></span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>) (b1 + b2); <span class="comment">// 此时成功 </span></span><br></pre></td></tr></table></figure>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>理解一个点，其他的和c++一样，不再赘述。<br><font color="red">| 或，|| 短路或，&amp; 与，&amp;&amp;短路与</font></p>
<ul>
<li>| 或：无论左式的真假性，都要计算运算符两边的表达式</li>
<li>|| 短路或：当<strong>左式</strong>为<strong>真</strong>时，就判断<strong>整个式子为真</strong>，不再计算判断右式</li>
<li>&amp; 与：无论左式的真假性，都要计算运算符两边的表达式</li>
<li>&amp;&amp; 短路与：当<strong>左式</strong>为<strong>假</strong>时，就判断<strong>整个式子为假</strong>，不再计算判断右式</li>
</ul>
<p>举例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, z = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">boolean</span> flag1, flag2;</span><br><span class="line">flag1 = x &gt; <span class="number">0</span> &amp; y++ &gt; <span class="number">0</span>; <span class="comment">// 最终y的值为1，因为右式计算判断过了</span></span><br><span class="line">flag2 = x &gt; <span class="number">0</span> &amp;&amp; z++ &gt; <span class="number">0</span>; <span class="comment">// 最终z的值为0，因为右式没有计算判断过</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java基础</tag>
      </tags>
  </entry>
  <entry>
    <title>c++的字符及字符串简记</title>
    <url>/2020/06/28/c-%E7%9A%84%E5%AD%97%E7%AC%A6%E5%8F%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AE%80%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h1><p>字符常量：用单撇号括起来的<font color="red">一个</font><strong>字符</strong>就是字符常量。（注意是一个）</p>
<p>如：**’A’，’a’，’1’，’2’。**</p>
<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><p>转义字符是一种特殊的字符，他有两个或多个字符组成，但是他只代表一个字符。</p>
<p>编译系统在见到字符“\”后，<font color="red">会接着找他后面的字符</font>，并且把它处理成一个字符，在内存中只占一个字节。</p>
<p>转义字符’ \ ‘代表的反斜杠” \ “，转义字符” \’ “代表的字符” ‘ “和转义字符’ &quot; ‘代表的字符’＂’，其本身就是可显示字符，为什么还要对它转义呢?</p>
<p>这是因为它们的原有的字符形式已==作它用==，其中，单引号用作<strong>区分字符常量的括号</strong>，双引号用作<strong>区分字符串的括号</strong>，而反斜杠本身已用来<strong>表示转义字符的开头</strong>，因此必须对它们用转义字符重新声明。</p>
<p>转义字符注意点：<br>1)转义字符中只能使用小写字母，每个转义字符只能看作一个字符。<br>如：<strong>\n</strong>(换行), <strong>\t</strong>(制表符), <strong>\a</strong>(响铃，你的电脑会叫一声), <strong>\0</strong>(空字符)，以上只能小写，还有的如“\101”(字母A)，这则是八进制的方法，还有16进制的，如果需要请自行查找</p>
<p>2)\v垂直制表和\f换页符对<strong>屏幕</strong>（你的小黑框）没有任何影响，但会影响打印机执行响应操作。</p>
<p>4)转义字符’\0’表示空字符<strong>NULL</strong>，它的值是<strong>0</strong>。而字符’0’的ASCII码值是48。因此，空字符’\0’不是字符0。另外，空字符不等于空格字符，空格字符的ASCII码值为32而不是0。</p>
<p>5)如果反斜线之后的字符和它不构成转义字符，则’\’不起转义作用将被<strong>忽略</strong>。<br>如：你输出“\c”,”\A”，最后只会出来”c”和“A”。</p>
<p>6）转义字符也经常出现在字符串中，如你在一句话的末尾加一个\n，这时候就会换行，注意，这个时候\n是当做<strong>一个字符</strong>看待的，不是当做两个看待的。</p>
<h1 id="字符数组"><a href="#字符数组" class="headerlink" title="字符数组"></a>字符数组</h1><p>对字符数组的初始化。<br>如：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">10</span>] = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> c[] = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;;</span><br></pre></td></tr></table></figure>
<p>如果花括号里面提供的字符个数大于规定的数组长度，则按<strong>语法错误处理</strong>。<br>如果花括号里面提供的字符个数小于规定的数组长度，则按顺序将这些初值赋给前面的那些元素，其余元素用<strong>空字符</strong>（’\0’）填充。</p>
<p>注意：<font color="red">只能对字符数组的元素赋值，而不能用赋值语句对整个数组赋值</font></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">10</span>];</span><br><span class="line">c = &#123;<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;y&#x27;</span>&#125;; <span class="comment">//错误，不能对整个数组一次性赋值，只有初始化的时候可以类似地这样做</span></span><br><span class="line">c[<span class="number">0</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">c[<span class="number">1</span>] = <span class="string">&#x27;H&#x27;</span>;</span><br><span class="line">c[<span class="number">3</span>] = <span class="string">&#x27;i&#x27;</span>;</span><br><span class="line">c[<span class="number">4</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">c[<span class="number">5</span>] = <span class="string">&#x27;a&#x27;</span>; <span class="comment">// 这样是正确的</span></span><br></pre></td></tr></table></figure>
<p>如果已经有a和b两个数组。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a = b; <span class="comment">// 错误，不能对整个数组整体赋值</span></span><br><span class="line">a[<span class="number">0</span>] = b[<span class="number">0</span>]; <span class="comment">// 正确，对数组元素赋值</span></span><br></pre></td></tr></table></figure>

<h1 id="字符数组的输入与输出"><a href="#字符数组的输入与输出" class="headerlink" title="字符数组的输入与输出"></a>字符数组的输入与输出</h1><p>两种方法：<br>1）逐个字符输入输出<br>2）将整个字符串一次输入或输出</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">20</span>];</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line">cout &lt;&lt; c;<span class="comment">// 输出整个字符串</span></span><br><span class="line">cout &lt;&lt; c[<span class="number">0</span>]; <span class="comment">//输出单个字符</span></span><br></pre></td></tr></table></figure>
<p>字符数组名代表字符数组的第一个元素c[0]的地址，执行 “cout &lt;&lt; c;” 的过程是从c所指向的数组的第一个元素开始<strong>逐个</strong>（自己往后跑，指针自行增加）输出字符，直到遇到’\0’为止。</p>
<p>注意：<br><strong>1）输出的字符不包括结束符’\0’</strong><br><strong>2）如果数组长度大于字符串实际长度，输出遇到‘\0’结束</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">10</span>] = <span class="string">&quot;ABC&quot;</span>;</span><br><span class="line">cout &lt;&lt; c; <span class="comment">// 只输出ABC三个字符，而不是10个字符，这就是结束标志的作用</span></span><br></pre></td></tr></table></figure>
<p><strong>3）如果一个字符数组包含一个以上的‘\0’，则遇到第一个‘\0’时输出就结束</strong><br><strong>4）用cin从键盘输入一个字符串时，键盘键入的字符串长度应小于字符数组的长度，否则会出现问题</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">1</span>];</span><br><span class="line">cin &gt;&gt; c; <span class="comment">// 输入123</span></span><br><span class="line">cout &lt;&lt; c; <span class="comment">//输出123</span></span><br><span class="line"><span class="comment">/*系统不报错，也能正常输出，因为他将多余的字符放在了后面的字节里面，</span></span><br><span class="line"><span class="comment">这样有可能会破坏其他的数据，不安全，甚至可能出现无法估计的后果</span></span><br><span class="line"><span class="comment">所以一定要保证字符串长度小于字符数组长度*/</span></span><br></pre></td></tr></table></figure>


<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>字符串以’\0’作为<strong>结束的标志</strong>，在系统中，当遇到字符<strong>‘\0’</strong>就表示字符串到此结束了，由他前面的字符组成<font color="red">有效的字符串</font>。</p>
<p>对于一个字符串常量，系统会自动在所有字符的后面加一个‘\0’作为结束符，然后再把他给存起来。<br>如：对字符串常量“ABC”，共有3个字符，但是他在内存里面却有4个字节，因为还有个‘\0’是系统自动加上的。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;a&#x27;</span> != <span class="string">&quot;a&quot;</span>; <span class="comment">//注意，前者有一个字a，占一个字节，后者有a和\0两个字符，占两个字节</span></span><br></pre></td></tr></table></figure>

<p>所以，在程序中常常依靠检测’\0’的位置来判断字符串是否结束，而不是根据字符数组规定的长度来决定字符串的长度。（注意：如果要用字符数组存字符串，一定要记得让字符数组长度<strong>大于</strong>字符串长度哦）</p>
<p>可以用字符串常量来初始化字符数组</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c[] = <span class="string">&quot;ABC&quot;</span>; <span class="comment">//注意两边是双撇号</span></span><br><span class="line"><span class="keyword">char</span> c[] = &#123;<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;\0&#x27;</span>&#125;; <span class="comment">//第一行与这一行等价</span></span><br><span class="line"><span class="keyword">char</span> c[] = &#123;<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>&#125;; <span class="comment">// 与这一行不等价</span></span><br></pre></td></tr></table></figure>
<p>说明：<strong>字符数组并不要求最后一个字符必须是‘\0’，可以不包括‘\0’，随程序设计者需要而定，但为了使字符串的处理方法一致（<font color="red">遇到’\0’结束</font>），人们往往认为地在字符数组的最后加上一个’\0’。</strong></p>
<h2 id="字符串类"><a href="#字符串类" class="headerlink" title="字符串类"></a>字符串类</h2><p>字符数组操控字符串的方法太过麻烦，在字符串的运算中，一但字符串的长度超过了字符数组的长度，会带来不必要的危险，所以我们经常是用string来处理日常的字符串的。<br>在使用方法上，他和int，char一样，只不过你需要先：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>下面介绍运算：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line">string s1，s2; <span class="comment">// 定义字符串</span></span><br><span class="line">s1 = <span class="string">&quot;ABC&quot;</span>; <span class="comment">// 赋值</span></span><br><span class="line">s2 = s1; <span class="comment">// 赋值</span></span><br><span class="line"></span><br><span class="line">cin &gt;&gt; s1;</span><br><span class="line">cout &lt;&lt; s1; <span class="comment">// 输入与输出</span></span><br><span class="line"></span><br><span class="line">s1 = s2; <span class="comment">//字符串复制</span></span><br><span class="line">s1 = s1 + s2; <span class="comment">//字符串连接</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; s1.<span class="built_in">length</span>(); <span class="comment">//输出字符串长度，还有其他的操作方法，请自行查找函数库</span></span><br><span class="line"><span class="comment">// 字符串比较直接用 &gt; &lt; &gt;= &lt;= == != 即可</span></span><br></pre></td></tr></table></figure>

<p><strong>注意</strong>：string，cstring，和string.h的<strong>区别</strong></p>
<p>string是C++的<font color="red">string类</font>。</p>
<p>cstring包含一些C字符串的<font color="red">操作函数</font>，它里面有一些常用的C字符串处理函数，比如strcmp、strlen、strcpy、strcat之类的函数，它与原来的&lt;string.h&gt;对应。但cstring头文件的内容在名字空间std 中，而string.h不在。</p>
<p><font color="red">cstring里面的函数不能操作string对象</font>，string对象有它自己的函数来操作，cstring可以和纯字符串（“ABC”）或者字符数组玩耍。</p>
<p>下面引用一下别人关于头文件的说明并作了些增添：</p>
<blockquote>
<p>下面是C++头文件的现状：<br>(1)旧的C++头文件名如 &lt;iostream.h&gt;将会继续被支持，这些头文件的内容不在名字空间std 中。新的C++头文件如 iostream包含的基本功能和对应的旧头文件相同，但头文件的内容在名字空间std 中。（在标准化的过程中，库中有些部分的细节被修改了，所以旧头文件和新头文件中的实体不一定完全对应。）<br>(2)标准C 头文件如 &lt;stdio.h&gt;继续被支持。头文件的内容不在std 中。具有C 库功能的新C++头文件具有如 cstdio这样的名字。它们提供的内容和相应的旧C 头文件相同，只是内容在std 中。<br>前面加个c代表着它是继承标准c的头文件。</p>
</blockquote>
<p><font color="red">由于cin的输入会跳过空格，换行，tab符之类的空白字符，所以有时候会使用getline函数来进行输入</font></p>
<p>当用getline函数进行输入操作时，对字符数组</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> name[Asize];</span><br><span class="line">   cin.<span class="built_in">getline</span>(name, Asize,<span class="string">&#x27;结束字符&#x27;</span>); <span class="comment">// 注意格式，一般第三个参数不输入的话默认为换行符</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>面向行的输入:istream&amp; getline(char *p, int n, char c)<br>getline()函数读取整行，它使用通过回车键输入的换行符来确定输入结尾。要调用这种方法，可以使用cin.getline()。该函数有两个参数。第一个参数是用来存储输入行的数组的名称，第二个参数是要读取的字符数量。如果参数是20，那么最多可以读取19个字符，余下的空间用于存储自动在结尾处添加的空字符。如果在读取n-1个字符之前遇到终止字符(第三个参数不写，默认为’\n’)，则提前结束。getline()成员函数在读取指定数目的字符或遇到换行符时停止读取。</p>
</blockquote>
<p>当用getline函数进行输入操作时，对字符串</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string name;</span><br><span class="line">   <span class="built_in">getline</span>(cin, name);   <span class="comment">// 注意格式</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>getline(cin, inputLine)，其中cin是正在读取的输入流，而inputLine是接收输入字符串的string变量的名称。需要注意的是，它不是类方法。</p>
</blockquote>
<h2 id="get和getline的区别"><a href="#get和getline的区别" class="headerlink" title="get和getline的区别"></a>get和getline的区别</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cin.<span class="built_in">getline</span>(name, Asize,<span class="string">&#x27;结束字符&#x27;</span>);</span><br><span class="line">cin.<span class="built_in">get</span>(name, Asize,<span class="string">&#x27;结束字符&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color="red">getline<strong>不会保留</strong>结束字符在缓冲区，而get<strong>会保留</strong>结束字符在缓冲区</font></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>];<span class="keyword">char</span> b;</span><br><span class="line">   cin.<span class="built_in">get</span>(a,<span class="number">10</span>,<span class="string">&#x27;,&#x27;</span>);<span class="comment">// get</span></span><br><span class="line">cin.<span class="built_in">get</span>(b);</span><br><span class="line">cout&lt;&lt;a&lt;&lt;endl&lt;&lt;b;</span><br><span class="line"><span class="comment">//输入12345，回车</span></span><br><span class="line"><span class="comment">//输出12345【换行】，</span></span><br><span class="line"><span class="comment">//注意，因为缓冲区里面还有逗号（结束字符），</span></span><br><span class="line"><span class="comment">//所以在get单个字符的时候，就直接把这个结束字符获取了</span></span><br><span class="line"><span class="comment">//cin.get(a,10,&#x27;,&#x27;)把12345到a中，遇到&#x27;,&#x27;结束，但是不把&#x27;,&#x27;删除，而把&#x27;,&#x27;输入到b中</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>];<span class="keyword">char</span> b;</span><br><span class="line">   cin.<span class="built_in">getline</span>(a,<span class="number">10</span>,<span class="string">&#x27;,&#x27;</span>); <span class="comment">//getline</span></span><br><span class="line">cin.<span class="built_in">get</span>(b);</span><br><span class="line">cout&lt;&lt;a&lt;&lt;endl&lt;&lt;<span class="built_in"><span class="keyword">int</span></span>(b);</span><br><span class="line"><span class="comment">//输入12345，回车</span></span><br><span class="line"><span class="comment">//输出12345【换行】10</span></span><br><span class="line"><span class="comment">//cin.getline(a,10,&#x27;,&#x27;)把12345输入到a中，遇到’，‘结束，并删除缓冲区的‘,’，</span></span><br><span class="line"><span class="comment">//后面的[enter]输入到b中</span></span><br><span class="line"><span class="comment">//回车的ascil码为10</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>c++中单继承构造函数与析构函数的调用顺序</title>
    <url>/2020/08/05/c-%E4%B8%AD%E5%8D%95%E7%BB%A7%E6%89%BF%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E4%B8%8E%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E7%9A%84%E8%B0%83%E7%94%A8%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<p>在c++的单继承中，构造函数有3个需要调用的地方</p>
<ol>
<li>基类构造函数</li>
<li>子对象构造函数</li>
<li>派生类本身的构造函数</li>
</ol>
<p>调用的顺序为：</p>
<ol>
<li>调用基类构造函数，对基类数据成员初始化</li>
<li>调用子对象构造函数，对子对象数据成员初始化</li>
<li>调用派生类构造函数，对派生类数据成员初始化</li>
</ol>
<p>基类和派生类的构造函数相信不用多说了，前者优先于后者，需要注意的是这里面的子对象的构造函数。<br>注意：<font color="red">在每一个类中，不管他是基类还是派生类，子对象的构造函数的调用都优先于此类本身的构造函数调用</font><br>只要搞清楚了构造函数的顺序，一但遇到了析构函数，只要把构造函数反过来看，就是析构函数的调用顺序了。<br>实验代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> // 实验的子对象类</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span> // 实验的子对象类</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span><span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span> <span class="keyword">public</span> B</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;析构C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    D d;</span><br><span class="line">    E e;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200805173620805.png" alt="运行结果"></p>
<p>注意：<font color="red">在每个类中，如果有多个子对象，那么他们构造函数的调用顺序取决于他们的声明顺序，声明越早，构造越早。如上面代码中在类C中子对象d, e的构造函数调用，因为d的声明在e之前，所以的d的构造函数先调用</font></p>
<p>现在将两个子对象放到类B中</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span><span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    D d;</span><br><span class="line">    E e;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span> <span class="keyword">public</span> B</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;析构C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/2020080517410424.png" alt="运行结果"></p>
<p>下面将子对象放到类A中：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">D</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构D&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">E</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构E&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">A</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    D d;</span><br><span class="line">    E e;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> :</span><span class="keyword">public</span> A</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt; <span class="string">&quot;构造B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">B</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;析构B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span> <span class="keyword">public</span> B</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;构造C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    ~<span class="built_in">C</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;析构C&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//D d;</span></span><br><span class="line">    <span class="comment">//E e;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    C c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>运行结果如下：<br><img src="https://img-blog.csdnimg.cn/20200805174233894.png" alt="运行结果"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>c++重载运算符时返回值为类的对象或者返回对象的引用</title>
    <url>/2020/08/02/c-%E9%87%8D%E8%BD%BD%E8%BF%90%E7%AE%97%E7%AC%A6%E6%97%B6%E8%BF%94%E5%9B%9E%E5%80%BC%E4%B8%BA%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%88%96%E8%80%85%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[<p>最终的目的是为了进行连续的运算</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">a = b + c + d; <span class="comment">//不只是两个对象相加，是为了两个以上的对象的相加</span></span><br></pre></td></tr></table></figure>
<p>以上面的代码为例，假设a,b,c,d都是同一个类（classA）的不同对象，假如我重载这个类的加号时，返回值类型不是此类或者他的引用，如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="keyword">operator</span>+(classA &amp;a, classA &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//加法运算</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>那么在我最上面的代码中，b + c 的值就为空（或者其他类型），那么这个得出来的值就没有办法继续和d来进行加法的运算，也没有办法赋值给a了，这也就无法实现我所期望的连续运算的目的。<br>所以，<font color="red">c++重载运算符时返回值为类的对象是为了实现连续的运算(大多数这种运算其实是赋值运算或者&lt;&lt;    &gt;&gt;)</font><br>如果你以后要重载运算符，有什么连续运算的需要，就可以使用这种方法，不过最好也要遵守c++中一些语法的规定，不要重载出来的东西让人摸不着头脑</p>
<p>那么，现在讲为什么有一些函数要返回对象的引用，这其实是为了提高程序的运行效率，众所周知，当一个函数返回一个值时，他并不是将你在此函数里面原有的你想要的那个值返回，而是将你想要的那个值，复制一下，然后把这个复制出来的值给返回，如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">classA <span class="keyword">operator</span>+(classA &amp;a, classA &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">	classA temp;</span><br><span class="line">	<span class="comment">//加法运算</span></span><br><span class="line">	<span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码最终返回的并不是你在函数里定义的那个temp，而是将temp复制了一份，将复制的那份返回了，函数里定义的那个temp在函数运行结束后就释放了。同理，就算你没有在函数里面新建东西，而是直接返回通过a和b运算出来的一些东西（<font color="red">或者你直接返回*this</font>），他也要复制一下。</p>
<p>所以，只要你不采用返回类的对象，而是返回类的对象的引用，就不会复制，也即不会调用类的复制构造函数，也即提升了程序的效率</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">classA &amp; <span class="keyword">operator</span>+(classA &amp;a, classA &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment">//加法运算</span></span><br><span class="line">	<span class="comment">//a.time = a.time + b.time; //假设time是此类的一个属性</span></span><br><span class="line">	<span class="comment">//return a;</span></span><br><span class="line">	<span class="comment">//加法只有这样可以实现连续的运算，有些鸡肋，但是=，&lt;&lt;，&gt;&gt;,就很好用了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><font color="red">所以，当你重载的运算符需要连续的运算时，你可以返回他的类的对象。如果你想要减少不必要的开销（复制构造函数），提高程序效率，并且你返回的对象是需要作为左值的话，那么你可以返回他的引用</font></p>
<p><font color="red">不过绝大部分  返回对象  或者  他的引用  实现连续运算，都是用在重载 赋值运算符= 或者 插入运算符&lt;&lt; 或者 提取运算符&gt;&gt; 中的。那里面比较好用，其他的如加法那些，连续运算就很鸡肋，也比较难实现，但是返回引用可以提升效率却是真真的好啊</font></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>Github免费图床搭建</title>
    <url>/2022/01/19/%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="0-Github免费图床搭建"><a href="#0-Github免费图床搭建" class="headerlink" title="0  Github免费图床搭建"></a>0  Github免费图床搭建</h1><h1 id="1-搭建准备"><a href="#1-搭建准备" class="headerlink" title="1  搭建准备"></a>1  搭建准备</h1><p>本次搭建需要的介质有：Github、Picgo、Typora</p>
<h2 id="1-1-Github"><a href="#1-1-Github" class="headerlink" title="1.1  Github"></a>1.1  Github</h2><p><a href="https://www.jsdelivr.com/">Github</a>是一个免费的代码托管平台，在本次的图床搭建中，我们会将图片上传到github上面进行保存。有些同学也会使用国内的Gitee作为保存图片的仓库，但是Gitee有一个问题就是当图片的容量大于1MB时，就会无法正常的显示在我们的博客上面，而Github则没有这个问题。</p>
<p>Github还有一个问题就是他的服务器在国外，当我们访问加载时速度可能会很慢，但是这时候我们就可以用<a href="https://www.jsdelivr.com/">jsDelivr</a>进行免费加速。大容量+高速度，一个高效的图床诞生了！</p>
<h2 id="1-2-Picgo"><a href="#1-2-Picgo" class="headerlink" title="1.2  Picgo"></a>1.2  Picgo</h2><p>我们的图床归根结底就是一个Github仓库，如果我们像传统地更新仓库一样更新图床，那么这个图床操作起来将会非常地繁琐。于是，<a href="https://molunerfinn.com/PicGo/">Picgo</a>诞生了，Picgo是一个开源图床工具，他可以很方便地帮助我们将图片更新到图床上面，是一个非常好用的软件。</p>
<h2 id="1-3-Typora"><a href="#1-3-Typora" class="headerlink" title="1.3  Typora"></a>1.3  Typora</h2><p><a href="https://www.typora.net/">Typora</a>是一款 markdown 编辑器，支持几乎所有的 markdown 格式，神器！</p>
<p>我们使用Typora来写博客，同时可以将Picgo集成到Typora上面，达到在Typora上面插入一张图片就可以自动上传到我们图床上的目的，使用起来非常的舒适。</p>
<h1 id="2-搭建步骤"><a href="#2-搭建步骤" class="headerlink" title="2  搭建步骤"></a>2  搭建步骤</h1><h2 id="2-1-Github步骤"><a href="#2-1-Github步骤" class="headerlink" title="2.1  Github步骤"></a>2.1  Github步骤</h2><h3 id="2-1-1-新建Github仓库"><a href="#2-1-1-新建Github仓库" class="headerlink" title="2.1.1  新建Github仓库"></a>2.1.1  新建Github仓库</h3><p>进入Github主页，点击新建仓库就可进入以下界面。</p>
<p><strong>注意：仓库名可以随意起，但是仓库权限一定要是公开的，否则我们将访问不到。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E6%96%B0%E5%BB%BAgithub%E4%BB%93%E5%BA%93202201182311644.png" alt="新建github仓库"></p>
<p><strong>创建好的仓库如下图所示</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E4%BB%93%E5%BA%93%E5%88%9B%E5%BB%BA%E6%88%90%E5%8A%9F202201182319431.png" alt="仓库创建成功"></p>
<h3 id="2-1-2-生成私人令牌Token"><a href="#2-1-2-生成私人令牌Token" class="headerlink" title="2.1.2  生成私人令牌Token"></a>2.1.2  生成私人令牌Token</h3><p>接下来我们需要生成私人令牌，这是为了给Picgo提供令牌，让他拥有可以往我们这个仓库上传文件的权限。</p>
<p>依次点击<strong>Settings，developer settings，personal assess tokens，Generate new token。</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E7%82%B9%E5%87%BBSettings202201182325630.png" alt="点击Settings"></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E7%82%B9%E5%87%BBDeveloper_settings202201182327407.png" alt="点击Developer_settings"></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E7%94%9F%E6%88%90token202201182328152.png" alt="生成token"></p>
<p>接着选择<strong>No expiration，repo</strong>两个选项。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/token%E9%87%8D%E8%A6%81%E9%80%89%E9%A1%B9202201182330247.png" alt="token重要选项"></p>
<p>最后拉到最下面点击<strong>Generate token</strong>生成令牌即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E7%94%9F%E6%88%90%E4%BB%A4%E7%89%8C202201182339829.png" alt="生成令牌"></p>
<p>令牌生成成功的结果如下图所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E4%BB%A4%E7%89%8C%E7%94%9F%E6%88%90%E7%BB%93%E6%9E%9C202201182343106.png" alt="令牌生成结果"></p>
<p><strong>注意：生成的令牌只会显示一次，记得要把它复制在记事本上，在接下来的步骤中要用到。</strong></p>
<h2 id="2-2-Picgo步骤"><a href="#2-2-Picgo步骤" class="headerlink" title="2.2  Picgo步骤"></a>2.2  Picgo步骤</h2><h3 id="2-2-1-下载Picgo"><a href="#2-2-1-下载Picgo" class="headerlink" title="2.2.1  下载Picgo"></a>2.2.1  下载Picgo</h3><p>我们直接进入<a href="https://molunerfinn.com/PicGo/">Picgo</a>的官网进行下载,我这里是Windows系统所以直接选择这个安装版下载即可,接下来就是一路傻瓜式安装直到成功为止。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/picgo%E4%B8%8B%E8%BD%BD202201190005502.png" alt="picgo下载"></p>
<h3 id="2-2-2-github-plus插件下载"><a href="#2-2-2-github-plus插件下载" class="headerlink" title="2.2.2  github-plus插件下载"></a>2.2.2  github-plus插件下载</h3><p>由于默认的github图床设置并不是很好用，所以我们需要到插件设置中下载github-plus插件来进行使用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/github-plus202201190016947.png" alt="github-plus"></p>
<p><strong>注意：这里需要提前安装 <code>node.js</code>，否则无法安装！</strong></p>
<p>下载好后，我们进入github-plus设置，将设置的各小项填写完成后再将此图床设置为默认图床，就可以使用了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/github-plus%E8%AE%BE%E7%BD%AE202201190029574.png" alt="github-plus设置"></p>
<p>以下是各选项所要填的信息：</p>
<ul>
<li><strong>repo</strong>：仓库全称，用户名/仓库名</li>
<li><strong>branch</strong>：填写<strong>main</strong>，有些教程会让我们填master，但是我试过不行，填main才可以成功上传。因为Github创建的仓库默认都是main分支了，不是master分支，所以设定分支名的地方要改为main。</li>
<li><strong>token</strong>：填写我们在上一大步骤中得到的仓库token</li>
<li><strong>path</strong>：填写我们保存图片的文件夹，可填img/</li>
<li><strong>customUrl</strong>：填写<a href="https://cdn.jsdelivr.net/gh/%E7%94%A8%E6%88%B7%E5%90%8D/%E4%BB%93%E5%BA%93%E5%90%8D%EF%BC%8C%E8%BF%99%E4%B8%AA%E6%96%B9%E6%B3%95%E5%8F%AF%E4%BB%A5%E4%B8%BA%E6%88%91%E4%BB%AC%E8%AE%BF%E9%97%AE%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E8%BF%9B%E8%A1%8C%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8A%A0%E9%80%9F%EF%BC%8C%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E3%80%82">https://cdn.jsdelivr.net/gh/用户名/仓库名，这个方法可以为我们访问加载图片进行免费的加速，非常好用。</a></li>
<li><strong>origin</strong>：选择github即可。</li>
</ul>
<p>以上的设置完成后，便可以到上传区进行拖拽上传，图床也就搭建完成了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E7%95%8C%E9%9D%A2202201190038653.png" alt="图片上传界面"></p>
<h2 id="2-3-Typora步骤"><a href="#2-3-Typora步骤" class="headerlink" title="2.3  Typora步骤"></a>2.3  Typora步骤</h2><p>有了可以上传的工具确实是很方便，但是每次我们要添加新的图片还是要自己托拉拽，长此以往，还是会感觉到很疲劳。幸好新版的Typora集成了图片上传到图床上的功能，我们只需要设置一下就可以在写博客的时候将我们的图片自动地上传到图床上面。</p>
<p><strong>点击偏好设置</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/Typora%E5%81%8F%E5%A5%BD%E8%AE%BE%E7%BD%AE202201190052356.png" alt="Typora偏好设置"></p>
<p>点击<strong>图像</strong>设置，<strong>上传服务</strong>选择<strong>PicGo（app）</strong>，<strong>PicGo路径</strong>选择我们<strong>电脑中PicGo的exe文件</strong>的路径。</p>
<p><img src="https://cdn.jsdelivr.net/gh/J-egrets/egretBaby/img/%E4%B8%8A%E4%BC%A0%E8%AE%BE%E7%BD%AE202201190053872.png" alt="上传设置"></p>
<p style = "color = red">上面的都设置好以后，我们就可以快乐地写博客啦！！！</p>]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>codeblocks编译运行c++文件显示“不支持的16位应用程序，与64位版本的Windows不兼容”的解决办法</title>
    <url>/2020/03/19/codeblocks%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8Cc-%E6%96%87%E4%BB%B6%E6%98%BE%E7%A4%BA%E2%80%9C%E4%B8%8D%E6%94%AF%E6%8C%81%E7%9A%8416%E4%BD%8D%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%EF%BC%8C%E4%B8%8E64%E4%BD%8D%E7%89%88%E6%9C%AC%E7%9A%84Windows%E4%B8%8D%E5%85%BC%E5%AE%B9%E2%80%9D%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>有一天我想写一个东西来实现一下自己脑子里的思路，编译运行的时候却显示了这个东西<img src="https://img-blog.csdnimg.cn/20200319143305983.bmp?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"><br>我上网查了很多，有人说应该把腾讯手游助手等腾讯的游戏软件卸载，可是等我卸载后却并没有解决问题。<br>后来，我突发奇想打开了以前写的cpp文件，发现他竟然能够编译运行！！！（卸载腾讯手游助手后）<br>我又创建了一个新的文件，发现竟然也能运行！！！<br>只有这一个cpp文件不能运行，于是我把这个cpp文件删除了，完美地解决了这个问题。</p>
<p>这可能因为腾讯手游助手等软件只要你运行过后，他就会修改你系统的某些东西。当你在  有腾讯手游助手  的背景下运行codeblocks的文件时，那么这个文件一但编译运行，他的内在就被修改了，即使你把腾讯手游助手卸载了，它也被修改了，所以这个文件就完了。（这就是一开始我以为卸载后没有解决问题的原因，因为我还在死扣那个坏文件）<br>但是当你把腾讯手游助手这类软件卸载了，再打开以前写的文件，由于他没有在 有腾讯手游助手  的背景下编译运行过，所以他没事，能够正常使用，同理，创建新文件能运行也是这个道理。<br>总的来说，应该就是腾讯手游助手这类软件为了游戏的正常使用而不得已修改一些系统的东西，造成了这个后果，将其卸载后再把不能运行的cpp（cbp）文件删除即可得到舒服的codeblocks使用环境了。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>codeblocks</tag>
      </tags>
  </entry>
  <entry>
    <title>typora使用基本语法</title>
    <url>/2020/08/16/typora%E4%BD%BF%E7%94%A8%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>在文章开头<em>（其实是任意位置，只不过习惯放在开头）</em>的地方键入[toc], 即可插入目录。</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>Ctrl + 任意数字键，为几级标题</p>
<h1 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h1><center>这段文本居中了</center>

<p>方法为&lt;center&gt;再加上他的反杠c</p>
<h1 id="加粗文本"><a href="#加粗文本" class="headerlink" title="加粗文本"></a>加粗文本</h1><p><strong>这就是加粗</strong></p>
<p>方法为****，开始两个星，结尾两个星。</p>
<p>或者Ctrl + B</p>
<h1 id="斜体文本"><a href="#斜体文本" class="headerlink" title="斜体文本"></a>斜体文本</h1><p><em>这就是斜体</em></p>
<p>方法为**，开头一个，结尾一个。</p>
<p>或者Ctrl + I</p>
<h1 id="删除文本"><a href="#删除文本" class="headerlink" title="删除文本"></a>删除文本</h1><p><del>这就是删除文本</del></p>
<p>方法为~~，开头两个，结尾两个。</p>
<h1 id="引用文本"><a href="#引用文本" class="headerlink" title="引用文本"></a>引用文本</h1><blockquote>
<p>这是一个引用块</p>
<p>他可以写很长</p>
<p>很长</p>
<p>长</p>
</blockquote>
<p>方法为&gt;+空格，就会自动出现。</p>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol>
<li>第一</li>
<li>第二</li>
<li>第三<ol>
<li>新行</li>
</ol>
</li>
</ol>
<p>方法为数字+ . + 空格。</p>
<p>多行列表在新行按tab键即可。</p>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>第一</li>
<li>第二</li>
<li>第三<ul>
<li>第3.3</li>
<li>3.4</li>
</ul>
</li>
</ul>
<p>方法为减号 + 空格。</p>
<p>多行同样操作方法，按tab键</p>
<h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><ul>
<li><input disabled="" type="checkbox"> 未完成</li>
<li><input checked="" disabled="" type="checkbox"> 已完成</li>
</ul>
<p>方法为无序列表后，再加[ <font color="red">（未完成）</font>，或者[X<font color="red">（已完成）</font>，再加空格。</p>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><h2 id="整块代码"><a href="#整块代码" class="headerlink" title="整块代码"></a>整块代码</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">function</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, baby!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">function</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这是代码块，方法为三个`, 或者三个~。<font color="red">半角输入</font></p>
<h2 id="短代码"><a href="#短代码" class="headerlink" title="短代码"></a>短代码</h2><p><code>print(&quot;Hello!&quot;)</code></p>
<p>这是短代码，方法为两个`，代码放在中间。</p>
<h1 id="表格块"><a href="#表格块" class="headerlink" title="表格块"></a>表格块</h1><table>
<thead>
<tr>
<th>这</th>
<th>是</th>
<th>一</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
<td>个</td>
</tr>
<tr>
<td></td>
<td></td>
<td>表</td>
</tr>
<tr>
<td></td>
<td></td>
<td>格</td>
</tr>
</tbody></table>
<p>方法为Ctrl + t。</p>
<h1 id="分割符号"><a href="#分割符号" class="headerlink" title="分割符号"></a>分割符号</h1><hr>
<hr>
<p>这是分隔符，方法为连续的-（减号），或者*。</p>
<h1 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h1><p><u>这句话有下划线</u></p>
<p>Ctrl + u或者<u></u>,中间为文本</p>
<h1 id="上标下标"><a href="#上标下标" class="headerlink" title="上标下标"></a>上标下标</h1><h2 id="上标"><a href="#上标" class="headerlink" title="上标"></a>上标</h2><p>2^6^</p>
<p>这是上标，方法为2 + ^ + 6 + ^</p>
<h2 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h2><p>H<del>2</del>O</p>
<p>这是下标，方法为H + ~ + 2 + ~ + O</p>
<p>注意：<font color="red">无论上标下标是什么，标记符~或^都要出现两次</font></p>
<h1 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h1><p>快捷键Ctrl + shift + I</p>
<h1 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h1><p><a href="https://www.google.com/">谷歌搜索</a></p>
<p>这是链接 ，方法为Ctrl + K，第一个[]内填链接名字，第二个填链接地址。<em>注意链接地址要加上https://</em></p>
<p><font color="red"><strong>注</strong>：按住Ctrl键+点击上面链接就可以直接访问该链接</font></p>
<h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><p>$$行内公式</p>
<p>$$$$行间公式，可按两个$$，再按回车</p>
<p>也可Ctrl + shift +m,要将输入法切换成系统英文，否则会打开输入法</p>
<p><font color="red">具体公式可用公式转换网站解决</font></p>
<h1 id="快捷键总结"><a href="#快捷键总结" class="headerlink" title="快捷键总结"></a>快捷键总结</h1><p>无序列表：输入-之后输入空格</p>
<p>有序列表：输入数字+“.”之后输入空格</p>
<p>任务列表：-[空格]空格 文字</p>
<p>标题：ctrl+数字</p>
<p>表格：ctrl+t</p>
<p>生成目录：[TOC]按回车</p>
<p>选中一整行：ctrl+l</p>
<p>选中单词：ctrl+d</p>
<p>选中相同格式的文字：ctrl+e</p>
<p>搜索：ctrl+f</p>
<p>替换：ctrl+h</p>
<p>引用：输入&gt;之后输入空格</p>
<p>加粗：ctrl+b</p>
<p>倾斜：ctrl+i</p>
<p>下划线：ctrl+u</p>
<p>插入图片：直接拖动到指定位置即可或者ctrl+shift+I</p>
<p>插入链接：ctrl+K</p>
]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>实验一：顺序表及其应用——顺序表的基本操作及有序表的合并</title>
    <url>/2021/01/28/%E5%AE%9E%E9%AA%8C%E4%B8%80%EF%BC%9A%E9%A1%BA%E5%BA%8F%E8%A1%A8%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E9%A1%BA%E5%BA%8F%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%8F%8A%E6%9C%89%E5%BA%8F%E8%A1%A8%E7%9A%84%E5%90%88%E5%B9%B6/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>帮助学生熟练掌握线性表的顺序存储结构（顺序表）的基本操作及其简单应用，实现两个有序表的合并操作。</p>
<h1 id="【实验内容及要求】"><a href="#【实验内容及要求】" class="headerlink" title="【实验内容及要求】"></a>【实验内容及要求】</h1><ol>
<li>实现顺序表的各种基本操作，包括创建顺序表、插入和删除指定序号的元素、读取表元、获取最大和最小值元素、查找元素、表元素的排序、表元素逆置、顺序表的输入和输出等等；</li>
<li>实现两个有序顺序表的合并。问题描述：创建两个有序的顺序表L1和L2，表中元素值由键盘随机输入，再将它们合并为一个新的顺序表L3,合并后L3仍然有序（重复元素只保留一个），最后输出顺序表中的各个元素值。</li>
<li>设计测试用例，测试基本操作和合并操作的正确性。</li>
<li>实现说明：这是第一个上机描述和实现的数据结构类型，旨在让学生加深对数据结构、逻辑结构、存储结构和算法及算法时间复杂度等概念的理解。<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxlength 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="comment">//int data[Maxlength]; // 顺序表元素</span></span><br><span class="line">    <span class="keyword">int</span> * data;</span><br><span class="line">    <span class="keyword">int</span> length; <span class="comment">// 当前长度</span></span><br><span class="line">&#125;SqList; <span class="comment">// 结构体定义</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 创建顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inputNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 修改指定位置元素的数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showNum</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 展示顺序表元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 在指定位置插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 删除指定位置元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkNum</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> n)</span></span>; <span class="comment">// 读取指定位置元素的数据</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getMaxAndMinNum</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> &amp;max, <span class="keyword">int</span>&amp;min)</span></span>; <span class="comment">//获取最大和最小元素，并分别赋值给max和min</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x)</span></span>; <span class="comment">// 查找指定元素的索引，并返回他在顺序表中的位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 排序表元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inverseList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 逆置顺序表</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqList sqList; <span class="comment">// 定义顺序表</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">createList</span>(sqList, <span class="number">10</span>); <span class="comment">// 创建顺序表</span></span><br><span class="line">    <span class="built_in">showNum</span>(sqList); <span class="comment">// 展示顺序表元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">inputNum</span>(sqList,<span class="number">110</span>,<span class="number">5</span>); <span class="comment">// 修改顺序表的第5个元素的值</span></span><br><span class="line">    <span class="built_in">showNum</span>(sqList); <span class="comment">// 展示顺序表元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">checkNum</span>(sqList,<span class="number">5</span>); <span class="comment">// 读取顺序表中的第5个元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">insertNum</span>(sqList,<span class="number">120</span>,<span class="number">4</span>); <span class="comment">// 在顺序表的第4个位置插入元素</span></span><br><span class="line">    <span class="built_in">showNum</span>(sqList); <span class="comment">// 展示顺序表元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">sortList</span>(sqList); <span class="comment">// 将顺序表排序</span></span><br><span class="line">    <span class="built_in">showNum</span>(sqList); <span class="comment">// 展示顺序表元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">deleteNum</span>(sqList,<span class="number">10</span>); <span class="comment">// 删除顺序表中的第10号元素</span></span><br><span class="line">    <span class="built_in">showNum</span>(sqList); <span class="comment">// 展示顺序表元素</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">findNum</span>(sqList,<span class="number">5</span>); <span class="comment">// 寻找顺序表中是否有元素12</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> maxNum, minNum;</span><br><span class="line">    <span class="built_in">getMaxAndMinNum</span>(sqList,maxNum,minNum);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;此顺序表的最大元素是&quot;</span> &lt;&lt; maxNum &lt;&lt; <span class="string">&quot;, 最小元素是&quot;</span> &lt;&lt; minNum &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">inverseList</span>(sqList);</span><br><span class="line">    <span class="built_in">showNum</span>(sqList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span> <span class="comment">// 创建顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L.data = <span class="keyword">new</span> <span class="keyword">int</span>[Maxlength];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        L.data[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inputNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> <span class="comment">// 修改指定位置元素的数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">1</span> || n &gt; L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;索引异常，无法修改&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//修改失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    L.data[n<span class="number">-1</span>] = x;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 修改成功，返回true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showNum</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 展示顺序表元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;顺序表的元素依次为: &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; L.data[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insertNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> <span class="comment">// 在指定位置插入元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length == Maxlength)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;顺序表元素已满，无法添加!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 插入失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">1</span> || n &gt; L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;索引异常，无法添加&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 插入失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = L.length <span class="number">-1</span>; i &gt;= n - <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        L.data[i+<span class="number">1</span>] = L.data[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    L.data[n<span class="number">-1</span>] = x;</span><br><span class="line">    L.length++;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;插入成功!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 插入成功，返回true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deleteNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span> <span class="comment">// 删除指定位置元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;顺序表无元素，无法删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 删除失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">1</span> || n &gt; L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;索引异常，无法删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 删除失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n<span class="number">-1</span>; i &lt; L.length - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        L.data[i] = L.data[i+<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length--;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;删除成功!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 删除成功，返回true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkNum</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> n)</span> <span class="comment">// 读取指定位置元素的数据</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;顺序表的长度为0，无法查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 读取失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">1</span> || n &gt; L.length)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;您指定的元素索引超出了范围&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 读取失败，返回false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;号元素为: &quot;</span> &lt;&lt; L.data[n<span class="number">-1</span>] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getMaxAndMinNum</span><span class="params">(SqList &amp;L,<span class="keyword">int</span> &amp;max, <span class="keyword">int</span>&amp;min)</span> <span class="comment">//获取最大和最小元素，并分别赋值给max和min</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(L.length &lt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;顺序表为空，无最值！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    max = min = L.data[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; L.data[i])</span><br><span class="line">        &#123;</span><br><span class="line">            max = L.data[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(min &gt; L.data[i])</span><br><span class="line">        &#123;</span><br><span class="line">            min = L.data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findNum</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> x)</span> <span class="comment">// 查找指定元素的索引，并返回他在顺序表中的位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L.data[i] == x)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;元素&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;是顺序表中的第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个元素&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;元素&quot;</span> &lt;&lt; x &lt;&lt; <span class="string">&quot;不在顺序表中!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">// 此元素不在表中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortList</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 排序表元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> end = L.length - <span class="number">1</span>; end &gt; <span class="number">0</span>; end--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; end; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(L.data[j] &gt; L.data[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = L.data[j];</span><br><span class="line">                L.data[j] = L.data[j+<span class="number">1</span>];</span><br><span class="line">                L.data[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;排序完成!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inverseList</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 逆置顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length / <span class="number">2</span>; i ++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = L.data[i];</span><br><span class="line">        L.data[i] = L.data[L.length - <span class="number">1</span> - i];</span><br><span class="line">        L.data[L.length - <span class="number">1</span> - i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;逆置成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Maxlength 20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> * data; <span class="comment">// 顺序表元素</span></span><br><span class="line">    <span class="keyword">int</span> length; <span class="comment">// 当前长度</span></span><br><span class="line">&#125;SqList; <span class="comment">// 结构体定义</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 创建顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showNum</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 展示顺序表元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">combineList</span><span class="params">(SqList L1, SqList L2, SqList &amp;L)</span></span>; <span class="comment">// 合并顺序表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eliminateRepeatingElements</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 消除重复元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortList</span><span class="params">(SqList &amp;L)</span></span>; <span class="comment">// 排序表元素</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqList L1, L2, L3;</span><br><span class="line">    <span class="keyword">int</span> n1, n2;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入你的第一个和第二个顺序表的长度: &quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; n1 &gt;&gt; n2;</span><br><span class="line">    <span class="built_in">createList</span>(L1,n1);</span><br><span class="line">    <span class="built_in">createList</span>(L2,n2);</span><br><span class="line">    <span class="built_in">combineList</span>(L1,L2,L3);</span><br><span class="line">    <span class="built_in">showNum</span>(L3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createList</span><span class="params">(SqList &amp;L, <span class="keyword">int</span> n)</span> <span class="comment">// 创建顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L.data = <span class="keyword">new</span> <span class="keyword">int</span>[Maxlength];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入你要为顺序表填充的值: &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; L.data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showNum</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 展示顺序表元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;顺序表的元素依次为: &quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; L.data[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">combineList</span><span class="params">(SqList L1, SqList L2, SqList &amp;L)</span> <span class="comment">// 合并顺序表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L1.length + L2.length &gt; Maxlength)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;合并的两个顺序表长度超出范围，无法合并!&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//超出最大存储空间</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    L.data = <span class="keyword">new</span> <span class="keyword">int</span>[Maxlength]; <span class="comment">// 为新顺序表分配空间</span></span><br><span class="line">    <span class="keyword">int</span> index1 = <span class="number">0</span>, index2 = <span class="number">0</span>, index = <span class="number">0</span>; <span class="comment">// 根据序号依次为三顺序表的实际下标</span></span><br><span class="line">    <span class="keyword">while</span>(index1 &lt; L1.length &amp;&amp; index2 &lt; L2.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(L1.data[index1] &lt; L2.data[index2])</span><br><span class="line">        &#123;</span><br><span class="line">            L.data[index++] = L1.data[index1++];</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(L1.data[index1] == L2.data[index2])</span><br><span class="line">        &#123;</span><br><span class="line">            L.data[index] = L1.data[index1];</span><br><span class="line">            index++;</span><br><span class="line">            index1++;</span><br><span class="line">            index2++;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            L.data[index++] = L2.data[index2++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(index1 &lt; L1.length)</span><br><span class="line">    &#123;</span><br><span class="line">        L.data[index++] = L1.data[index1++];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(index2 &lt; L2.length)</span><br><span class="line">    &#123;</span><br><span class="line">        L.data[index++] = L2.data[index2++];</span><br><span class="line">    &#125;</span><br><span class="line">    L.length = index;</span><br><span class="line">    <span class="built_in">sortList</span>(L);</span><br><span class="line">    <span class="built_in">eliminateRepeatingElements</span>(L);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortList</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 排序表元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> end = L.length - <span class="number">1</span>; end &gt; <span class="number">0</span>; end--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; end; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(L.data[j] &gt; L.data[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = L.data[j];</span><br><span class="line">                L.data[j] = L.data[j+<span class="number">1</span>];</span><br><span class="line">                L.data[j+<span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//cout &lt;&lt; &quot;排序完成!&quot; &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eliminateRepeatingElements</span><span class="params">(SqList &amp;L)</span> <span class="comment">// 消除重复元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; L.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(L.data[i] == L.data[j])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt; L.length; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    L.data[k<span class="number">-1</span>] = L.data[k];</span><br><span class="line">                &#125;</span><br><span class="line">                L.length--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt; L.length &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>实验三：栈的应用——算术表达式求值</title>
    <url>/2021/01/30/%E5%AE%9E%E9%AA%8C%E4%B8%89%EF%BC%9A%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E7%AE%97%E6%9C%AF%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>使学生深入了解栈的特性，以便在实际问题背景下灵活运用栈，同时还将巩固对这种结构的构造方法的掌握及基本操作的实现。</p>
<h1 id="【实验内容】"><a href="#【实验内容】" class="headerlink" title="【实验内容】"></a>【实验内容】</h1><ol>
<li>问题描述：表达式计算是实现程序设计语言的基本问题之一，也是栈的应用的一个典型的例子。设计一个程序，演示用算符优先法对算术表达式求值的过程。</li>
<li>基本要求：以字符序列的形式从终端输入语法正确的、不含变量的整数表达式。利用教科书表3.1给出的算符优先关系，实现对算术四则混合运算表达式的求值，并仿照教科书的例3-1演示在求值中运算符栈、运算数栈、输入字符和主要操作的变化过程。</li>
<li>测试数据：教科书例3-1的算术表达式3*(7-2),以及下列表达式：<br>8；1+2+3+4；88-1<em>5；1024/4</em>8；(20+2)<em>(6/2)；3-3-3；8/(9-9)；2</em>(6+2*(3+6*(6+6)))；(((6+6)*6+3)*2+6)*2。</li>
<li>实现提示：　　<br>（１）、采用优先级法，设置运算符栈和运算数栈，先将表达式转换成后缀表示，然后求值。<br>（２）、在读入表达式的字符序列的同时，完成运算符和运算数（整数）的识别处理，以及相应的运算。<br>（３）、在识别出运算数的同时，要将其字符序列形式转换成整数形式。<br>（４）、在程序的适当位置输出运算符栈、运算数栈、输入字符和主要操作的内容。</li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackNode</span> //栈结点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    T data;</span><br><span class="line">    StackNode&lt;T&gt; *next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LinkStack</span> // 链栈</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    StackNode&lt;T&gt; *top;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> priority[<span class="number">7</span>][<span class="number">7</span>] = &#123;</span><br><span class="line">        &#123;<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">1</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">-1</span>, <span class="number">1</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">-1</span>, <span class="number">1</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>,  <span class="number">-2</span>&#125;,</span><br><span class="line">        &#123;<span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">-2</span>, <span class="number">1</span>,  <span class="number">1</span>&#125;,</span><br><span class="line">        &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">0</span>&#125;</span><br><span class="line">&#125;;    <span class="comment">//优先级关系</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InitStack</span><span class="params">(LinkStack&lt;T&gt; *s)</span></span>; <span class="comment">// 初始化栈</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">push</span><span class="params">(LinkStack&lt;T&gt; *s, T data)</span></span>; <span class="comment">// 入栈</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(LinkStack&lt;T&gt; *s)</span></span>; <span class="comment">// 出栈</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StackEmpty</span><span class="params">(LinkStack&lt;T&gt; *s)</span></span>; <span class="comment">// 判断栈是否为空</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">GetTop</span><span class="params">(LinkStack&lt;T&gt; *s)</span></span>; <span class="comment">// 返回栈顶元素</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetPriority</span><span class="params">(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</span></span>; <span class="comment">// 运算符优先级比较</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Operate</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">char</span> theta, <span class="keyword">int</span> b)</span></span>; <span class="comment">// 运算</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T1, class T2&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetExpressionValue</span><span class="params">(LinkStack&lt;T1&gt; *OPNd, LinkStack&lt;T2&gt; *OPTr)</span></span>; <span class="comment">// 总计算函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    LinkStack&lt;<span class="keyword">int</span>&gt; *OPNd = <span class="keyword">new</span> LinkStack&lt;<span class="keyword">int</span>&gt;;</span><br><span class="line">    LinkStack&lt;<span class="keyword">char</span>&gt; *OPTr = <span class="keyword">new</span> LinkStack&lt;<span class="keyword">char</span>&gt;;</span><br><span class="line">    <span class="built_in">InitStack</span>(OPNd); <span class="comment">// 初始化空栈</span></span><br><span class="line">    <span class="built_in">InitStack</span>(OPTr); <span class="comment">// 初始化空栈</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">push</span>(OPTr, <span class="string">&#x27;#&#x27;</span>); <span class="comment">// 预先压入一个#，为了与表达式最后的#匹配</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入你要计算的表达式，记得在表达式的末尾加上&#x27;#&#x27;! &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">GetExpressionValue</span>(OPNd, OPTr); <span class="comment">// 开始计算</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;答案为：&quot;</span> &lt;&lt; <span class="built_in">GetTop</span>(OPNd); <span class="comment">// 输出运算结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">InitStack</span><span class="params">(LinkStack&lt;T&gt; *s)</span> <span class="comment">// 初始化栈</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//s-&gt;top = new StackNode&lt;T&gt;;</span></span><br><span class="line">    s-&gt;top = <span class="literal">NULL</span>;</span><br><span class="line">    s-&gt;count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">push</span><span class="params">(LinkStack&lt;T&gt; *s, T data)</span> <span class="comment">// 入栈</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    StackNode&lt;T&gt; *p = <span class="keyword">new</span> StackNode&lt;T&gt;;</span><br><span class="line">    p-&gt;data = data;</span><br><span class="line">    p-&gt;next = s-&gt;top;</span><br><span class="line">    s-&gt;top = p;</span><br><span class="line">    s-&gt;count++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(LinkStack&lt;T&gt; *s)</span> <span class="comment">// 出栈</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">StackEmpty</span>(s)) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;栈为空，无元素可弹出！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    StackNode&lt;T&gt; *p = s-&gt;top;</span><br><span class="line">    s-&gt;top = p-&gt;next;</span><br><span class="line">    s-&gt;count--;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">StackEmpty</span><span class="params">(LinkStack&lt;T&gt; *s)</span> <span class="comment">// 判断栈是否为空</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s-&gt;top == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function">T <span class="title">GetTop</span><span class="params">(LinkStack&lt;T&gt; *s)</span> <span class="comment">// 返回栈顶元素</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s-&gt;top == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;栈为空，无栈顶元素！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s-&gt;top-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T1, class T2&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetExpressionValue</span><span class="params">(LinkStack&lt;T1&gt; *OPNd, LinkStack&lt;T2&gt; *OPTr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> theta; <span class="comment">// 记录运算符</span></span><br><span class="line">    <span class="keyword">char</span> ch; <span class="comment">// 记录每次输入的字符</span></span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; ch; <span class="comment">//载入第一个字符</span></span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;#&#x27;</span> || <span class="built_in">GetTop</span>(OPTr) != <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">            <span class="keyword">int</span> data = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">                data = data * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                cin &gt;&gt; ch;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">push</span>(OPNd, data); <span class="comment">// 将最新的数字压入栈中</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (<span class="built_in">GetPriority</span>(<span class="built_in">GetTop</span>(OPTr), ch)) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">-1</span>: <span class="comment">// 栈顶运算符优先级小于新运算符</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">push</span>(OPTr, ch);</span><br><span class="line">                    cin &gt;&gt; ch;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>: <span class="comment">// 栈顶运算符优先级等于新运算符，只有两种情况，（）和##，##不会出现，所以只会是（），所以只需弹出左括号即可</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">pop</span>(OPTr);</span><br><span class="line">                    cin &gt;&gt; ch;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>: <span class="comment">// 栈顶运算符优先级大于新运算符，开始计算</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> a, b;</span><br><span class="line">                    theta = <span class="built_in">GetTop</span>(OPTr); <span class="comment">// 获取栈顶运算符</span></span><br><span class="line">                    <span class="built_in">pop</span>(OPTr);</span><br><span class="line">                    b = <span class="built_in">GetTop</span>(OPNd); <span class="comment">// 获取此时栈顶第一号数据</span></span><br><span class="line">                    <span class="built_in">pop</span>(OPNd);</span><br><span class="line">                    a = <span class="built_in">GetTop</span>(OPNd); <span class="comment">// 获取此时栈顶第二号数据</span></span><br><span class="line">                    <span class="built_in">pop</span>(OPNd);</span><br><span class="line">                    <span class="built_in">push</span>(OPNd, <span class="built_in">Operate</span>(a, theta, b)); <span class="comment">// 将运算结果压入栈中</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetPriority</span><span class="params">(<span class="keyword">char</span> a, <span class="keyword">char</span> b)</span> <span class="comment">// 运算符优先级比较</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (a) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">            i = <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            i = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            i = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            i = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            i = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (b) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;#&#x27;</span>:</span><br><span class="line">            j = <span class="number">6</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            j = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            j = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            j = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            j = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            j = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> priority[i][j];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Operate</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">char</span> theta, <span class="keyword">int</span> b)</span> <span class="comment">// 运算</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (theta) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            res = a + b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            res = a - b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            res = a * b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;分母为零，运算出错！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                res = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res = a / b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>实验六：图及其应用——图的遍历</title>
    <url>/2021/02/03/%E5%AE%9E%E9%AA%8C%E5%85%AD%EF%BC%9A%E5%9B%BE%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E5%9B%BE%E7%9A%84%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>使学生深入了解图结构的特点，掌握创建图的各种存储结构的方法；同时深刻理解图的DFS和BFS遍历过程。</p>
<h1 id="【实验内容】"><a href="#【实验内容】" class="headerlink" title="【实验内容】"></a>【实验内容】</h1><ol>
<li>问题描述：很多涉及图上操作的算法都是以图的遍历操作为基础的。试写一个程序，演示在连通的无向图上访问全部结点的操作。</li>
<li>基本要求：以邻接表为存储结构，实现连通无向图的深度优先和广度优先遍历。分别输出每种遍历下的结点访问序列和相应生成树的边集。</li>
<li>实现提示：设图的结点不超过30个，每个结点用一个编号表示（如果一个图有n个结点，则它们的编号分别为1,2,…,n）。通过输入图的全部边输入一个图，每个边为一个数对，可以对边的输入顺序作出某种限制，注意，生成树的边是有向边，端点顺序不能颠倒。</li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 9 15</span></span><br><span class="line"><span class="comment">A B C D E F G H I</span></span><br><span class="line"><span class="comment">A B</span></span><br><span class="line"><span class="comment">A F</span></span><br><span class="line"><span class="comment">B G</span></span><br><span class="line"><span class="comment">G F</span></span><br><span class="line"><span class="comment">B C</span></span><br><span class="line"><span class="comment">B I</span></span><br><span class="line"><span class="comment">G D</span></span><br><span class="line"><span class="comment">G H</span></span><br><span class="line"><span class="comment">F E</span></span><br><span class="line"><span class="comment">C I</span></span><br><span class="line"><span class="comment">C D</span></span><br><span class="line"><span class="comment">I D</span></span><br><span class="line"><span class="comment">D H</span></span><br><span class="line"><span class="comment">D E</span></span><br><span class="line"><span class="comment">H E</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Queue</span> // 队列</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    T value;</span><br><span class="line">    Queue&lt;T&gt; * next;</span><br><span class="line">    Queue&lt;T&gt; * front, * rear;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EdgeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> adjvex; <span class="comment">// 邻接点下标</span></span><br><span class="line">    EdgeNode * next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">VertexNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    EdgeNode * firstEdge;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Graph</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    VertexNode * adjList;</span><br><span class="line">    <span class="keyword">int</span> numVertexs, numEdges; <span class="comment">// 顶点数，边数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(Queue&lt;T&gt; &amp;s)</span></span>; <span class="comment">// 初始化队列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enQueue</span><span class="params">(Queue&lt;T&gt; &amp;s, T e)</span></span>; <span class="comment">// 入列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deQueue</span><span class="params">(Queue&lt;T&gt; &amp;s, T &amp;e)</span></span>; <span class="comment">// 出列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QEmpty</span><span class="params">(Queue&lt;T&gt; s)</span></span>; <span class="comment">// 判断队列是否为空</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateALGraph</span><span class="params">(Graph * G)</span></span>; <span class="comment">// 创建图</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(Graph * G, <span class="keyword">char</span> ch)</span></span>; <span class="comment">// 寻找字符所在顶点的下标</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(Graph * G, <span class="keyword">int</span> i)</span></span>; <span class="comment">// 深度优先搜索遍历递归处</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFSTraverse</span><span class="params">(Graph * G)</span></span>; <span class="comment">// 深度优先搜索</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFSTraverse</span><span class="params">(Graph *G)</span></span>; <span class="comment">// 广度优先搜索</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Graph * G = <span class="keyword">new</span> Graph;</span><br><span class="line">    <span class="built_in">CreateALGraph</span>(G);</span><br><span class="line">    <span class="built_in">DFSTraverse</span>(G);</span><br><span class="line">    <span class="built_in">BFSTraverse</span>(G);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateALGraph</span><span class="params">(Graph * G)</span> <span class="comment">// 创建图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> numVexs, numEdges; <span class="comment">// 顶点数，边数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入顶点数和边数：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; numVexs &gt;&gt; numEdges;</span><br><span class="line"></span><br><span class="line">    G-&gt;adjList = <span class="keyword">new</span> VertexNode[numVexs];</span><br><span class="line">    G-&gt;numVertexs = numVexs;</span><br><span class="line">    G-&gt;numEdges = numEdges;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入你的图的顶点的数据：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; G-&gt;adjList[i].data;</span><br><span class="line">        G-&gt;adjList[i].firstEdge = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入你的图中的边，输入格式只需输入这条边所连接的两个顶点，比如边(a,b)，只需输入：a b，即可。&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numEdges; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> vex1, vex2; <span class="comment">// 边的两个端点</span></span><br><span class="line">        cin &gt;&gt; vex1 &gt;&gt; vex2;</span><br><span class="line">        <span class="keyword">int</span> index1, index2;</span><br><span class="line">        index1 = <span class="built_in">find</span>(G,vex1); <span class="comment">//顶点1的下标</span></span><br><span class="line">        index2 = <span class="built_in">find</span>(G,vex2); <span class="comment">//顶点2的下标</span></span><br><span class="line"></span><br><span class="line">        EdgeNode * e = <span class="keyword">new</span> EdgeNode;</span><br><span class="line">        e-&gt;adjvex = index1;</span><br><span class="line">        e-&gt;next = G-&gt;adjList[index2].firstEdge;</span><br><span class="line">        G-&gt;adjList[index2].firstEdge = e;</span><br><span class="line"></span><br><span class="line">        e = <span class="keyword">new</span> EdgeNode;</span><br><span class="line">        e-&gt;adjvex = index2;</span><br><span class="line">        e-&gt;next = G-&gt;adjList[index1].firstEdge;</span><br><span class="line">        G-&gt;adjList[index1].firstEdge = e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(Graph * G, <span class="keyword">char</span> ch)</span> <span class="comment">// 寻找字符所在顶点的下标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(ch == G-&gt;adjList[i].data)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;未在图中找到所要寻找的顶点！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> * visitedDFS; <span class="comment">// 深度优先搜索遍历数组标志</span></span><br><span class="line">string DFSSpanningTree;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(Graph * G, <span class="keyword">int</span> i)</span> <span class="comment">// 深度优先搜索遍历递归处</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    EdgeNode * p =G-&gt;adjList[i].firstEdge;</span><br><span class="line">    visitedDFS[i] = <span class="literal">true</span>;</span><br><span class="line">    cout &lt;&lt; G-&gt;adjList[i].data &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visitedDFS[p-&gt;adjvex])</span><br><span class="line">        &#123;</span><br><span class="line">            DFSSpanningTree = DFSSpanningTree + <span class="string">&quot;(&quot;</span> + G-&gt;adjList[i].data + <span class="string">&quot;,&quot;</span> + G-&gt;adjList[p-&gt;adjvex].data + <span class="string">&quot;) &quot;</span>;</span><br><span class="line">            <span class="built_in">DFS</span>(G,p-&gt;adjvex);</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFSTraverse</span><span class="params">(Graph * G)</span> <span class="comment">// 深度优先搜索</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;深度优先搜索：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    visitedDFS = <span class="keyword">new</span> <span class="keyword">bool</span>[G-&gt;numVertexs];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        visitedDFS[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visitedDFS[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">DFS</span>(G,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;边集：&quot;</span> &lt;&lt; DFSSpanningTree &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> * visitedBFS; <span class="comment">// 广度优先搜索遍历数组标志</span></span><br><span class="line">string BFSSpanningTree;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFSTraverse</span><span class="params">(Graph *G)</span> <span class="comment">// 广度优先搜索</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;广度优先搜索：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    Queue&lt;<span class="keyword">int</span>&gt; queue;</span><br><span class="line">    <span class="built_in">InitQueue</span>(queue);</span><br><span class="line"></span><br><span class="line">    visitedBFS = <span class="keyword">new</span> <span class="keyword">bool</span>[G-&gt;numVertexs];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        visitedBFS[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; G-&gt;numVertexs; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!visitedBFS[i])</span><br><span class="line">        &#123;</span><br><span class="line">            visitedBFS[i] = <span class="literal">true</span>;</span><br><span class="line">            cout &lt;&lt; G-&gt;adjList[i].data &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="built_in">enQueue</span>(queue,i);</span><br><span class="line">            <span class="keyword">while</span>(!<span class="built_in">QEmpty</span>(queue))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">deQueue</span>(queue,i);</span><br><span class="line">                EdgeNode * p = G-&gt;adjList[i].firstEdge;</span><br><span class="line">                <span class="keyword">while</span>(p)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(!visitedBFS[p-&gt;adjvex])</span><br><span class="line">                    &#123;</span><br><span class="line">                        visitedBFS[p-&gt;adjvex] = <span class="literal">true</span>;</span><br><span class="line">                        cout &lt;&lt; G-&gt;adjList[p-&gt;adjvex].data &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                        BFSSpanningTree = BFSSpanningTree + <span class="string">&quot;(&quot;</span> + G-&gt;adjList[i].data + <span class="string">&quot;,&quot;</span> + G-&gt;adjList[p-&gt;adjvex].data + <span class="string">&quot;) &quot;</span>;</span><br><span class="line">                        <span class="built_in">enQueue</span>(queue,p-&gt;adjvex);</span><br><span class="line">                    &#125;</span><br><span class="line">                    p = p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;边集：&quot;</span> &lt;&lt; BFSSpanningTree &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitQueue</span><span class="params">(Queue&lt;T&gt; &amp;s)</span> <span class="comment">// 初始化队列</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s.front = <span class="keyword">new</span> Queue&lt;T&gt;;</span><br><span class="line">    s.rear = s.front;</span><br><span class="line">    s.front-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enQueue</span><span class="params">(Queue&lt;T&gt; &amp;s, T e)</span> <span class="comment">// 入列</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Queue&lt;T&gt; * p = <span class="keyword">new</span> Queue&lt;T&gt;;</span><br><span class="line">    p-&gt;value = e;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    s.rear-&gt;next = p;</span><br><span class="line">    s.rear = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">deQueue</span><span class="params">(Queue&lt;T&gt; &amp;s, T &amp;e)</span> <span class="comment">// 出列</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">QEmpty</span>(s))</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;队列为空！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e = s.front-&gt;next-&gt;value;<span class="comment">//获取数据并传递给e,头节点不存放数据</span></span><br><span class="line">    Queue&lt;T&gt; * p;</span><br><span class="line">    p = s.front-&gt;next;</span><br><span class="line">    s.front-&gt;next = s.front-&gt;next-&gt;next;<span class="comment">//指向下一块地址</span></span><br><span class="line">    <span class="keyword">if</span> (s.front-&gt;next == <span class="literal">NULL</span>)<span class="comment">//如果链队空了，则队尾指针指向队头指针</span></span><br><span class="line">    &#123;</span><br><span class="line">        s.rear = s.front;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">delete</span> p;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QEmpty</span><span class="params">(Queue&lt;T&gt; s)</span> <span class="comment">// 判断队列是否为空</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s.front-&gt;next==<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>实验五：树及其应用——哈夫曼树</title>
    <url>/2021/02/02/%E5%AE%9E%E9%AA%8C%E4%BA%94%EF%BC%9A%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>通过本次实验使学生了解哈夫曼树的结构特性及其基本操作的实现过程，同时掌握在实际问题背景下的应用开发能力。</p>
<h1 id="【实验内容】"><a href="#【实验内容】" class="headerlink" title="【实验内容】"></a>【实验内容】</h1><ol>
<li>问题描述：利用哈夫曼编码进行通信可以大大提高信道利用率，缩短信息传输时间，降低传输成本。但是，这要求在发送端通过一个编码系统对待传数据预先编码，在接收端将传来的数据进行译码（复原）。对于双工信道（即可以双向传输信息的信道），每端都需要一个完整的编／译码系统。试为这样的信息收发站写一个哈夫曼码的编／译码系统。</li>
<li>基本要求：<br>　　一个完整的系统应具有以下功能：<br>（１）、Ｉ：初始化（Initialization）。从终端读入字符集大小n,以及n个字符和n个权值，建立哈夫曼树，并将它存于文件hfmTree中。<br>（２）、Ｅ：编码（Encoding）。利用以建好的哈夫曼树（如不在内存，则从文件hfmTree中读入），对文件ToBeTran中的正文进行编码，然后将结果存入文件CodeFile中。<br>（３）、Ｄ：译码（Decoding）。利用已建好的哈夫曼树将文件CodeFile中的代码进行译码，结果存入文件TextFile中。<br>（４）、Ｐ：印代码文件（Print）。将文件CodeFile以紧凑格式显示在终端上，每行50个代码。同时将此字符形式的编码文件写入文件CodePrin中。<br>（５）、Ｔ：印哈夫曼树（Tree printing）。将已在内存中的哈夫曼树以直观的方式（树或凹入表形式）显示在终端上，同时将此字符形式的哈夫曼树写入文件TreePrint中。</li>
<li>测试数据：见上机指导书Ｐ149测试数据。（此处测试数据写在代码的首部）</li>
<li>实现提示：<br>　（1）、用户界面可以设计为“菜单”方式：显示上述功能符号，再加上“Ｑ”，表示退出运行Quit。请用户键入一个选择功能符。此功能执行完毕后再显示此菜单，直至某次用户选择了“Ｑ”为止。<br>　（2）、在程序的一次执行过程中，第一次执行I,D或Ｃ命令之后，哈夫曼树已经在内存了，不必读入。每次执行中不一定执行Ｉ命令，因为文件hfmTree可能早已建好。 </li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXVALUE 2147483647</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 27</span></span><br><span class="line"><span class="comment"> * 空格(需要你打一个真的空格，然后再输入后面的英文字母)ABCDEFGHIJKLMNOPQRSTUVWXYZ</span></span><br><span class="line"><span class="comment"> * 186 64 13 22 32 103 21 15 47 57 1 5 32 20 57 63 15 1 48 51 80 23 8 18 1 16 1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> data; <span class="comment">// 数据</span></span><br><span class="line">    <span class="keyword">int</span> weight; <span class="comment">// 权值</span></span><br><span class="line">    <span class="keyword">int</span> parent, lChild, rChild; <span class="comment">// 双亲位置，左孩子位置，右孩子位置</span></span><br><span class="line">    string code; <span class="comment">// 哈夫曼编码</span></span><br><span class="line">&#125; HTNode, *HuffmanTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(HuffmanTree &amp;HT, <span class="keyword">int</span> &amp;n)</span></span>; <span class="comment">// 初始化哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">StorageToHfmTree</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> m)</span></span>; <span class="comment">// 存储哈夫曼树到hfmtree文件中</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HfmTreeToHuffmanTree</span><span class="params">(HuffmanTree &amp;HT,<span class="keyword">int</span> &amp;n)</span></span>; <span class="comment">// 从文件中读取哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HuffmanCoding</span><span class="params">(HuffmanTree &amp;HT, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 为字符编码</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetMinValue</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> n, <span class="keyword">int</span> &amp;s1, <span class="keyword">int</span> &amp;s2)</span></span>; <span class="comment">// 获取此时结点中最小的两个</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encoding</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> n)</span></span>; <span class="comment">// 将文本编码</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decoding</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> m)</span></span>; <span class="comment">// 将文本译码</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLeaf</span><span class="params">(HTNode HN)</span></span>; <span class="comment">// 判断结点是否为叶子结点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span></span>; <span class="comment">// 输出编码后的文件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TreePrinting</span><span class="params">(HuffmanTree HT,<span class="keyword">int</span> count, <span class="keyword">int</span> index)</span></span>; <span class="comment">// 打印哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintT</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> count, <span class="keyword">int</span> index)</span></span>; <span class="comment">// 打印哈夫曼树</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">0</span>;</span><br><span class="line">    HuffmanTree HT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;\n菜单：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;I：初始化哈夫曼树，将其存储在文件hfmTree中。         E：对文件ToBeTran中的文本进行编码，将结果储存在文件CodeFile中&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;D：将文件CodeFile中的数据进行译码，储存在文件TextFile中                     P：将文件CodeFile中的数据输出在终端上&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;T：将内存中的哈夫曼树按树形结果输出在终端上，同时将此树储存在文件TreePrint中   Q：退出程序&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请选择你要使用的功能：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cin &gt;&gt; ch;</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;Q&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;退出程序成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span>(ch)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;开始初始化哈夫曼树!&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">Initialization</span>(HT, N);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;初始化完成!&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span>(N == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">HfmTreeToHuffmanTree</span>(HT,N); <span class="comment">//如果内存中没有哈夫曼树，就从文件中读取</span></span><br><span class="line">                &#125;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;开始编码! &quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">Encoding</span>(HT, N);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;编码成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;开始译码! &quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">Decoding</span>(HT, <span class="number">2</span> * N - <span class="number">1</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;译码成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;编码文件为! &quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">Print</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;\n编码文件打印完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;T&#x27;</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;凹入表打印：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="built_in">TreePrinting</span>(HT,<span class="number">0</span>,<span class="number">2</span>*N<span class="number">-1</span>);</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;打印完成！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;操作编码异常，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initialization</span><span class="params">(HuffmanTree &amp;HT, <span class="keyword">int</span> &amp;n)</span> <span class="comment">// 初始化哈夫曼树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入字符集大小：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;字符集过小，初始化失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">2</span> * n - <span class="number">1</span>; <span class="comment">// 哈夫曼树总结点数</span></span><br><span class="line">    HT = <span class="keyword">new</span> HTNode[m + <span class="number">1</span>];</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入你的字符集的字符：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ch = <span class="string">&#x27;@&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(ch == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ch = <span class="built_in">getchar</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        HT[i].data = ch;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入你的字符集的各个字符所对应的权值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> wei;</span><br><span class="line">        cin &gt;&gt; wei;</span><br><span class="line">        HT[i].weight = wei;</span><br><span class="line">        HT[i].parent = <span class="number">0</span>;</span><br><span class="line">        HT[i].lChild = <span class="number">0</span>;</span><br><span class="line">        HT[i].rChild = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        HT[i].weight = <span class="number">0</span>;</span><br><span class="line">        HT[i].parent = <span class="number">0</span>;</span><br><span class="line">        HT[i].lChild = <span class="number">0</span>;</span><br><span class="line">        HT[i].rChild = <span class="number">0</span>;</span><br><span class="line">        HT[i].data = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> s1, s2;</span><br><span class="line">        <span class="built_in">GetMinValue</span>(HT, i - <span class="number">1</span>, s1, s2);</span><br><span class="line">        HT[s1].parent = i;</span><br><span class="line">        HT[s2].parent = i;</span><br><span class="line">        HT[i].lChild = s1;</span><br><span class="line">        HT[i].rChild = s2;</span><br><span class="line">        HT[i].weight = HT[s1].weight + HT[s2].weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">HuffmanCoding</span>(HT, n); <span class="comment">// 为字符编码</span></span><br><span class="line">    <span class="built_in">StorageToHfmTree</span>(HT, m); <span class="comment">// 将哈夫曼树存进文件中</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HfmTreeToHuffmanTree</span><span class="params">(HuffmanTree &amp;HT, <span class="keyword">int</span> &amp;n)</span> <span class="comment">// 从文件中读取哈夫曼树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">&quot;file/hfmTree.txt&quot;</span>, ios::in)</span></span>;</span><br><span class="line">    infile &gt;&gt; n;</span><br><span class="line">    HT = <span class="keyword">new</span> HTNode[<span class="number">2</span> * n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n - <span class="number">1</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">        infile &gt;&gt; HT[i].weight &gt;&gt; HT[i].parent &gt;&gt; HT[i].lChild &gt;&gt; HT[i].rChild;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= n) &#123;</span><br><span class="line">            infile &gt;&gt; HT[i].data;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            HT[i].data = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line">    <span class="built_in">HuffmanCoding</span>(HT, n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">StorageToHfmTree</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> m)</span> <span class="comment">// 存储哈夫曼树到hfmtree文件中</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">&quot;file/hfmTree.txt&quot;</span>, ios::out)</span></span>;</span><br><span class="line">    outfile &lt;&lt; (m + <span class="number">1</span>) / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        outfile &lt;&lt; HT[i].weight &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; HT[i].parent &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; HT[i].lChild &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; HT[i].rChild;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= (m + <span class="number">1</span>) / <span class="number">2</span>) &#123;</span><br><span class="line">            outfile &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; HT[i].data;</span><br><span class="line">        &#125;</span><br><span class="line">        outfile &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    outfile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HuffmanCoding</span><span class="params">(HuffmanTree &amp;HT, <span class="keyword">int</span> n)</span> <span class="comment">// 为字符编码</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i, f = HT[i].parent; f != <span class="number">0</span>; j = f, f = HT[f].parent) &#123;</span><br><span class="line">            <span class="keyword">if</span> (HT[f].lChild == j) &#123;</span><br><span class="line">                HT[i].code = <span class="string">&#x27;0&#x27;</span> + HT[i].code;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                HT[i].code = <span class="string">&#x27;1&#x27;</span> + HT[i].code;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetMinValue</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> n, <span class="keyword">int</span> &amp;s1, <span class="keyword">int</span> &amp;s2)</span> <span class="comment">// 获取此时结点中最小的两个</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s1 = s2 = MAXVALUE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (HT[i].parent != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s1 &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (HT[i].weight &lt; HT[s1].weight) &#123;</span><br><span class="line">                s1 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (HT[i].weight &lt; s1) &#123;</span><br><span class="line">                s1 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (HT[i].parent != <span class="number">0</span> || i == s1) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (s2 &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (HT[i].weight &lt; HT[s2].weight &amp;&amp; HT[i].weight &gt; HT[s1].weight) &#123;</span><br><span class="line">                s2 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (HT[i].weight &lt; s2 &amp;&amp; HT[i].weight &gt;= HT[s1].weight) &#123;</span><br><span class="line">                s2 = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encoding</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> n)</span> <span class="comment">// 将文本编码</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str1, str2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">&quot;file/ToBeTran.txt&quot;</span>, ios::in)</span></span>;</span><br><span class="line"></span><br><span class="line">    ostringstream buf;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span>(buf &amp;&amp; infile.<span class="built_in">get</span>(ch))</span><br><span class="line">    &#123;</span><br><span class="line">        buf.<span class="built_in">put</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    str1 = buf.<span class="built_in">str</span>();</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str1.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            str1[i] = <span class="string">&#x27;@&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str1[i] == HT[j].data) &#123;</span><br><span class="line">                str2 += HT[j].code;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">&quot;file/CodeFile.txt&quot;</span>, ios::out)</span></span>;</span><br><span class="line">    outfile &lt;&lt; str2;</span><br><span class="line">    outfile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decoding</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> m)</span> <span class="comment">// 将哈夫曼编码译码</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string code = <span class="string">&quot;&quot;</span>, str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">&quot;file/CodeFile.txt&quot;</span>, ios::in)</span></span>;</span><br><span class="line">    infile &gt;&gt; code;</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> cur = m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= code.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">IsLeaf</span>(HT[cur])) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = HT[cur].data;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">&#x27;@&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ch = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            str += ch;</span><br><span class="line">            cur = m;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (code[i] == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">            cur = HT[cur].lChild;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = HT[cur].rChild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">&quot;file/TextFile.txt&quot;</span>, ios::out)</span></span>;</span><br><span class="line">    outfile &lt;&lt; str;</span><br><span class="line">    outfile.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsLeaf</span><span class="params">(HTNode HN)</span> <span class="comment">// 判断结点是否为叶子结点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (HN.lChild == <span class="number">0</span> &amp;&amp; HN.rChild == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span> <span class="comment">// 输出编码后的文件</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">&quot;file/CodeFile.txt&quot;</span>, ios::in)</span></span>;</span><br><span class="line">    infile &gt;&gt; str;</span><br><span class="line">    infile.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">    <span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">&quot;file/CodePrin.txt&quot;</span>, ios::out)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        cout &lt;&lt; str[i];</span><br><span class="line">        outfile &lt;&lt; str[i];</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span>) % <span class="number">50</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">            outfile &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ofstream <span class="title">outTree</span><span class="params">(<span class="string">&quot;file/TreePrint.txt&quot;</span>,ios::out)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TreePrinting</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> count, <span class="keyword">int</span> index)</span> <span class="comment">// 打印存储哈夫曼树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">PrintT</span>(HT,count,index);</span><br><span class="line">    outTree.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintT</span><span class="params">(HuffmanTree HT, <span class="keyword">int</span> count, <span class="keyword">int</span> index)</span> <span class="comment">// 打印哈夫曼树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">PrintT</span>(HT, count + <span class="number">1</span>, HT[index].rChild);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">            outTree &lt;&lt; <span class="string">&quot;    &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt; HT[index].data &lt;&lt; endl;</span><br><span class="line">        outTree &lt;&lt; HT[index].data &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">PrintT</span>(HT, count + <span class="number">1</span>, HT[index].lChild);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="【最终效果】"><a href="#【最终效果】" class="headerlink" title="【最终效果】"></a>【最终效果】</h1><p><img src="https://img-blog.csdnimg.cn/20210128192200684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"><br><img src="https://img-blog.csdnimg.cn/2021012819244824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"></p>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>实验二：线性表及其应用——约瑟夫环</title>
    <url>/2021/01/29/%E5%AE%9E%E9%AA%8C%E4%BA%8C%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E7%BA%A6%E7%91%9F%E5%A4%AB%E7%8E%AF/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>帮助学生熟练掌握线性表的基本操作在顺序和链式两种存储结构上的实现，其中以各种链表的操作和应用作为重点内容。</p>
<h1 id="【实验内容及要求】"><a href="#【实验内容及要求】" class="headerlink" title="【实验内容及要求】"></a>【实验内容及要求】</h1><ol>
<li>问题描述：约瑟夫问题的一种描述是：编号为1,2,…,n的n个人按顺时针方向围坐一圈，每人持有一个密码（正整数）。一开始任选一个正整数作为报数上限值m，从第一个人开始按顺时针方向自1开始顺序报数，报到m时停止报数。报m的人出列，将他的密码作为新的m的值，从他在顺时针方向上的下一个人开始重新从1报数，如此下去，直至所有人全部出列为止。试设计一个程序求出出列顺序。</li>
<li>基本要求：利用单向循环链表存储结构模拟此过程，按照出列的顺序印出各人的编号。</li>
<li>测试数据：m的初值为20；n=7，7个人的密码依次为：3,1,7,2,4,8,4,首先m值为6（正确的出列顺序应为6,1,4,7,2,3,5）。</li>
<li>实现提示：程序运行后，首先要求用户指定初始报数上限值，然后读取各人的密码。可设n≤30。此题所用的循环链表中不需要“头结点”，请注意空表和非空表的界限。</li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">circularList</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">    <span class="keyword">int</span> passward;</span><br><span class="line">    circularList *next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">circularList * <span class="title">createList</span><span class="params">(<span class="keyword">int</span> n)</span></span>; <span class="comment">// 创建循环链表</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(circularList *)</span></span>; <span class="comment">// 获取链表长度</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(circularList *, circularList *)</span></span>; <span class="comment">// 获取指定元素索引</span></span><br><span class="line"><span class="function">circularList * <span class="title">deleteList</span><span class="params">(circularList *, <span class="keyword">int</span>)</span></span>; <span class="comment">// 删除结点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m, n; <span class="comment">// m为报数初始上限值，n为总人数</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入报数初始上限值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入参与报数的总人数&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">1</span> || m &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;人数或初始报数值非法！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    circularList * josephRing;</span><br><span class="line">    josephRing = <span class="built_in">createList</span>(n);</span><br><span class="line">    circularList * head = josephRing;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">getLength</span>(josephRing) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">deleteList</span>(head,<span class="number">1</span>);</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;报数完毕！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            josephRing = josephRing-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        m = josephRing-&gt;passward;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">getIndex</span>(head,josephRing) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            josephRing = head = <span class="built_in">deleteList</span>(head,<span class="built_in">getIndex</span>(head,josephRing));</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            josephRing = <span class="built_in">deleteList</span>(head,<span class="built_in">getIndex</span>(head,josephRing));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">circularList * <span class="title">createList</span><span class="params">(<span class="keyword">int</span> n)</span> <span class="comment">// 创建循环链表</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    circularList * head, * q, * p; <span class="comment">// q为了新建结点，p为了在各个结点中运行，head是链表头部结点</span></span><br><span class="line">    head = q = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请依次输入每个人的密码: &quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        q = <span class="keyword">new</span> circularList;</span><br><span class="line">        q-&gt;number = i + <span class="number">1</span>;</span><br><span class="line">        cin &gt;&gt; q-&gt;passward;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            head = q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            p-&gt;next = q;</span><br><span class="line">        &#125;</span><br><span class="line">        p = q;</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;next = head;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;循环链表创建成功! &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getLength</span><span class="params">(circularList * head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    circularList * p = head;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(p-&gt;next == head)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        n++;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;next == head)</span><br><span class="line">        &#123;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getIndex</span><span class="params">(circularList * head, circularList * jos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    circularList * p = head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(p-&gt;next == head)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p == jos)</span><br><span class="line">        &#123;</span><br><span class="line">            n++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n++;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">circularList * <span class="title">deleteList</span><span class="params">(circularList * head, <span class="keyword">int</span> n)</span> <span class="comment">// 删除结点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    circularList * p = head, * q; <span class="comment">// p为了在各个结点中运行，q为了储存要删除的结点，head是链表头部结点</span></span><br><span class="line">    <span class="keyword">if</span>(n &lt; <span class="number">0</span> || n &gt; <span class="built_in">getLength</span>(head))</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;索引超出范围，删除失败！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">getLength</span>(head) - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        p-&gt;next = q-&gt;next;</span><br><span class="line">        head = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(n-- &gt; <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">        p-&gt;next = q-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; q-&gt;number &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="string">&quot;出列！&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">delete</span> q;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p-&gt;next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>实验四：树及其应用——二叉树的遍历</title>
    <url>/2021/02/01/%E5%AE%9E%E9%AA%8C%E5%9B%9B%EF%BC%9A%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8%E2%80%94%E2%80%94%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>使学生深入了解并掌握非线性数据结构的特点，掌握创建二叉树二叉链表存储结构的方法；同时深刻理解二叉树的各遍历过程。</p>
<h1 id="【实验内容】"><a href="#【实验内容】" class="headerlink" title="【实验内容】"></a>【实验内容】</h1><ol>
<li>问题描述：很多涉及二叉树操作的算法都是以二叉树遍历为基础的。本实验要求编写程序，对一棵给定的二叉树进行先、中、后三种次序的遍历。</li>
<li>基本要求：以二叉链表为存储结构，实现二叉树的先、中、后三种次序的递归遍历。</li>
<li>实现提示：<br>（１）设二叉树的结点不超过30个，每个结点的数据均为字符，这样可用先序遍历序列作为输入，顺序创建二叉树链表存储结构。<br>（２）也可利用完全二叉树在顺序存储中的特性，创建二叉树的存储结构，此时，二叉树中结点数据的类型不受限制。</li>
<li>选作内容：<br>（1）以二叉链表为存储结构，实现二叉树的先、中、后三种次序的非递归遍历。<br>（2）借助队列，实现二叉树的层序遍历。<br>（3）按凹入表或树形打印所遍历的二叉树。</li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 前序遍历数据</span></span><br><span class="line"><span class="comment"> * AB#D##C##</span></span><br><span class="line"><span class="comment"> * ABDG##H###CE#I##F##</span></span><br><span class="line"><span class="comment"> * ABDH#K###E##CFI###G#J##</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiNode</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    BiNode *lChild, *rChild;</span><br><span class="line">&#125; BiNode, *BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateTree</span><span class="params">(BiTree &amp;T)</span></span>; <span class="comment">// 创建二叉树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span></span>; <span class="comment">//前序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span></span>; <span class="comment">// 中序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span></span>; <span class="comment">// 后序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursivePre</span><span class="params">(BiTree T)</span></span>; <span class="comment">//非递归前序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursiveIn</span><span class="params">(BiTree T)</span></span>; <span class="comment">//非递归中序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursivePost</span><span class="params">(BiTree T)</span></span>; <span class="comment">//非递归后序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">levelOrderTraverse</span><span class="params">(BiTree T)</span></span>; <span class="comment">// 层序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printT</span><span class="params">(BiTree T, <span class="keyword">int</span> n)</span></span>; <span class="comment">//凹入表打印树结构</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    BiTree T;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;创建二叉树，请输入前序遍历的树的数据：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">CreateTree</span>(T);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n前序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n中序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n后序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n非递归前序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">nonRecursivePre</span>(T);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n非递归中序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">nonRecursiveIn</span>(T);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n非递归后序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">nonRecursivePost</span>(T);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n层序遍历：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">levelOrderTraverse</span>(T);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n凹入表输出：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">printT</span>(T, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateTree</span><span class="params">(BiTree &amp;T)</span> <span class="comment">// 创建二叉树</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    cin &gt;&gt; ch;</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">&#x27;#&#x27;</span>) &#123;</span><br><span class="line">        T = <span class="literal">NULL</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        T = <span class="keyword">new</span> BiNode;</span><br><span class="line">        <span class="keyword">if</span> (!T) &#123;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        T-&gt;data = ch;</span><br><span class="line">        <span class="built_in">CreateTree</span>(T-&gt;lChild);</span><br><span class="line">        <span class="built_in">CreateTree</span>(T-&gt;rChild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PreOrderTraverse</span><span class="params">(BiTree T)</span> <span class="comment">//前序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; T-&gt;data;</span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;lChild);</span><br><span class="line">    <span class="built_in">PreOrderTraverse</span>(T-&gt;rChild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(BiTree T)</span> <span class="comment">// 中序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;lChild);</span><br><span class="line">    cout &lt;&lt; T-&gt;data;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;rChild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PostOrderTraverse</span><span class="params">(BiTree T)</span> <span class="comment">// 后序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;lChild);</span><br><span class="line">    <span class="built_in">PostOrderTraverse</span>(T-&gt;rChild);</span><br><span class="line">    cout &lt;&lt; T-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursivePre</span><span class="params">(BiTree T)</span> <span class="comment">//非递归前序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    BiNode *p = T;</span><br><span class="line">    stack&lt;BiNode *&gt; s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>() || p) &#123;</span><br><span class="line">        <span class="keyword">while</span> (p) <span class="comment">// 当p不为空时，一边打印，一边往左走</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; p-&gt;data;</span><br><span class="line">            s.<span class="built_in">push</span>(p);</span><br><span class="line">            p = p-&gt;lChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!s.<span class="built_in">empty</span>()) <span class="comment">//p为空，说明此时的子树的根节点和左子树都遍历完了，进入右子树</span></span><br><span class="line">        &#123;</span><br><span class="line">            p = s.<span class="built_in">top</span>();</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">            p = p-&gt;rChild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursiveIn</span><span class="params">(BiTree T)</span> <span class="comment">//非递归中序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    BiNode *p = T;</span><br><span class="line">    stack&lt;BiNode *&gt; s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>() || p) &#123;</span><br><span class="line">        <span class="keyword">while</span> (p) <span class="comment">// 当p不为空时，一边入栈，一边往左走</span></span><br><span class="line">        &#123;</span><br><span class="line">            s.<span class="built_in">push</span>(p);</span><br><span class="line">            p = p-&gt;lChild;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!s.<span class="built_in">empty</span>()) <span class="comment">//p为空，说明此时左子树都遍历完了，走到了左边的最下端，需要出栈，进入右子树</span></span><br><span class="line">        &#123;</span><br><span class="line">            p = s.<span class="built_in">top</span>();</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line">            cout &lt;&lt; p-&gt;data;</span><br><span class="line">            p = p-&gt;rChild; <span class="comment">//进入右子树，开始新遍历，一开始继续往左走</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nonRecursivePost</span><span class="params">(BiTree T)</span> <span class="comment">//非递归后序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    stack&lt;BiNode *&gt; s;</span><br><span class="line"></span><br><span class="line">    BiNode *pCur, *pLastVisit; <span class="comment">//pCur为当前访问的结点，pLastVisit为上一个访问的结点</span></span><br><span class="line">    pCur = T;</span><br><span class="line">    pLastVisit = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (pCur) <span class="comment">// 先入栈，到树的最左端</span></span><br><span class="line">    &#123;</span><br><span class="line">        s.<span class="built_in">push</span>(pCur);</span><br><span class="line">        <span class="comment">//pLastVisit = pCur;</span></span><br><span class="line">        pCur = pCur-&gt;lChild;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//走到此处，pCur为空，到了树的最左端</span></span><br><span class="line">    <span class="keyword">while</span> (!s.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        pCur = s.<span class="built_in">top</span>();</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (pCur-&gt;rChild == <span class="literal">NULL</span> || pCur-&gt;rChild == pLastVisit) <span class="comment">// 打印结点的前提是此结点无右子树或右子树已经被访问过了</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; pCur-&gt;data;</span><br><span class="line">            pLastVisit = pCur;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="comment">//if (pCur-&gt;lChild == pLastVisit)</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 若左子树被访问完，右边不符合上面的要求，则需要进入右子树，再开始遍历，记得一定不能有这个else-if的条件</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">        &#123;</span><br><span class="line">            s.<span class="built_in">push</span>(pCur);</span><br><span class="line">            <span class="comment">//pLastVisit = pCur;</span></span><br><span class="line">            pCur = pCur-&gt;rChild;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (pCur) &#123;</span><br><span class="line">                s.<span class="built_in">push</span>(pCur);</span><br><span class="line">                <span class="comment">//pLastVisit = pCur;</span></span><br><span class="line">                pCur = pCur-&gt;lChild;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">levelOrderTraverse</span><span class="params">(BiTree T)</span> <span class="comment">// 层序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;BiNode *&gt; q;</span><br><span class="line">    <span class="keyword">if</span> (T) &#123;</span><br><span class="line">        q.<span class="built_in">push</span>(T);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        BiNode *p = q.<span class="built_in">front</span>();</span><br><span class="line">        cout &lt;&lt; p-&gt;data;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;lChild) &#123;</span><br><span class="line">            q.<span class="built_in">push</span>(p-&gt;lChild);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;rChild) &#123;</span><br><span class="line">            q.<span class="built_in">push</span>(p-&gt;rChild);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printT</span><span class="params">(BiTree T, <span class="keyword">int</span> n)</span> <span class="comment">//凹入表打印树结构</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T) &#123;</span><br><span class="line">        <span class="built_in">printT</span>(T-&gt;rChild, n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; T-&gt;data &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printT</span>(T-&gt;lChild, n + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构绪论</title>
    <url>/2020/09/16/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%BB%AA%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="1-基本概念和术语"><a href="#1-基本概念和术语" class="headerlink" title="1  基本概念和术语"></a>1  基本概念和术语</h1><h2 id="1-1-数据"><a href="#1-1-数据" class="headerlink" title="1.1  数据"></a>1.1  数据</h2><p>1.数据：是描述客观事物的<font color="red">符号</font>，是计算机中可以操作的<font color="red">对象</font>，是能被计算机<strong>识别，并输入</strong>给计算机处理的<font color="red">符号集合</font>。</p>
<p>2.数据不仅包含整型、实型等数值类型，还包括字符及声音，图像，视频等非数值类型。</p>
<p>3.这里的数据必须具备两个前提：</p>
<ul>
<li>可以输入到计算机中</li>
<li>能被计算机程序处理</li>
</ul>
<p>4.对于整型，实型等数值类型，可以进行数值计算。而对于字符数据类型，则可进行非数值的处理。</p>
<p><font color="red">注：声音，图像，视频等其实是可以通过编码的手段变成字符数据来处理的</font></p>
<h2 id="1-2-数据元素"><a href="#1-2-数据元素" class="headerlink" title="1.2  数据元素"></a>1.2  数据元素</h2><p>数据元素：是组成数据的，有一定意义的<font color="red">基本单位</font>，在计算机中通常作为<font color="red">整体</font>处理，也被称作<strong>记录</strong>。<em>（人，牛，羊）</em></p>
<p><em>人类中的数据元素是人，畜类的数据元素是牛，羊·······</em></p>
<h2 id="1-3-数据项"><a href="#1-3-数据项" class="headerlink" title="1.3  数据项"></a>1.3  数据项</h2><p>数据项：<font color="red">一个数据元素</font>可以由<font color="red">若干个</font><strong>数据项</strong>组成。*(眼睛，姓名，性别)*</p>
<p>数据项是数据不可分割的最小单位。</p>
<p><em>对人这样的数据元素，数据项可以是眼睛，口，鼻子，姓名，年龄等</em></p>
<h2 id="1-4-数据对象"><a href="#1-4-数据对象" class="headerlink" title="1.4  数据对象"></a>1.4  数据对象</h2><p>数据对象：是性质相同的数据元素的<strong>集合</strong>，是<font color="red">数据的子集</font>。<em>（人类，畜类，坦克类）</em></p>
<p>性质相同：数据元素具有<font color="red">相同数量</font>和<font color="red">类型</font>的<strong>数据项</strong>。</p>
<p><em>在实际应用中，处理的数据元素通常具有相同的性质，在不产生混淆的情况下，我们一般将数据对象称为数据。</em></p>
<h2 id="1-5-数据结构"><a href="#1-5-数据结构" class="headerlink" title="1.5  数据结构"></a>1.5  数据结构</h2><p>数据结构：是相互之间存在<strong>一种或多种</strong>特定关系的<font color="red">数据元素</font>的<strong>集合</strong>。<em>（人甲，牛，羊，人乙，这四个数据元素一起，规定他们之间有特定关系）</em></p>
<p>结构，简单的理解就是<font color="red">关系</font>，比如分子结构，就是说组成分子的原子之间的排列方式。</p>
<p>严格的说，结构是指各个组成部分相互搭配和排列的<font color="red">方式</font>。</p>
<p>在现实世界中，<font color="red">不同的数据元素</font>之间不是独立的，而是存在<strong>特定的关系</strong>的，我们将这些关系称为结构。</p>
<p>在计算机中，数据元素并不是孤立，杂乱无序的，而是具有内在联系的数据集合。数据元素之间存在的一种或多种特定关系，这也就是数据的<font color="red">组织形式</font>，即<font color="red">数据结构</font>。</p>
<h1 id="2-逻辑结构与物理结构"><a href="#2-逻辑结构与物理结构" class="headerlink" title="2  逻辑结构与物理结构"></a>2  逻辑结构与物理结构</h1><p>按照不同的角度来讨论，会有不同的分类，即逻辑结构和物理结构两种。</p>
<h2 id="2-1-逻辑结构"><a href="#2-1-逻辑结构" class="headerlink" title="2.1  逻辑结构"></a>2.1  逻辑结构</h2><p>逻辑结构：是指数据对象中数据元素之间的相互关系。</p>
<p>逻辑结构是针对<font color="red">具体问题</font>的，是为了解决某个问题，在对问题理解的基础上，选择一个<font color="red">合适的数据结构</font>表示<font color="red">数据元素之间</font>的<font color="red">逻辑关系</font>。</p>
<h3 id="2-1-1-集合结构"><a href="#2-1-1-集合结构" class="headerlink" title="2.1.1  集合结构"></a>2.1.1  集合结构</h3><p>集合结构：集合结构中的数据元素除了<font color="red">同属于一个集合</font>外，他们之间没有<font color="red">任何其他关系</font>。</p>
<p>各个数据元素是<font color="red">“平等”</font>的，他们的共同属性就是<font color="red">“同属于一个集合”</font>。</p>
<p>数据结构中的集合关系就类似于数学中的集合。</p>
<h3 id="2-1-2-线性结构"><a href="#2-1-2-线性结构" class="headerlink" title="2.1.2  线性结构"></a>2.1.2  线性结构</h3><p>线性结构：线性结构中的数据元素之间是<font color="red">一对一</font>的关系。</p>
<p>1后面是2，2后面是3,3后面是4······</p>
<h3 id="2-1-3-树形结构"><a href="#2-1-3-树形结构" class="headerlink" title="2.1.3  树形结构"></a>2.1.3  树形结构</h3><p>树形结构：树形结构中的数据元素之间存在一种<font color="red">一对多</font>的层次关系。</p>
<p>好像一个倒着的大树啊！！！</p>
<h3 id="2-1-4-图形结构"><a href="#2-1-4-图形结构" class="headerlink" title="2.1.4  图形结构"></a>2.1.4  图形结构</h3><p>图形结构：图形结构的数据元素是<font color="red">多对多</font>的关系。</p>
<p>乱乱的，好多线。</p>
<h2 id="2-2-物理结构"><a href="#2-2-物理结构" class="headerlink" title="2.2  物理结构"></a>2.2  物理结构</h2><p>物理结构：是指数据的<font color="red">逻辑结构</font>在<font color="red">计算机中</font>的<font color="red">存储形式</font>。<em>（在我看来，是依照我们脑中的逻辑结构，按这种结构，依照相同的方式（即存储形式）在计算机的内存中寻找要获取的信息）</em></p>
<p>数据的存储结构应正确反映数据元素之间的逻辑关系，这才是最为关键的，如何储存数据元素之间的逻辑关系，是实现物理结构的重点和难点。</p>
<p>物理结构的基本目标就是把<font color="red">数据及其逻辑关系</font>存储到计算机的内存中。</p>
<h3 id="2-2-1-顺序存储结构"><a href="#2-2-1-顺序存储结构" class="headerlink" title="2.2.1  顺序存储结构"></a>2.2.1  顺序存储结构</h3><p>顺序存储结构：是把数据元素存放在<font color="red">地址连续</font>的<font color="red">存储单元</font>里，其数据间的逻辑关系和物理关系是<font color="red">一致的</font>。</p>
<p>如1后面是2，2后面是3，3后面是4······</p>
<h3 id="2-2-2-链式存储结构"><a href="#2-2-2-链式存储结构" class="headerlink" title="2.2.2  链式存储结构"></a>2.2.2  链式存储结构</h3><p>链式存储结构：是把数据元素存放在<font color="red">任意</font>的<font color="red">存储单元</font>里，这组存储单元可以是<font color="red">连续的</font>，也可以是<font color="red">不连续</font>的。</p>
<p>如链表。</p>
<p>链式存储灵活很多，数据存在哪里不重要，只要有一个指针存放了相应的地址就能找到它。</p>
<h1 id="3-抽象数据类型"><a href="#3-抽象数据类型" class="headerlink" title="3  抽象数据类型"></a>3  抽象数据类型</h1><h2 id="3-1-数据类型"><a href="#3-1-数据类型" class="headerlink" title="3.1  数据类型"></a>3.1  数据类型</h2><p>数据类型：是指一组<font color="red">性质相同</font>的<strong>值</strong>的<font color="red">集合</font>及<font color="red">定义在此集合上的一些操作</font>的总称。</p>
<p>数据类型是按照值的不同进行划分的。在高级语言中，类型就用来说明变量或表达式的取值范围和所能进行的操作。</p>
<p>按取值不同，数据类型可分为以下两类：</p>
<ul>
<li>原子类型：是<font color="red">不可以</font>在分解的基本类型，包括整形，实型，字符型等。</li>
<li>结构类型：由若干个类型组合而成，是<font color="red">可以</font>再分解的。例如，整型数组是由若干个整形数据组成的。</li>
</ul>
<p><strong>抽象是指抽取出事物具有的普遍性的本质。</strong></p>
<h2 id="3-2-抽象数据类型"><a href="#3-2-抽象数据类型" class="headerlink" title="3.2  抽象数据类型"></a>3.2  抽象数据类型</h2><p>抽象数据类型：是指<font color="red">一个数学模型</font>及定义在该模型上的<font color="red">一组操作</font>。（<em>抽象数据类型的定义仅取决于他的一组逻辑特性，而与其在计算机内部如何表示和实现无关。如抽象出来的整型</em>）</p>
<p><strong>“抽象”的意义在于数据类型的数学抽象特性</strong></p>
<p><font color="red">一个抽象数据类型定义了：一个<strong>数据对象</strong>，数据对象中各数据元素之间的<strong>关系</strong>及对数据元素的<strong>操作。</strong></font></p>
<p><strong>抽象数据类型体现了程序设计中<font color="red">问题分解，抽象和信息隐蔽</font>的特性。</strong></p>
]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2020/10/16/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="语法一"><a href="#语法一" class="headerlink" title="语法一"></a>语法一</h1><ul>
<li><p>字母，数字，汉字，下划线，以及没有特殊定义的标点&lt;/符号，都是“<strong>普通字符</strong>”。表达式中的普通字符，在匹配一个字符串的时候，<strong>匹配与之相同的一个字符</strong>。</p>
</li>
<li><p>简单的转义字符</p>
<table>
<thead>
<tr>
<th>符号</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\t</td>
<td>制表符</td>
</tr>
<tr>
<td>\\</td>
<td>\本身</td>
</tr>
<tr>
<td>\^, \$, \(, \), \{, \}, \?, \+, \*, \</td>
<td>, \[, \]</td>
</tr>
</tbody></table>
</li>
</ul>
<h1 id="语法二"><a href="#语法二" class="headerlink" title="语法二"></a>语法二</h1><p>标志字符集合：</p>
<ul>
<li>能够与“多种字符”匹配的表达式</li>
<li><strong>注意区分大小写，大写的相反的意思</strong></li>
</ul>
<table>
<thead>
<tr>
<th>符号</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>\d</td>
<td>任意一个数字，0-9中的任意一个</td>
</tr>
<tr>
<td>\w</td>
<td>任意一个字母或数字或下划线，也就是A-Z, a-z，0-9，_ ，中的任意一个</td>
</tr>
<tr>
<td>\s</td>
<td>包括空格，制表符，换行符等空白字符的其中任意一个</td>
</tr>
<tr>
<td>.</td>
<td>小数点可以匹配任意一个除了换行符之外的字符，如果要匹配包括“\n”在内的所有字符，一般用[\s\S]</td>
</tr>
</tbody></table>
<h1 id="语法三"><a href="#语法三" class="headerlink" title="语法三"></a>语法三</h1><p>自定义字符集合</p>
<ul>
<li>方括号匹配方式，能够匹配方括号中<strong>任意一个</strong>字符</li>
</ul>
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>[ab5@]</td>
<td>匹配“a”, “b”, “5”, “@”,中的任意一个字符，<strong>或</strong></td>
</tr>
<tr>
<td>[^abc]</td>
<td>匹配除了“a”，”b”，“c”，的任意一个字符，<strong>取反</strong></td>
</tr>
<tr>
<td>[f-k]</td>
<td>匹配“f”-“k”之间的任意一个字符，<strong>范围</strong></td>
</tr>
<tr>
<td>[^A-F0-3]</td>
<td>匹配除了“A”-“F”，“0”-“3”之外的任意一个字符</td>
</tr>
</tbody></table>
<ul>
<li><p>正则表达式的特殊符号，被包含到中括号中，则失去特殊意义，除了^，-之外。</p>
</li>
<li><p>标准字符集合，除了小数点外，如果被包含到中括号，自定义字符集合将包含该集合，如：</p>
<p>[\d.\-+]将匹配：数字，小数点，+，-</p>
</li>
</ul>
<h1 id="语法四"><a href="#语法四" class="headerlink" title="语法四"></a>语法四</h1><p><strong>量词</strong>：修饰匹配次数的特殊符号</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>{n}</td>
<td>表达式重复n次</td>
</tr>
<tr>
<td>{m,n}</td>
<td>表达式至少重复m次，最多重复n次</td>
</tr>
<tr>
<td>{m,}</td>
<td>表达式至少重复m次</td>
</tr>
<tr>
<td>?</td>
<td>匹配表达式0次或1次，相当于{0，1}</td>
</tr>
<tr>
<td>+</td>
<td>表达式至少出现1次，相当于{1，}</td>
</tr>
<tr>
<td>*</td>
<td>表达式不出现或出现任意次，相当于{0，}</td>
</tr>
</tbody></table>
<ul>
<li><p>匹配次数中的<strong>贪婪模式（匹配字符越多越好，默认方式！）</strong></p>
</li>
<li><p>匹配次数中的<strong>非贪婪模式（匹配字符越少越好，修饰匹配次数{}的特殊符号后再加上一个“？”号）</strong></p>
</li>
</ul>
<h1 id="语法五"><a href="#语法五" class="headerlink" title="语法五"></a>语法五</h1><p><strong>字符边界</strong>(<em>零宽</em>)</p>
<ul>
<li><p>本组标记匹配的不是字符而是位置，符合某种条件的位置</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>^</td>
<td>与字符串开始的地方匹配</td>
</tr>
<tr>
<td>$</td>
<td>与字符串结束的地方匹配</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个单词边界</td>
</tr>
</tbody></table>
</li>
<li><p>\b匹配这样一个位置：前面和后面的字符不全是\w</p>
</li>
</ul>
<h2 id="正则表达式的匹配模式"><a href="#正则表达式的匹配模式" class="headerlink" title="正则表达式的匹配模式"></a>正则表达式的匹配模式</h2><ul>
<li>IGNORECASE 忽略大小写模式<ul>
<li>匹配时忽略大小写</li>
<li>默认情况下，正则表达式是要区分大小写的</li>
</ul>
</li>
<li>SINGLELINE 单行模式<ul>
<li>整个文本看做一个字符串，只有一个开头和一个结尾</li>
<li>使小数点可以匹配包含换行符在内的任意字符</li>
</ul>
</li>
<li>MULTILINE 多行模式<ul>
<li>每行都是一个字符串，都有开头和结尾</li>
<li>在指定了MULTILINE之后，如果需要仅匹配字符串的开始和结束位置，可以使用\A和\Z</li>
</ul>
</li>
</ul>
<h1 id="语法六"><a href="#语法六" class="headerlink" title="语法六"></a>语法六</h1><ul>
<li><p>选择符合分组</p>
<table>
<thead>
<tr>
<th>表达式</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>| 分支结构</td>
<td>左右两边表达式之间”或”关系，匹配左边或者右边</td>
</tr>
<tr>
<td>（）捕获组</td>
<td>(1).在被修饰匹配次数的时候，括号中的表达式可以作为整体被修饰<br/>(2).取匹配结果的时候，括号中的表达式匹配到的内容可以被单独得到<br/>(3). 每一对括号会分配一个编号，使用()的捕获根据左括号的顺序从1开始自动编号。捕获元素编号为零的第一个捕获 是由整个正则表达式模式匹配的文本</td>
</tr>
<tr>
<td>（<strong>？：</strong>Expression【Expression是表达式的意思】）非捕获组</td>
<td>一些表达式中，不得不使用( )，但又不需要保存( )中子表达式匹配的内容，这时可以用非捕获组来抵消使用( )带来的副作用。</td>
</tr>
</tbody></table>
</li>
<li><p>反向引用（\nnn)</p>
<ul>
<li>每一对（）会分配一个编号，使用（）的捕获<strong>根据左括号的顺序按1开始自动编号。</strong></li>
<li>通过反向引用，可以对<strong>分组已捕获的字符串</strong>进行引用</li>
</ul>
</li>
</ul>
<h1 id="语法七"><a href="#语法七" class="headerlink" title="语法七"></a>语法七</h1><p>预搜索（零宽断言）</p>
<ul>
<li>只进行子表达式的匹配，匹配内容不计入最终的匹配结果,是零宽度</li>
<li>这个位置应该符合某个条件。判断当前位置的前后字符,是否符合指定的条件,但不匹配前后的字符。是对<strong>位置的匹配</strong>。</li>
<li>正则表达式匹配过程中,如果子表达式匹配到的是字符内容,而非位置,并被保存到最终的匹配结果中,那么就认为这个子表达式是占有字符的；如果子表达式匹配的仅仅是位置,或者匹配的内容并不保存到最终的匹配结果中,那么就认为这个子表达式是零宽度的。占有字符还是零宽度,是针对匹配的内容是否保存到最终的匹配结果中而言的。</li>
</ul>
<table>
<thead>
<tr>
<th>符号</th>
<th>意义</th>
</tr>
</thead>
<tbody><tr>
<td>（？=exp）</td>
<td>断言自身出现的位置的后面能匹配表达式exp</td>
</tr>
<tr>
<td>（？&lt;= exp）</td>
<td>断言自身出现的位置的前面能匹配表达式exp</td>
</tr>
<tr>
<td>（？！exp）</td>
<td>断言此位置的后面不能匹配表达式exp</td>
</tr>
<tr>
<td>（？&lt;! exp）</td>
<td>断言此位置的前面不能匹配表达式exp</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC笔记</title>
    <url>/2021/07/18/JDBC%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="一、使用详解"><a href="#一、使用详解" class="headerlink" title="一、使用详解"></a>一、使用详解</h1><ul>
<li>在mysql中创建一个库shen，并创建user表和插入表的数据。</li>
<li>新建一个Java工程jdbc，并导入数据驱动。</li>
</ul>
<h1 id="二、详细步骤"><a href="#二、详细步骤" class="headerlink" title="二、详细步骤"></a>二、详细步骤</h1><h2 id="1、加载数据库驱动"><a href="#1、加载数据库驱动" class="headerlink" title="1、加载数据库驱动"></a>1、加载数据库驱动</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.加载驱动(开发推荐的方式) mysql版本5.x方法</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//mysql8.x方法</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="2、建立连接"><a href="#2、建立连接" class="headerlink" title="2、建立连接"></a>2、建立连接</h2><h3 id="1、数据库URL"><a href="#1、数据库URL" class="headerlink" title="1、数据库URL"></a>1、数据库URL</h3><p>URL用于标识数据库的位置，程序员通过URL地址告诉JDBC程序连接哪个数据库，URL的写法为:</p>
<p>jdbc:mysql:［］//localhost:3306/shen ?参数名：参数值</p>
<p>常用数据库URL地址的写法：</p>
<ul>
<li>Oracle：jdbc:oracle:thin:@localhost:1521:shen</li>
<li>SqlServer：jdbc:microsoft:sqlserver://localhost:1433; DatabaseName=shen</li>
<li>MySql：jdbc:mysql://localhost:3306/shen</li>
</ul>
<p><strong>注意：如果是localhost:3306，mysql可以简写为jdbc:mysql:///sid（尽量不这样）</strong></p>
<h3 id="2、Connection"><a href="#2、Connection" class="headerlink" title="2、Connection"></a>2、Connection</h3><p>Jdbc程序中的Connection，它用于代表数据库的链接，Collection是数据库编程中最重要的一个对象，客户端与数据库所有交互都是通过connection对象完成的，创建方法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Connection conn = DriverManager.getConnection(url,user,pass); </span><br></pre></td></tr></table></figure>

<p>这个对象的常用方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>createStatement()</td>
<td>创建向数据库发送sql的statement对象。</td>
</tr>
<tr>
<td>prepareStatement(sql)</td>
<td>创建向数据库发送预编译sql的PrepareSatement对象。</td>
</tr>
<tr>
<td>prepareCall(sql)</td>
<td>创建执行存储过程的callableStatement对象。</td>
</tr>
<tr>
<td>setAutoCommit(boolean autoCommit)</td>
<td>设置事务是否自动提交。</td>
</tr>
<tr>
<td>commit()</td>
<td>在链接上提交事务。</td>
</tr>
<tr>
<td>rollback()</td>
<td>在此链接上回滚事务。</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String url = <span class="string">&quot;jdbc:mysql://localhost:3306/shen&quot;</span>;</span><br><span class="line">String username = <span class="string">&quot;shen&quot;</span>;</span><br><span class="line">String password = <span class="string">&quot;Anxin062039&quot;</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">			</span><br><span class="line"><span class="comment">//2.获取与数据库的链接</span></span><br><span class="line">conn = DriverManager.getConnection(url, username, password);</span><br></pre></td></tr></table></figure>



<h2 id="3、执行SQL语句"><a href="#3、执行SQL语句" class="headerlink" title="3、执行SQL语句"></a>3、执行SQL语句</h2><h3 id="1、Statement"><a href="#1、Statement" class="headerlink" title="1、Statement"></a>1、Statement</h3><p>Jdbc程序中的Statement对象用于向数据库发送SQL语句，创建方法为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br></pre></td></tr></table></figure>

<p> Statement对象常用方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>executeQuery(String sql)</td>
<td>用于向数据发送查询语句。</td>
</tr>
<tr>
<td>executeUpdate(String sql)</td>
<td>用于向数据库发送insert、update或delete语句</td>
</tr>
<tr>
<td>execute(String sql)</td>
<td>用于向数据库发送任意sql语句</td>
</tr>
<tr>
<td>addBatch(String sql)</td>
<td>把多条sql语句放到一个批处理中。</td>
</tr>
<tr>
<td>executeBatch()</td>
<td>向数据库发送一批sql语句执行。</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Statement st = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//3.获取用于向数据库发送sql语句的statement</span></span><br><span class="line">st = conn.createStatement();</span><br><span class="line"><span class="comment">//4.向数据库发sql</span></span><br><span class="line">String sql = <span class="string">&quot;select id,name,password,email,birthday from users&quot;</span>;</span><br><span class="line">st.executeQuery(sql);</span><br></pre></td></tr></table></figure>



<h3 id="2、PreperedStatement"><a href="#2、PreperedStatement" class="headerlink" title="2、PreperedStatement"></a>2、PreperedStatement</h3><p>PreperedStatement是Statement的孩子，它的实例对象可以通过调用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PreperedStatement st =  conn.preparedStatement()</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PreperedStatement st = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">&quot;select * from users where name=? and password=?&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//3.获取用于向数据库发送sql语句的Preperedstatement</span></span><br><span class="line">st = conn.preparedStatement(sql);<span class="comment">//在此次传入，进行预编译</span></span><br><span class="line">st.setString(<span class="number">1</span>, username);</span><br><span class="line">st.setString(<span class="number">2</span>, password);</span><br><span class="line"><span class="comment">//4.向数据库发sql</span></span><br><span class="line">st.executeQuery();<span class="comment">//在这里不需要传入sql</span></span><br></pre></td></tr></table></figure>



<p>比较：相对于Statement对象而言</p>
<ul>
<li><p>PreperedStatement可以避免SQL注入的问题。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">如：String sql=<span class="string">&quot;select * from admin where loginname=&#x27;&quot;</span>+loginName+<span class="string">&quot;&#x27; and loginpwd=&#x27;&quot;</span>+loginPwd+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        在应用中：</span></span><br><span class="line"><span class="comment">//            -&gt;请输入账号：333</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            -&gt;请输入密码：wer&#x27;or&#x27;1&#x27;=&#x27;1</span></span><br><span class="line"><span class="comment">//        实际上发送：select * from admin where loginname=&#x27;333&#x27; and   //loginpwd=&#x27;wer&#x27;or&#x27;1&#x27;=&#x27;1&#x27;，登录成功！</span></span><br></pre></td></tr></table></figure></li>
<li><p>Statement会使数据库频繁编译SQL，可能造成数据库缓冲区溢出。PreparedStatement 可对SQL进行预编译，从而提高数据库的执行效率。</p>
</li>
<li><p>并且PreperedStatement对于sql中的参数，允许使用占位符的形式进行替换，简化sql语句的编写。</p>
</li>
</ul>
<h2 id="4、获取结果"><a href="#4、获取结果" class="headerlink" title="4、获取结果"></a>4、获取结果</h2><p>​        Jdbc程序中的ResultSet用于代表Sql语句的执行结果。Resultset封装执行结果时，采用的类似于表格的方式，ResultSet 对象维护了一个指向表格数据行的游标，初始的时候，游标在第一行之前，调用ResultSet.next() 方法，可以使游标指向具体的数据行，进行调用方法获取该行的数据。</p>
<h3 id="1、获取行"><a href="#1、获取行" class="headerlink" title="1、获取行"></a>1、获取行</h3><p>ResultSet提供了对结果集进行滚动的方法：</p>
<ul>
<li>next()：移动到下一行</li>
<li>Previous()：移动到前一行</li>
<li>absolute(int row)：移动到指定行</li>
<li>beforeFirst()：移动resultSet的最前面。</li>
<li>afterLast() ：移动到resultSet的最后面。</li>
</ul>
<h3 id="2、获取值"><a href="#2、获取值" class="headerlink" title="2、获取值"></a>2、获取值</h3><p>ResultSet既然用于封装执行结果的，所以该对象提供的都是用于获取数据的get方法：</p>
<ul>
<li><p>获取任意类型的数据</p>
<p>getObject(int index)</p>
<p>getObject(string columnName)</p>
</li>
<li><p>获取指定类型的数据，例如：</p>
<p>getString(int index)</p>
<p>getString(String columnName)</p>
</li>
</ul>
<p>附加：</p>
<p>常用数据类型转换：</p>
<table>
<thead>
<tr>
<th>SQL类型</th>
<th>Jdbc对应方法</th>
<th>返回类型</th>
</tr>
</thead>
<tbody><tr>
<td>bit(1)，bit(n)</td>
<td>getBoolean，getBytes()</td>
<td>Boolean，byte[]</td>
</tr>
<tr>
<td>tinyint</td>
<td>getByte()</td>
<td>Byte</td>
</tr>
<tr>
<td>smallint</td>
<td>getShort()</td>
<td>Short</td>
</tr>
<tr>
<td>int</td>
<td>getInt</td>
<td>Int</td>
</tr>
<tr>
<td>bigint</td>
<td>getLong()</td>
<td>Long</td>
</tr>
<tr>
<td>char,varchar,longvarchar</td>
<td>getString</td>
<td>String</td>
</tr>
<tr>
<td>text(clob) blob</td>
<td>getClob()，getblob()</td>
<td>Clob，blob</td>
</tr>
<tr>
<td>date</td>
<td>getDate()</td>
<td>java.sql.Date</td>
</tr>
<tr>
<td>time</td>
<td>getTime()</td>
<td>java.sql.Time</td>
</tr>
<tr>
<td>timestamp</td>
<td>getTimestamp</td>
<td>java.sql.Timestamp</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//4.向数据库发sql,并获取代表结果集的resultset</span></span><br><span class="line">String sql = <span class="string">&quot;select id,name,password,email,birthday from users&quot;</span>;</span><br><span class="line">rs = st.executeQuery(sql);</span><br><span class="line">			</span><br><span class="line"><span class="comment">//5.取出结果集的数据</span></span><br><span class="line">rs.afterLast();</span><br><span class="line">rs.previous();</span><br><span class="line">System.out.println(<span class="string">&quot;id=&quot;</span> + rs.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;name=&quot;</span> + rs.getObject(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;password=&quot;</span> + rs.getObject(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;email=&quot;</span> + rs.getObject(<span class="string">&quot;email&quot;</span>));</span><br><span class="line">System.out.println(<span class="string">&quot;birthday=&quot;</span> + rs.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br></pre></td></tr></table></figure>



<p>或者</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//循环取出(id)</span></span><br><span class="line"><span class="keyword">while</span>(rs.next())</span><br><span class="line">&#123;</span><br><span class="line">	String id=rs.getString(<span class="number">1</span>);<span class="comment">//1代表数据库中表的列数，id在第一列也可以(&quot;id&quot;)！！！</span></span><br><span class="line">	System.out.println(id+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5、释放资源"><a href="#5、释放资源" class="headerlink" title="5、释放资源"></a>5、释放资源</h2><p>​        Jdbc程序运行完后，切记要释放程序在运行过程中，创建的那些与数据库进行交互的对象，这些对象通常是ResultSet, Statement和Connection对象。</p>
<p>注意：为确保资源释放代码能运行，资源释放代码也一定要放在finally语句中。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//6.关闭链接，释放资源</span></span><br><span class="line">	<span class="keyword">if</span>(rs!=<span class="keyword">null</span>)&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			rs.close();</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		rs = <span class="keyword">null</span>;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(st!=<span class="keyword">null</span>)&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			st.close();</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">	&#125;	</span><br><span class="line">	<span class="keyword">if</span>(conn!=<span class="keyword">null</span>)&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="三、基本操作"><a href="#三、基本操作" class="headerlink" title="三、基本操作"></a>三、基本操作</h1><h2 id="1、DDL"><a href="#1、DDL" class="headerlink" title="1、DDL"></a>1、DDL</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在java中使用ddl语句（credate,drop,backup...）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> com.shen.study2;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">		Test1 test=<span class="keyword">new</span> Test1();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Test1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.lianjie();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lianjie</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="comment">//定义需要的对象</span></span><br><span class="line">		PreparedStatement ps=<span class="keyword">null</span>;</span><br><span class="line">		Connection ct=<span class="keyword">null</span>;</span><br><span class="line">		ResultSet rs=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//初始化对象</span></span><br><span class="line">			<span class="comment">//1.加载驱动</span></span><br><span class="line">			Class.forName(<span class="string">&quot;com.microsoft.jdbc.sqlserver.SQLServerDriver&quot;</span>);</span><br><span class="line">			<span class="comment">//2.得到连接(1433表示sql server的默认端口)</span></span><br><span class="line">			ct=DriverManager.getConnection(<span class="string">&quot;jdbc:microsoft:sqlserver://localhost:1433;databaseName=shen&quot;</span>,<span class="string">&quot;sa&quot;</span>,<span class="string">&quot;Anxin062039&quot;</span>);</span><br><span class="line">			<span class="comment">//3.创建Preparestatement,创建数据</span></span><br><span class="line">			ps=ct.prepareStatement(<span class="string">&quot;create database vvv&quot;</span>);</span><br><span class="line"><span class="comment">//			ps=ct.prepareStatement(&quot;create table xxx&quot;);//创建表</span></span><br><span class="line"><span class="comment">//			ps=ct.prepareStatement(&quot;backup database shen to disk=&#x27;F:/123.bak&#x27;&quot;);//备份数据库</span></span><br><span class="line">			</span><br><span class="line">			<span class="comment">//如果执行的是ddl语句</span></span><br><span class="line">			<span class="keyword">boolean</span> b=ps.execute();</span><br><span class="line">			<span class="keyword">if</span>(b)</span><br><span class="line">			&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;创建成功！&quot;</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">		&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="comment">//关闭资源</span></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="comment">//为了程序健壮</span></span><br><span class="line">				<span class="keyword">if</span>(ps!=<span class="keyword">null</span>)</span><br><span class="line">					ps.close();</span><br><span class="line">				<span class="keyword">if</span>(ct!=<span class="keyword">null</span>)</span><br><span class="line">					ct.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">				<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="2、CRUD"><a href="#2、CRUD" class="headerlink" title="2、CRUD"></a>2、CRUD</h2><p>实例：user</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String password;</span><br><span class="line">	<span class="keyword">private</span> String email;</span><br><span class="line">	<span class="keyword">private</span> Date birthday;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//相关的get和set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>连接工具：JdbcUtils</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtils</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String driver = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">			Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">			prop.load(in);</span><br><span class="line">			</span><br><span class="line">			driver = prop.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">			url = prop.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">			username = prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">			password = prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">			</span><br><span class="line">			Class.forName(driver);</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> ExceptionInInitializerError(e);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> DriverManager.getConnection(url, username,password);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">(Connection conn,Statement st,ResultSet rs)</span></span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(rs!=<span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				rs.close();</span><br><span class="line">			&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			rs = <span class="keyword">null</span>;</span><br><span class="line"> </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(st!=<span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				st.close();</span><br><span class="line">			&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(conn!=<span class="keyword">null</span>)&#123;</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				conn.close();</span><br><span class="line">			&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>资源文件：db.properties</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#driver=com.mysql.jdbc.Driver</span><br><span class="line">#url=jdbc:mysql:<span class="comment">//localhost:3306/shen</span></span><br><span class="line">#username=shen</span><br><span class="line">#password=Anxin062039</span><br></pre></td></tr></table></figure>



<p>功能实现：Demo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> cn.itcast.utils.JdbcUtils;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//使用jdbc对数据库增删改查</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Connection conn = <span class="keyword">null</span>;</span><br><span class="line">		Statement st = <span class="keyword">null</span>;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn = JdbcUtils.getConnection();</span><br><span class="line">			st = conn.createStatement();</span><br><span class="line">			String sql = <span class="string">&quot;insert into users(id,name,password,email,birthday) values(4,&#x27;xxx&#x27;,&#x27;123&#x27;,&#x27;xx@sina.com&#x27;,to_date(&#x27;1980-09-09&#x27;,&#x27;YYYY-MM-DD&#x27;))&quot;</span>;</span><br><span class="line">			<span class="keyword">int</span> num = st.executeUpdate(sql);  <span class="comment">//update</span></span><br><span class="line">			<span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;插入成功！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			JdbcUtils.release(conn, st, rs);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Connection conn = <span class="keyword">null</span>;</span><br><span class="line">		Statement st = <span class="keyword">null</span>;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn = JdbcUtils.getConnection();</span><br><span class="line">			String sql = <span class="string">&quot;delete from users where id=4&quot;</span>;</span><br><span class="line">			st = conn.createStatement();</span><br><span class="line">			<span class="keyword">int</span> num = st.executeUpdate(sql);</span><br><span class="line">			<span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;删除成功！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			JdbcUtils.release(conn, st, rs);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Connection conn = <span class="keyword">null</span>;</span><br><span class="line">		Statement st = <span class="keyword">null</span>;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn = JdbcUtils.getConnection();</span><br><span class="line">			String sql = <span class="string">&quot;update users set name=&#x27;wuwang&#x27;,email=&#x27;wuwang@sina.com&#x27; where id=3&quot;</span>;</span><br><span class="line">			st = conn.createStatement();</span><br><span class="line">			<span class="keyword">int</span> num = st.executeUpdate(sql);</span><br><span class="line">			<span class="keyword">if</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;更新成功！！&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			JdbcUtils.release(conn, st, rs);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Connection conn = <span class="keyword">null</span>;</span><br><span class="line">		Statement st = <span class="keyword">null</span>;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn = JdbcUtils.getConnection();</span><br><span class="line">			String sql = <span class="string">&quot;select * from users where id=1&quot;</span>;</span><br><span class="line">			st = conn.createStatement();</span><br><span class="line">			rs = st.executeQuery(sql);</span><br><span class="line">			<span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">				System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			JdbcUtils.release(conn, st, rs);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="JdbcUtil"><a href="#JdbcUtil" class="headerlink" title="JdbcUtil"></a>JdbcUtil</h1><p>完整的JdbcUtil工具包</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> &#123;</span><br><span class="line">		<span class="comment">// 读取资源文件,获取值</span></span><br><span class="line">		<span class="comment">// 创建properties集合类</span></span><br><span class="line">		Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 获取src路径下的文件的⽅式---&gt;ClassLoader 类加载器</span></span><br><span class="line">			ClassLoader classLoader = JdbcUtil.class.getClassLoader();</span><br><span class="line"></span><br><span class="line">			<span class="comment">// URL表示统⼀资源标识符</span></span><br><span class="line">			URL res = classLoader.getResource(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">			String path = res.getPath();</span><br><span class="line">			System.out.println(path);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 2. 加载文件</span></span><br><span class="line">			properties.load(<span class="keyword">new</span> FileReader(path));</span><br><span class="line">			url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">			username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">			password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">			driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">			Class.forName(driver);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取连接</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * DML操作（增删改） 1.获取连接数据库对象 2.预处理 3.执行更新操作</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="comment">// 调用者只需传入一个sql语句，和一个Object数组。该数组存储的是SQL语句中的占位符</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">executeUpdate</span><span class="params">(String sql, Object... obj)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		Connection con = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con = getConnection(); <span class="comment">// 调用getConnection()方法连接数据库</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ps = con.prepareStatement(sql);<span class="comment">// 预处理</span></span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; obj.length; i++) &#123;<span class="comment">// 预处理声明占位符</span></span><br><span class="line">				ps.setObject(i + <span class="number">1</span>, obj[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> count = ps.executeUpdate();<span class="comment">// 执行更新操作</span></span><br><span class="line">			</span><br><span class="line">			<span class="keyword">if</span>(count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">			close(<span class="keyword">null</span>, ps, con);<span class="comment">// 调用close()方法关闭资源</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * DQL查询 Result获取数据集</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&lt;String, Object&gt;&gt; executeQuery(String sql, Object... obj) &#123;</span><br><span class="line">		Connection con = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con = getConnection();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ps = con.prepareStatement(sql);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; obj.length; i++) &#123;</span><br><span class="line">				ps.setObject(i + <span class="number">1</span>, obj[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// new 一个空的list集合用来存放查询结果</span></span><br><span class="line">			List&lt;Map&lt;String, Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 获取结果集的列数</span></span><br><span class="line">			<span class="keyword">int</span> count = rs.getMetaData().getColumnCount();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 对结果集遍历每一条数据是一个Map集合，列是key,值是value</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">// 一个空的map集合，用来存放每一行数据</span></span><br><span class="line">				Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">					Object ob = rs.getObject(i + <span class="number">1</span>);<span class="comment">// 获取值</span></span><br><span class="line">					String key = rs.getMetaData().getColumnName(i + <span class="number">1</span>);<span class="comment">// 获取k即列名</span></span><br><span class="line">					map.put(key, ob);</span><br><span class="line">				&#125;</span><br><span class="line">				list.add(map);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> list;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">			close(rs, ps, con);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 释放资源</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> rs</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> ps</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, PreparedStatement ps, Connection conn)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				rs.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">				e.printStackTrace();</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					ps.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					conn.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
      </tags>
  </entry>
  <entry>
    <title>实验七：简易图书管理模拟系统</title>
    <url>/2021/02/04/%E5%AE%9E%E9%AA%8C%E4%B8%83%EF%BC%9A%E7%AE%80%E6%98%93%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E6%A8%A1%E6%8B%9F%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="【实验目的】"><a href="#【实验目的】" class="headerlink" title="【实验目的】"></a>【实验目的】</h1><p>插入、查找和删除等数据操作在实际应用中非常普遍，通过设计和实现一个简易的图书管理系统，进一步提高学生对插入、查找和删除等操作的理解和应用能力。帮助学生理解和掌握线性表和平衡二叉树等数据结构的基本操作和实现方法，加强学生综合应用数据结构知识解决实际问题的水平和能力。</p>
<h1 id="【实验内容】"><a href="#【实验内容】" class="headerlink" title="【实验内容】"></a>【实验内容】</h1><ol>
<li><p>问题描述：一个简易图书管理的基本业务活动包括：对新购入一种书的采编入库、图书的借阅和归还等。</p>
</li>
<li><p>基本要求：<br>（1）每种书的登记内容至少包括书号、书名、著者、现存量和总库存量等五项。<br>（2）作为演示系统，不必使用文件存储书籍数据和借阅登记信息。我们要求各种书的数据用二叉排序树来存储，借阅登记信息采用顺序表—链表来存储。顺序表存储借阅者信息，链表存储借阅者所借的各种书籍信息。借阅登记信息的存储结构如下示意：<br><img src="https://img-blog.csdnimg.cn/20210128195620157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"><br>需要实现的三种主要功能定义如下：<br>①采编入库：新购入一种书，经分类和确定书号之后登记到图书帐目中去。如果这种书在帐中已有，则只将该书的总库存量增加。<br>②借阅：如果一种书的现存量大于零，则借出一本，登记借阅者的图书证号和归还期限。<br>③归还：注销对借阅者的登记，改变该书的现存量（如果借阅者归还所有的书，则注销该借阅者的信息）。</p>
</li>
<li><p>测试数据：<br>入库书号：ISBN 7-302-02368-9，ISBN 978-7-115-16985-3/TP，ISBN 978-7-302-03314-1，ISBN7-115-10563-4/TP·3043，ISBN 978-7-121-07479-0，ISBN 978-7-115-18809-0/TP，ISBN 978-7-04-024246-1，ISBN 7-111-12886-9，ISBN 978-7-115-19601-9/TP，ISBN 7-900183-01-9。<br>借书证号为081716的借阅者，先借阅10种图书各一本，后归还图书ISBN 7-302-02368-9和ISBN 978-7-121-07479-0。<br>借书证号为081710的借阅者，先借阅图书ISBN 978-7-121-07479-0和ISBN 978-7-302-03314-110各一本，后归还图书ISBN 978-7-121-07479-0。<br>其余数据可自行设计。</p>
</li>
<li><p>实现提示：<br>（1）各种图书按登记的先后顺序入库（利用平衡二叉树实现动态查找表的插入），书号为图书的关键字。初始时，平衡二叉树为空树。<br>（2）借阅者借阅图书时，先检查借阅者有无超期未归还图书，如有，则不能借阅，如无，利用平衡二叉树实现动态查找表的查找，登记借阅信息。注意，按规定，同一种书不能重复借阅。</p>
</li>
</ol>
<h1 id="【实验代码】"><a href="#【实验代码】" class="headerlink" title="【实验代码】"></a>【实验代码】</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BorrowedBook</span> // 书</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string bookNumber; <span class="comment">// 书号</span></span><br><span class="line">    string deadLine; <span class="comment">// 归还期限</span></span><br><span class="line">    BorrowedBook *next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> // 学生</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    string studentNumber; <span class="comment">// 借书号</span></span><br><span class="line">    BorrowedBook *firstBook;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StudentBorrowedBook</span> // 学生借书</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Student *student; <span class="comment">// 借阅者数组</span></span><br><span class="line">    <span class="keyword">int</span> sum; <span class="comment">// 借阅者总数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Book</span> &#123;</span></span><br><span class="line">    string name; <span class="comment">// 书名</span></span><br><span class="line">    string bookNumber; <span class="comment">// 书号</span></span><br><span class="line">    string author; <span class="comment">// 作者</span></span><br><span class="line">    <span class="keyword">int</span> numNow; <span class="comment">// 现存量</span></span><br><span class="line">    <span class="keyword">int</span> numTotal; <span class="comment">//总存量</span></span><br><span class="line">    <span class="keyword">int</span> BF; <span class="comment">// 平衡因子</span></span><br><span class="line">    Book *lChild, *rChild; <span class="comment">// 左右孩子</span></span><br><span class="line">&#125; Book, *AVLBook;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InsertBook</span><span class="params">(AVLBook &amp;book, string bookNumber, <span class="keyword">bool</span> &amp;flag)</span></span>; <span class="comment">//插入新值,flag用于判定是否需要调整平衡因子</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(StudentBorrowedBook &amp;stu, string studentNumber)</span></span>;<span class="comment">//添加新学生</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsExistStu</span><span class="params">(StudentBorrowedBook stu, string numberStu)</span></span>; <span class="comment">// 判断是否存在此学生</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findStudent</span><span class="params">(StudentBorrowedBook stu, string numberStu, Student &amp;res)</span></span>; <span class="comment">// 寻找学生</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SearchTreeBorrow</span><span class="params">(AVLBook book, StudentBorrowedBook &amp;stu, Student &amp;student, string bookNumber, string time)</span></span>; <span class="comment">// 寻找书并借书</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SearchTreeReturn</span><span class="params">(AVLBook book, StudentBorrowedBook &amp;stu, Student &amp;student, string bookNumber)</span></span>; <span class="comment">// 寻找书并还书</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(StudentBorrowedBook stu)</span></span>; <span class="comment">// 描述借阅登记信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(AVLBook T)</span></span>; <span class="comment">// 中序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printT</span><span class="params">(AVLBook T, <span class="keyword">int</span> n)</span></span>; <span class="comment">//凹入表打印树结构</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    AVLBook book = <span class="literal">NULL</span>;</span><br><span class="line">    StudentBorrowedBook stu;</span><br><span class="line">    stu.sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;请问您要做什么，入库书籍请按P，借书请按B，还书请按R，退出系统请按Q：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        cin &gt;&gt; ch;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;Q&#x27;</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;退出程序成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (ch) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>: &#123; <span class="comment">// 入库</span></span><br><span class="line">                <span class="keyword">bool</span> flag;</span><br><span class="line">                <span class="keyword">int</span> bookSum;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请问您要入库几本书：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                cin &gt;&gt; bookSum;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; bookSum; i++) &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;本书的书号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                    string bookNumber;</span><br><span class="line">                    <span class="built_in">getchar</span>();</span><br><span class="line">                    <span class="built_in">getline</span>(cin,bookNumber);</span><br><span class="line">                    <span class="comment">//cin &gt;&gt; bookNumber;</span></span><br><span class="line">                    <span class="built_in">InsertBook</span>(book, bookNumber, flag);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>: &#123; <span class="comment">// 借书</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入你的借书证号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                string studentNum;</span><br><span class="line">                cin &gt;&gt; studentNum;</span><br><span class="line">                <span class="built_in">getchar</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入你要借的书的书号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                string bookNumber;</span><br><span class="line">                <span class="built_in">getline</span>(cin,bookNumber);</span><br><span class="line">                <span class="comment">//cin &gt;&gt; bookNumber;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">IsExistStu</span>(stu, studentNum)) <span class="comment">// 不存在此学生</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">addStudent</span>(stu, studentNum); <span class="comment">// 新建并添加此学生</span></span><br><span class="line">                &#125;</span><br><span class="line">                Student nowStu;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">findStudent</span>(stu, studentNum,nowStu))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">SearchTreeBorrow</span>(book, stu, nowStu, bookNumber, <span class="string">&quot;9&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>: &#123; <span class="comment">// 还书</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入你的借书证号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                string studentNum;</span><br><span class="line">                cin &gt;&gt; studentNum;</span><br><span class="line">                <span class="built_in">getchar</span>();</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;请输入你要还的书的书号：&quot;</span> &lt;&lt; endl;</span><br><span class="line">                string bookNumber;</span><br><span class="line">                <span class="built_in">getline</span>(cin,bookNumber);</span><br><span class="line">                <span class="comment">//cin &gt;&gt; bookNumber;</span></span><br><span class="line"></span><br><span class="line">                Student nowStu;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">findStudent</span>(stu, studentNum,nowStu))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">SearchTreeReturn</span>(book, stu, nowStu, bookNumber);</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;查无此人，无法还书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;输入的功能代码错误，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n借阅人的信息有：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">display</span>(stu); <span class="comment">// 打印借阅人信息</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;中序遍历平衡二叉树：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(book);<span class="comment">//中序遍历平衡二叉树</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n凹入表打印平衡二叉树：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">printT</span>(book, <span class="number">0</span>); <span class="comment">//凹入表打印平衡二叉树</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">R_Rotate</span><span class="params">(AVLBook &amp;book)</span> <span class="comment">// 右旋 顺时针旋转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AVLBook tmp = book-&gt;lChild;</span><br><span class="line">    book-&gt;lChild = tmp-&gt;rChild;</span><br><span class="line">    tmp-&gt;rChild = book;</span><br><span class="line">    book = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">L_Rotate</span><span class="params">(AVLBook &amp;book)</span> <span class="comment">//左旋，逆时针旋转</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AVLBook tmp = book-&gt;rChild;</span><br><span class="line">    book-&gt;rChild = tmp-&gt;lChild;</span><br><span class="line">    tmp-&gt;lChild = book;</span><br><span class="line">    book = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">leftBalance</span><span class="params">(AVLBook &amp;book)</span> <span class="comment">//左边失衡调整</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AVLBook lchild = book-&gt;lChild;</span><br><span class="line">    AVLBook tmpRightChild = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (lchild-&gt;BF) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:                                                                     <span class="comment">//LL型失衡</span></span><br><span class="line">            book-&gt;BF = lchild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">R_Rotate</span>(book);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:                                                                    <span class="comment">//LR型失衡</span></span><br><span class="line">            tmpRightChild = lchild-&gt;rChild;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (tmpRightChild-&gt;BF) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">-1</span>;</span><br><span class="line">                    lchild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    book-&gt;BF = lchild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    lchild-&gt;BF = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmpRightChild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">L_Rotate</span>(book-&gt;lChild);</span><br><span class="line">            <span class="built_in">R_Rotate</span>(book);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rightBalance</span><span class="params">(AVLBook &amp;book)</span> <span class="comment">//右边失衡调整</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AVLBook rightchild = book-&gt;rChild;</span><br><span class="line">    AVLBook tmpChild = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in"><span class="keyword">switch</span></span> (rightchild-&gt;BF) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:                                                                          <span class="comment">//RR型失衡</span></span><br><span class="line">            book-&gt;BF = rightchild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">L_Rotate</span>(book);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:                                                                         <span class="comment">//RL型失衡</span></span><br><span class="line">            tmpChild = rightchild-&gt;lChild;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (tmpChild-&gt;BF) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    rightchild-&gt;BF = <span class="number">-1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    book-&gt;BF = rightchild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    rightchild-&gt;BF = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            tmpChild-&gt;BF = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">R_Rotate</span>(book-&gt;rChild);</span><br><span class="line">            <span class="built_in">L_Rotate</span>(book);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">AVLBook <span class="title">createBook</span><span class="params">(string bookNumber)</span> <span class="comment">//新建一个书节点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    AVLBook newBook = <span class="keyword">new</span> Book;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入书名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; newBook-&gt;name;</span><br><span class="line">    newBook-&gt;bookNumber = bookNumber;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入作者：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; newBook-&gt;author;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入总存量：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; newBook-&gt;numTotal;</span><br><span class="line"></span><br><span class="line">    newBook-&gt;numNow = newBook-&gt;numTotal;</span><br><span class="line">    newBook-&gt;BF = <span class="number">0</span>;</span><br><span class="line">    newBook-&gt;lChild = <span class="literal">NULL</span>;</span><br><span class="line">    newBook-&gt;rChild = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> newBook;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InsertBook</span><span class="params">(AVLBook &amp;book, string bookNumber, <span class="keyword">bool</span> &amp;flag)</span> <span class="comment">//插入新值,flag用于判定是否需要调整平衡因子</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (book == <span class="literal">NULL</span>) &#123;                                    <span class="comment">//树中不包含此键值，则新建一个节点，</span></span><br><span class="line">        book = <span class="built_in">createBook</span>(bookNumber);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (book-&gt;bookNumber == bookNumber) &#123;                <span class="comment">//树中已经包含此键值，则不需要插入</span></span><br><span class="line">        book-&gt;numNow++; <span class="comment">// 现存量+1</span></span><br><span class="line">        book-&gt;numTotal++; <span class="comment">// 总存量+1</span></span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bookNumber &lt; book-&gt;bookNumber) &#123;                  <span class="comment">//插入到左子树中</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">InsertBook</span>(book-&gt;lChild, bookNumber, flag))   <span class="comment">//如果左子树中存在该节点</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (book-&gt;BF) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    <span class="built_in">leftBalance</span>(book);</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">1</span>;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">InsertBook</span>(book-&gt;rChild, bookNumber, flag))   <span class="comment">//如果右子树中存在该节点</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="built_in"><span class="keyword">switch</span></span> (book-&gt;BF) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">0</span>;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                    <span class="built_in">rightBalance</span>(book);</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    book-&gt;BF = <span class="number">-1</span>;</span><br><span class="line">                    flag = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(StudentBorrowedBook &amp;stu, string studentNumber)</span> <span class="comment">//添加新学生</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Student *newStu = <span class="keyword">new</span> Student[stu.sum + <span class="number">1</span>];</span><br><span class="line">    Student *oldStu = stu.student;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.sum; i++) &#123;</span><br><span class="line">        newStu[i] = stu.student[i];</span><br><span class="line">    &#125;</span><br><span class="line">    newStu[stu.sum].studentNumber = studentNumber;</span><br><span class="line">    newStu[stu.sum].firstBook = <span class="keyword">new</span> BorrowedBook;</span><br><span class="line">    newStu[stu.sum].firstBook-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    stu.student = newStu;</span><br><span class="line">    stu.sum++;</span><br><span class="line">    <span class="comment">//delete[] oldStu;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsExistStu</span><span class="params">(StudentBorrowedBook stu, string numberStu)</span> <span class="comment">// 判断是否存在此学生</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.sum; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stu.student[i].studentNumber == numberStu) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findStudent</span><span class="params">(StudentBorrowedBook stu, string numberStu, Student &amp;res)</span> <span class="comment">// 寻找学生</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.sum; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (stu.student[i].studentNumber == numberStu) &#123;</span><br><span class="line">            res = stu.student[i];</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsBook</span><span class="params">(Student stu, string bookNumber)</span> <span class="comment">// 判断此学生是否借过此书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BorrowedBook *p = stu.firstBook-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;bookNumber == bookNumber) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;此学生借过此书了！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsOverTime</span><span class="params">(BorrowedBook *book, string time)</span> <span class="comment">// 判断是否超过借书日期</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> time &lt; book-&gt;deadLine;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsStuBookOverTime</span><span class="params">(Student stu, string time)</span> <span class="comment">// 判断是否超过借书日期</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BorrowedBook *p = stu.firstBook-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">IsOverTime</span>(p, time)) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;有超时未归还的图书，不允许借书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BorrowBook</span><span class="params">(Student &amp;stu, string bookNumber)</span> <span class="comment">// 借阅一本书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;请输入归还日期：&quot;</span> &lt;&lt; endl;</span><br><span class="line">    string deadLine;</span><br><span class="line">    cin &gt;&gt; deadLine;</span><br><span class="line"></span><br><span class="line">    BorrowedBook *newBook = <span class="keyword">new</span> BorrowedBook;</span><br><span class="line">    newBook-&gt;bookNumber = bookNumber;</span><br><span class="line">    newBook-&gt;deadLine = deadLine;</span><br><span class="line"></span><br><span class="line">    newBook-&gt;next = stu.firstBook-&gt;next;</span><br><span class="line">    stu.firstBook-&gt;next = newBook;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">ReturnBook</span><span class="params">(Student &amp;stu, string bookNumber)</span> <span class="comment">// 归还一本书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BorrowedBook *delBook, *p = stu.firstBook-&gt;next, *q = stu.firstBook;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;bookNumber == bookNumber) &#123;</span><br><span class="line">            q-&gt;next = p-&gt;next;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        q = p;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(StudentBorrowedBook &amp;stu, string studentNum)</span> <span class="comment">// 删除一个学生</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.sum; i++) &#123;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (stu.student[i].studentNumber == studentNum) &#123;</span><br><span class="line">            flag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; stu.sum; j++) &#123;</span><br><span class="line">                stu.student[j - <span class="number">1</span>] = stu.student[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stu.sum--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SearchTreeBorrow</span><span class="params">(AVLBook book, StudentBorrowedBook &amp;stu, Student &amp;student, string bookNumber, string time)</span> <span class="comment">// 寻找书并借书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (book-&gt;bookNumber == bookNumber) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (book-&gt;numNow &gt; <span class="number">0</span>) <span class="comment">// 如果此书库存大于0</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">IsStuBookOverTime</span>(student, time)) <span class="comment">// 如果此借阅者没有超期未归还的书</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">IsBook</span>(student, book-&gt;bookNumber)) <span class="comment">// 如果此学生没有借过此书</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">BorrowBook</span>(student, book-&gt;bookNumber);</span><br><span class="line">                    book-&gt;numNow--;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;学生&quot;</span> &lt;&lt; student.studentNumber &lt;&lt; <span class="string">&quot;借了一本《&quot;</span> &lt;&lt; book-&gt;name &lt;&lt; <span class="string">&quot;》，作者为&quot;</span> &lt;&lt; book-&gt;author;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;，书号为：&quot;</span> &lt;&lt; book-&gt;bookNumber &lt;&lt; <span class="string">&quot;。库存&quot;</span> &lt;&lt; book-&gt;numTotal &lt;&lt; <span class="string">&quot;本，现存&quot;</span>;</span><br><span class="line">                    cout &lt;&lt; book-&gt;numNow &lt;&lt; <span class="string">&quot;本&quot;</span> &lt;&lt; endl;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;此书已经被借阅完，无余书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bookNumber &gt; book-&gt;bookNumber &amp;&amp; book-&gt;rChild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">SearchTreeBorrow</span>(book-&gt;rChild, stu,student, bookNumber, time);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bookNumber &lt; book-&gt;bookNumber &amp;&amp; book-&gt;lChild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">SearchTreeBorrow</span>(book-&gt;lChild, stu,student, bookNumber, time);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;查无此书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">if</span> (student.firstBook-&gt;next == <span class="literal">NULL</span>) <span class="comment">// 如果此学生的所借书为零，那么删除此学生</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">deleteStudent</span>(stu, student.studentNumber);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SearchTreeReturn</span><span class="params">(AVLBook book, StudentBorrowedBook &amp;stu, Student &amp;student, string bookNumber)</span> <span class="comment">// 寻找书并还书</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (book-&gt;bookNumber == bookNumber) &#123; <span class="comment">// 找到书</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ReturnBook</span>(student, book-&gt;bookNumber)) <span class="comment">// 还书</span></span><br><span class="line">        &#123;</span><br><span class="line">            book-&gt;numNow++; <span class="comment">// 图书馆书现储备量增加</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;学生&quot;</span> &lt;&lt; student.studentNumber &lt;&lt; <span class="string">&quot;还了一本《&quot;</span> &lt;&lt; book-&gt;name &lt;&lt; <span class="string">&quot;》，作者为&quot;</span> &lt;&lt; book-&gt;author;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;，书号为：&quot;</span> &lt;&lt; book-&gt;bookNumber &lt;&lt; <span class="string">&quot;。库存&quot;</span> &lt;&lt; book-&gt;numTotal &lt;&lt; <span class="string">&quot;本，现存&quot;</span>;</span><br><span class="line">            cout &lt;&lt; book-&gt;numNow &lt;&lt; <span class="string">&quot;本&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (student.firstBook-&gt;next == <span class="literal">NULL</span>) <span class="comment">// 如果此学生的所借书为零，那么删除此学生</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">deleteStudent</span>(stu, student.studentNumber);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;此学生未借此书，无法归还！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bookNumber &gt; book-&gt;bookNumber &amp;&amp; book-&gt;rChild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">SearchTreeReturn</span>(book-&gt;rChild, stu, student, bookNumber);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (bookNumber &lt; book-&gt;bookNumber &amp;&amp; book-&gt;lChild) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">SearchTreeReturn</span>(book-&gt;lChild, stu, student, bookNumber);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;查无此书！&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">(StudentBorrowedBook stu)</span> <span class="comment">// 描述借阅登记信息</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.sum; i++) &#123;</span><br><span class="line">        BorrowedBook *p = stu.student[i].firstBook-&gt;next;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;此人借书号为：&quot;</span> &lt;&lt; stu.student[i].studentNumber &lt;&lt; <span class="string">&quot;   所借书籍的书号有：  &quot;</span>;</span><br><span class="line">        <span class="keyword">while</span> (p) &#123;</span><br><span class="line">            cout &lt;&lt; p-&gt;bookNumber &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderTraverse</span><span class="params">(AVLBook T)</span> <span class="comment">// 中序遍历</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;lChild);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;书号：&quot;</span> &lt;&lt; T-&gt;bookNumber &lt;&lt; <span class="string">&quot;  现存量：&quot;</span> &lt;&lt; T-&gt;numNow &lt;&lt; <span class="string">&quot;  &quot;</span>;</span><br><span class="line">    <span class="built_in">InOrderTraverse</span>(T-&gt;rChild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printT</span><span class="params">(AVLBook T, <span class="keyword">int</span> n)</span> <span class="comment">//凹入表打印树结构</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T) &#123;</span><br><span class="line">        <span class="built_in">printT</span>(T-&gt;rChild, n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;   &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            cout &lt;&lt; T-&gt;bookNumber &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printT</span>(T-&gt;lChild, n + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>数据结构实验</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaWeb项目——学生点名系统</title>
    <url>/2021/08/21/JavaWeb%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94%E5%AD%A6%E7%94%9F%E7%82%B9%E5%90%8D%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="一、项目概述"><a href="#一、项目概述" class="headerlink" title="一、项目概述"></a>一、项目概述</h1><p>​        本项目所完成的是一个web端的学生点名系统，可以根据不同的学生名单来记录各个学生的考勤记录与课堂表现分。为了简化开发流程，数据并没有采用数据库管理，而是直接使用了csv文件来储存。项目很简单，下面就来开始开发吧。</p>
<h1 id="二、实际开发"><a href="#二、实际开发" class="headerlink" title="二、实际开发"></a>二、实际开发</h1><h2 id="一、项目结构介绍"><a href="#一、项目结构介绍" class="headerlink" title="一、项目结构介绍"></a>一、项目结构介绍</h2><p>首先来看看此项目的目录结构。</p>
<p><img src="https://img-blog.csdnimg.cn/58e99aa1974b4bf3a976c5c619960ec5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="目录结构一"><img src="https://img-blog.csdnimg.cn/7ba6dd281af4477f9799b8cdd3a0d97f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="目录结构二"></p>
<p><strong>项目各包作用</strong>：</p>
<table>
<thead>
<tr>
<th align="center">包名</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">dao</td>
<td align="center">存放处理csv文件的类</td>
</tr>
<tr>
<td align="center">data</td>
<td align="center">存放csv文件</td>
</tr>
<tr>
<td align="center">pojo</td>
<td align="center">实体类</td>
</tr>
<tr>
<td align="center">servlet</td>
<td align="center">存放servlet的包</td>
</tr>
<tr>
<td align="center">views</td>
<td align="center">存放前端页面</td>
</tr>
<tr>
<td align="center">style</td>
<td align="center">存放css文件</td>
</tr>
<tr>
<td align="center">scripts</td>
<td align="center">存放js文件</td>
</tr>
<tr>
<td align="center">WEB-INF</td>
<td align="center">存放应用配置文件</td>
</tr>
</tbody></table>
<p><strong>注意</strong>：由于本项目使用了jstl库，所以需要大家自己去网上下载对应的版本库来加入到自己的项目中，这样项目才能成功运行。</p>
<h2 id="二、开发流程"><a href="#二、开发流程" class="headerlink" title="二、开发流程"></a>二、开发流程</h2><h3 id="一、data包内数据的获取"><a href="#一、data包内数据的获取" class="headerlink" title="一、data包内数据的获取"></a>一、data包内数据的获取</h3><p>此包内都是csv文件，大家请自行获取。</p>
<p>给大家写一个demo。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">序号,状态,学号,姓名,2020.11.02,2020.11.16,2020.11.30,2020.12.14,2020.12.16,2020.12.28,2021.05.31,2021.06.01,2021.06.02,2021.06.03,2021.06.04,2021.06.05,2021.06.06,2021.06.07,2021.06.08,2021.06.09,2021.06.10,2021.06.11,2021.06.12,2021.08.18,2021.08.21</span><br><span class="line">1,OK,1925101002,姓名,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0</span><br><span class="line">2,OK,1925101007,姓名,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">3,OK,1925102007,姓名,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">4,OK,1925102017,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">5,OK,1925102022,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">6,OK,1925102024,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">7,OK,1925102026,姓名,0,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">8,OK,1925102037,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">9,OK,1925103003,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">10,OK,1925103006,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">11,OK,1925103007,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">12,OK,1925103022,姓名,0,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">13,OK,1925103028,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">14,OK,1925104022,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">15,OK,1925104037,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">16,OK,1725121039,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line">17,OK,1925105057,姓名,0,0,0,0,0,X,X,X,0,0,0,0,0,0,0,0,0,0,0,0,0</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="二、pojo包内实体类的创建"><a href="#二、pojo包内实体类的创建" class="headerlink" title="二、pojo包内实体类的创建"></a>二、pojo包内实体类的创建</h3><p>此包内存放的都是我们需要用到的实体类。</p>
<p><strong>Attendance.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Attendance</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> String status;</span><br><span class="line">    <span class="keyword">private</span> String sequence;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String[] marks;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> marksLength;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Attendance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Attendance</span><span class="params">(String sequence, String status, String id, String name, String[] marks)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">        <span class="keyword">this</span>.sequence = sequence;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.marks = marks;</span><br><span class="line">        <span class="keyword">this</span>.marksLength = marks.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.sequence + <span class="string">&quot;,&quot;</span> + <span class="keyword">this</span>.status + <span class="string">&quot;,&quot;</span> + <span class="keyword">this</span>.id + <span class="string">&quot;,&quot;</span> + <span class="keyword">this</span>.name + getMarksString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getMarksString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String m = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.marks.length; i++) &#123;</span><br><span class="line">            m = m + <span class="string">&quot;,&quot;</span> + marks[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(String status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSequence</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSequence</span><span class="params">(String sequence)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sequence = sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getMarks() &#123;</span><br><span class="line">        <span class="keyword">return</span> marks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMarks</span><span class="params">(String[] marks)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.marks = marks;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMarksLength</span><span class="params">(<span class="keyword">int</span> marksLength)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.marksLength = marksLength;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMarksLength</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> marksLength;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>Clazz.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Clazz</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Clazz</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Clazz</span><span class="params">(<span class="keyword">int</span> id, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.id + <span class="string">&quot;  &quot;</span> + <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>User</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String passWard;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String userName, String passWard)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">        <span class="keyword">this</span>.passWard = passWard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassWard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> passWard;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassWard</span><span class="params">(String passWard)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.passWard = passWard;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="三、dao包内类的创建"><a href="#三、dao包内类的创建" class="headerlink" title="三、dao包内类的创建"></a>三、dao包内类的创建</h3><p>此包存放的是与csv文件直接交互的类AttendanceDao.java</p>
<p>下面附上源码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.pojo.Attendance;</span><br><span class="line"><span class="keyword">import</span> cn.egret.pojo.Clazz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AttendanceDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String path = <span class="string">&quot;C:\\Users\\14489\\IdeaProjects\\StudentRollCallSystem\\src\\cn\\egret\\data&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Clazz&gt; <span class="title">getAllClasses</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Clazz&gt; clazz = <span class="keyword">null</span>;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (file.isDirectory()) &#123;</span><br><span class="line">            String[] list = file.list();</span><br><span class="line">            clazz = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> idIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (list[i].endsWith(<span class="string">&quot;.csv&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// System.out.println(list[i]);</span></span><br><span class="line">                    Clazz c = <span class="keyword">new</span> Clazz(idIndex, list[i]);</span><br><span class="line">                    idIndex++;</span><br><span class="line">                    clazz.add(c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;非文件夹&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> clazz;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Attendance&gt; <span class="title">findAllByClassId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        List&lt;Attendance&gt; attendance = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        File Reader = <span class="keyword">new</span> File(path);</span><br><span class="line">        String[] list = Reader.list();</span><br><span class="line">        <span class="keyword">int</span> idIndex = <span class="number">0</span>;</span><br><span class="line">        String fileName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == idIndex) &#123;</span><br><span class="line">                fileName = list[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (list[i].endsWith(<span class="string">&quot;.csv&quot;</span>)) &#123;</span><br><span class="line">                idIndex++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            File csvReader = <span class="keyword">new</span> File(path, fileName);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(csvReader));</span><br><span class="line">            String line = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) <span class="comment">// 读取到的内容给line变量</span></span><br><span class="line">            &#123;</span><br><span class="line">                String tempLine = line;</span><br><span class="line">                String[] items = tempLine.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (items.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    Attendance tempa = <span class="keyword">new</span> Attendance(items[<span class="number">0</span>], items[<span class="number">1</span>], items[<span class="number">2</span>], items[<span class="number">3</span>],</span><br><span class="line">                            Arrays.copyOfRange(items, <span class="number">4</span>, items.length));</span><br><span class="line">                    attendance.add(tempa);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line"></span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(csvReader);</span><br><span class="line">            BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(fw);</span><br><span class="line"></span><br><span class="line">            Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">            SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy.MM.dd&quot;</span>);</span><br><span class="line">            String datenow = simpleDateFormat.format(date);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">boolean</span> isToday = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (Attendance att : attendance) &#123;</span><br><span class="line">                <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!att.getMarks()[att.getMarks().length - <span class="number">1</span>].equals(datenow)) &#123;</span><br><span class="line">                        String[] newMarks = <span class="keyword">new</span> String[att.getMarks().length + <span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; att.getMarks().length; i++) &#123;</span><br><span class="line">                            newMarks[i] = att.getMarks()[i];</span><br><span class="line">                        &#125;</span><br><span class="line">                        newMarks[att.getMarks().length] = datenow;</span><br><span class="line">                        att.setMarks(newMarks);</span><br><span class="line">                        isToday = <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!isToday) &#123;</span><br><span class="line">                        String[] newMarks = <span class="keyword">new</span> String[att.getMarks().length + <span class="number">1</span>];</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; att.getMarks().length; i++) &#123;</span><br><span class="line">                            newMarks[i] = att.getMarks()[i];</span><br><span class="line">                        &#125;</span><br><span class="line">                        newMarks[att.getMarks().length] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                        att.setMarks(newMarks);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                flag++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Attendance a : attendance) &#123;</span><br><span class="line">                bw.write(a.toString().trim() + <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            bw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> attendance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">saveAllByClassId</span><span class="params">(<span class="keyword">int</span> id, List&lt;Attendance&gt; list)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        File Reader = <span class="keyword">new</span> File(path);</span><br><span class="line">        String[] listName = Reader.list();</span><br><span class="line">        <span class="keyword">int</span> idIndex = <span class="number">0</span>;</span><br><span class="line">        String fileName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; listName.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (id == idIndex) &#123;</span><br><span class="line">                fileName = listName[i];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (listName[i].endsWith(<span class="string">&quot;.csv&quot;</span>)) &#123;</span><br><span class="line">                idIndex++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File csvWriter = <span class="keyword">new</span> File(path, fileName);</span><br><span class="line">        BufferedWriter writer;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(csvWriter));</span><br><span class="line">            <span class="keyword">for</span> (Attendance a : list) &#123;</span><br><span class="line">                writer.write(a.toString().trim() + <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            writer.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeSelf</span><span class="params">(Attendance a, Attendance attendance)</span> </span>&#123;</span><br><span class="line">        a.setId(attendance.getId());</span><br><span class="line">        a.setStatus(attendance.getStatus());</span><br><span class="line">        a.setSequence(attendance.getSequence());</span><br><span class="line">        a.setName(attendance.getName());</span><br><span class="line">        a.setMarks(attendance.getMarks());</span><br><span class="line">        a.setMarksLength(attendance.getMarks().length);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="四、servlet包内各类的创建"><a href="#四、servlet包内各类的创建" class="headerlink" title="四、servlet包内各类的创建"></a>四、servlet包内各类的创建</h3><p><strong>dealAttServlet.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.AttendanceDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.pojo.Attendance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">dealAttServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    AttendanceDao attendanceDao = <span class="keyword">new</span> AttendanceDao();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> classId = Integer.parseInt(request.getParameter(<span class="string">&quot;classId&quot;</span>));</span><br><span class="line"></span><br><span class="line">        String student = request.getParameter(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">        student.trim();</span><br><span class="line">        String []items = student.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        Attendance attendance = <span class="keyword">new</span> Attendance(items[<span class="number">0</span>], items[<span class="number">1</span>], items[<span class="number">2</span>], items[<span class="number">3</span>],</span><br><span class="line">                Arrays.copyOfRange(items, <span class="number">4</span>, items.length));</span><br><span class="line"></span><br><span class="line">        List&lt;Attendance&gt; studentlist = attendanceDao.findAllByClassId(classId);</span><br><span class="line">        <span class="keyword">for</span>(Attendance a : studentlist)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a.getSequence().equals(attendance.getSequence()))&#123;</span><br><span class="line">                attendanceDao.changeSelf(a,attendance);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        attendanceDao.saveAllByClassId(classId, studentlist);</span><br><span class="line"></span><br><span class="line">        PrintWriter printWriter = response.getWriter();</span><br><span class="line">        printWriter.write(student);</span><br><span class="line">        printWriter.flush();</span><br><span class="line">        printWriter.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>SessionFilter.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest arg0, ServletResponse arg1, FilterChain arg2)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) arg0;</span><br><span class="line">        HttpServletResponse response = (HttpServletResponse) arg1;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        System.out.println(session.getAttribute(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">        <span class="comment">//判断session是否过期</span></span><br><span class="line">        <span class="keyword">if</span> (session.getAttribute(<span class="string">&quot;userName&quot;</span>) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="number">11111</span>);</span><br><span class="line">            <span class="comment">//跳转至登录页面</span></span><br><span class="line">            response.sendRedirect(<span class="string">&quot;http://localhost:8081/StudentRollCallSystem_war_exploded/&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arg2.doFilter(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig arg0)</span> <span class="keyword">throws</span> ServletException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>SystemServlet.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.AttendanceDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    AttendanceDao attendanceDao = <span class="keyword">new</span> AttendanceDao();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        StringBuffer urL = request.getRequestURL();</span><br><span class="line">        String action = urL.substring(urL.lastIndexOf(<span class="string">&quot;/&quot;</span>) + <span class="number">1</span>, urL.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (action) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;top&quot;</span>: &#123;</span><br><span class="line">                topDispose(request, response);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;left&quot;</span>: &#123;</span><br><span class="line">                leftDispose(request, response);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;attendance&quot;</span>: &#123;</span><br><span class="line">                attendanceDispose(request, response);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;main&quot;</span>: &#123;</span><br><span class="line">                mainDispose(request, response);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">topDispose</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setAttribute(<span class="string">&quot;userName&quot;</span>, request.getSession().getAttribute(<span class="string">&quot;userName&quot;</span>));</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/views/top.jsp&quot;</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">leftDispose</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setAttribute(<span class="string">&quot;classList&quot;</span>, attendanceDao.getAllClasses());</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/views/left.jsp&quot;</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">attendanceDispose</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setAttribute(<span class="string">&quot;classId&quot;</span>,Integer.parseInt(request.getParameter(<span class="string">&quot;classId&quot;</span>)));</span><br><span class="line">        request.setAttribute(<span class="string">&quot;studentList&quot;</span>, attendanceDao.findAllByClassId(Integer.parseInt(request.getParameter(<span class="string">&quot;classId&quot;</span>))));</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/views/attendance.jsp&quot;</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mainDispose</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;/views/main.jsp&quot;</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>UserServlet.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; userList;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        userList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="string">&quot;Egret&quot;</span>,<span class="string">&quot;123456&quot;</span>));</span><br><span class="line">        userList.add(<span class="keyword">new</span> User(<span class="string">&quot;Admin&quot;</span>,<span class="string">&quot;123456&quot;</span>));</span><br><span class="line"></span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        String userName = request.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        String passWard = request.getParameter(<span class="string">&quot;passWord&quot;</span>);</span><br><span class="line">        System.out.println(userName);</span><br><span class="line">        System.out.println(passWard);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(User user : userList)&#123;</span><br><span class="line">            <span class="keyword">if</span>(user.getUserName().equals(userName) &amp;&amp; user.getPassWard().equals(passWard))&#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                session.setAttribute(<span class="string">&quot;userName&quot;</span>,userName);</span><br><span class="line">                session.setAttribute(<span class="string">&quot;passWard&quot;</span>,passWard);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/views/main.jsp&quot;</span>).forward(request,response);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/views/login.jsp&quot;</span>).forward(request,response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="五、views内各页面"><a href="#五、views内各页面" class="headerlink" title="五、views内各页面"></a>五、views内各页面</h3><p><strong>login.jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">14489</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">6</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">24</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/views/UserServlet&quot;</span>&gt;</span><br><span class="line">    &lt;p align=<span class="string">&quot;center&quot;</span>&gt;用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;userName&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p align=<span class="string">&quot;center&quot;</span>&gt;密&amp;nbsp;&amp;nbsp;码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;passWord&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">    &lt;p align=<span class="string">&quot;center&quot;</span>&gt;&lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>main.jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">14489</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">6</span>/<span class="number">10</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">18</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span></span><br><span class="line">         pageEncoding=<span class="string">&quot;UTF-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html HTML PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span></span><br><span class="line"><span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;主页面&lt;/title&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;content-type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;frameset rows=<span class="string">&quot;10%,*&quot;</span> frameborder=<span class="string">&quot;no&quot;</span>&gt;</span><br><span class="line">    &lt;frame id=<span class="string">&quot;top&quot;</span> src=<span class="string">&quot;top.html&quot;</span> scrolling=<span class="string">&quot;none&quot;</span> style=<span class="string">&quot;border: rgb(70,130,180)&quot;</span>/&gt;</span><br><span class="line">    &lt;frameset cols=<span class="string">&quot;20%,*&quot;</span> frameborder=<span class="string">&quot;no&quot;</span>&gt;</span><br><span class="line">        &lt;frame id=<span class="string">&quot;left&quot;</span> src=<span class="string">&quot;left.html&quot;</span> scrolling=<span class="string">&quot;auto&quot;</span> style=<span class="string">&quot;border:medium double rgb(70,130,190)&quot;</span>/&gt;</span><br><span class="line">        &lt;frame id=<span class="string">&quot;attendance&quot;</span> name=<span class="string">&quot;views/attendance&quot;</span> src=<span class="string">&quot;attendance.html?classId=0&quot;</span> scrolling=<span class="string">&quot;auto&quot;</span></span><br><span class="line">               style=<span class="string">&quot;border:medium double rgb(70,130,190)&quot;</span>/&gt;</span><br><span class="line">    &lt;/frameset&gt;</span><br><span class="line">&lt;/frameset&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>top.jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">14489</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">6</span>/<span class="number">10</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">17</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.text.SimpleDateFormat&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Top&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;../style/topStyle.css&quot;</span> type=<span class="string">&quot;text/css&quot;</span>/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;点名与提问计分系统&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;</span><br><span class="line">    $&#123;userName&#125;</span><br><span class="line">&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn&quot;</span>&gt;</span><br><span class="line">    &lt;button&gt;退出中心&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">&quot;time&quot;</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">        setInterval(<span class="string">&quot;time.innerHTML=new Date().toLocaleString()+&#x27; 星期&#x27;+&#x27;日一二三四五六&#x27;.charAt(new Date().getDay());&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<p><strong>left.jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">14489</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">6</span>/<span class="number">10</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">16</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.*&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;cn.egret.pojo.Clazz&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Left&lt;/title&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;../style/leftStyle.css&quot;</span> type=<span class="string">&quot;text/css&quot;</span>/&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">&quot;left&quot;</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;display:flex; width: 100%; height: 50px; font-size: 16pt;</span></span><br><span class="line"><span class="string">                background-color: azure; align-items: center; background-color: cornflowerblue&quot;</span>&gt;</span><br><span class="line">        &lt;p style=<span class="string">&quot;color: white; font-size: 16px;&quot;</span>&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;班级&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;% List&lt;Clazz&gt; classList = (List&lt;Clazz&gt;) request.getAttribute(<span class="string">&quot;classList&quot;</span>);%&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;views/main.html&quot;</span>&gt;</span><br><span class="line">    &lt;div style=<span class="string">&quot;width:100%; display: flex; flex-direction: column; margin-left: 2px;&quot;</span>&gt;</span><br><span class="line">        &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;cla&quot;</span> items=<span class="string">&quot;$&#123;classList&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;div style=<span class="string">&quot;width: 160px; text-align:center; margin: 10px 0 10px 0; font-size: 10px;&quot;</span>&gt;</span><br><span class="line">                &lt;a href=<span class="string">&quot;attendance.html?classId=$&#123;cla.getId()&#125;&quot;</span></span><br><span class="line">                   target=<span class="string">&#x27;views/attendance&#x27;</span>&gt;*&amp;nbsp;$&#123;cla.getName()&#125;&lt;/a&gt;&lt;/br&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>attendance.jsp</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">14489</span></span><br><span class="line">  Date: <span class="number">2021</span>/<span class="number">6</span>/<span class="number">10</span></span><br><span class="line">  Time: <span class="number">23</span>:<span class="number">17</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;cn.egret.pojo.Attendance&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Attendance&lt;/title&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;content-type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>/&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;../style/attendanceStyle.css&quot;</span> type=<span class="string">&quot;text/css&quot;</span>/&gt;</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;../scripts/attendanceJs.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;bigButtons&quot;</span>&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;bigButton&quot;</span> onclick=<span class="string">&quot;randomGet()&quot;</span>&gt;随机&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;bigButton&quot;</span> onclick=<span class="string">&quot;orderGet(1)&quot;</span>&gt;正序&lt;/button&gt;</span><br><span class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;bigButton&quot;</span> onclick=<span class="string">&quot;orderGet(-1)&quot;</span>&gt;反序&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    List&lt;Attendance&gt; studentList = (List&lt;Attendance&gt;) request.getAttribute(<span class="string">&quot;studentList&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> classId = (<span class="keyword">int</span>) request.getAttribute(<span class="string">&quot;classId&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;table id=<span class="string">&quot;attendanceTable&quot;</span> onmouseover=<span class="string">&quot;rowTouch()&quot;</span>&gt;</span><br><span class="line">    &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;flag&quot;</span> value=<span class="string">&quot;$&#123;0&#125;&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;attendance&quot;</span> items=<span class="string">&quot;$&#123;studentList&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;flag == 0&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tdHead&quot;</span>&gt;$&#123;attendance.getSequence()&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tdHead&quot;</span>&gt;$&#123;attendance.getStatus()&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tdHead&quot;</span>&gt;$&#123;attendance.getId()&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tdHead&quot;</span>&gt;$&#123;attendance.getName()&#125;&lt;/td&gt;</span><br><span class="line">                &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;temp&quot;</span> begin=<span class="string">&quot;0&quot;</span> end=<span class="string">&quot;$&#123;attendance.getMarksLength()&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tdHead&quot;</span>&gt;$&#123;attendance.getMarks()[temp]&#125;&lt;/td&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;flag != 0&#125;&quot;</span>&gt;</span><br><span class="line">                &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;res&quot;</span> value=<span class="string">&quot;$&#123;flag % 2&#125;&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;res == 0&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;gra&quot;</span>&gt;$&#123;attendance.getSequence()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;gra&quot;</span>&gt;$&#123;attendance.getStatus()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;gra&quot;</span>&gt;$&#123;attendance.getId()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;gra&quot;</span>&gt;$&#123;attendance.getName()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;temp&quot;</span> begin=<span class="string">&quot;0&quot;</span> end=<span class="string">&quot;$&#123;attendance.getMarksLength()&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;td <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;gra&quot;</span>&gt;$&#123;attendance.getMarks()[temp]&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line"></span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;res != 0&#125;&quot;</span>&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;attendance.getSequence()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;attendance.getStatus()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;attendance.getId()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;attendance.getName()&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;temp&quot;</span> begin=<span class="string">&quot;0&quot;</span> end=<span class="string">&quot;$&#123;attendance.getMarksLength()&#125;&quot;</span>&gt;</span><br><span class="line">                        &lt;td&gt;$&#123;attendance.getMarks()[temp]&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;/c:forEach&gt;</span><br><span class="line">                &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">            &lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;flag&quot;</span> value=<span class="string">&quot;$&#123;flag+1&#125;&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">&quot;popBox&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;infoAndColButtons&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;info&quot;</span>&gt;</span><br><span class="line">            &lt;p id=<span class="string">&quot;text1&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;text1&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">            &lt;p id=<span class="string">&quot;text2&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;text2&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButtons&quot;</span>&gt;</span><br><span class="line">            &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButton&quot;</span> onclick=<span class="string">&quot;quit()&quot;</span>&gt;关闭&lt;/button&gt;</span><br><span class="line">            &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButton&quot;</span> onclick=<span class="string">&quot;changeScore(+1,$&#123;classId&#125;)&quot;</span>&gt;+<span class="number">1</span>&lt;/button&gt;</span><br><span class="line">            &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButton&quot;</span> onclick=<span class="string">&quot;changeScore(+2,$&#123;classId&#125;)&quot;</span>&gt;+<span class="number">2</span>&lt;/button&gt;</span><br><span class="line">            &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButton&quot;</span> onclick=<span class="string">&quot;changeScore(+5,$&#123;classId&#125;)&quot;</span>&gt;+<span class="number">5</span>&lt;/button&gt;</span><br><span class="line">            &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;colButton&quot;</span> onclick=<span class="string">&quot;changeScore(-2,$&#123;classId&#125;)&quot;</span>&gt;-<span class="number">2</span>&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButtons&quot;</span>&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;notTake($&#123;classId&#125;)&quot;</span>&gt;未修&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;changeState(&#x27;J&#x27;,$&#123;classId&#125;)&quot;</span>&gt;请假&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;changeState(&#x27;X&#x27;,$&#123;classId&#125;)&quot;</span>&gt;旷课&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;changeState(&#x27;L&#x27;,$&#123;classId&#125;)&quot;</span>&gt;迟到&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;reSet($&#123;classId&#125;)&quot;</span>&gt;还原&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;changeStudent(-1)&quot;</span>&gt;上一个&lt;/button&gt;</span><br><span class="line">        &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;rowButton&quot;</span> onclick=<span class="string">&quot;changeStudent(1)&quot;</span>&gt;下一个&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<h3 id="六、style内各文件"><a href="#六、style内各文件" class="headerlink" title="六、style内各文件"></a>六、style内各文件</h3><p><strong>attendanceStyle.css</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bigButtons</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ADD8E6</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">6em</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0.8em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.bigButton</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3E6AA2</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.high</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid cornflowerblue;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: lightblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tdHead</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: midnightblue;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#C4EDFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gra</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightgray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#popBox</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">8em</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid darkblue;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#EEEEEE</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.infoAndColButtons</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.info</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">4em</span> <span class="number">4em</span> <span class="number">0em</span> <span class="number">4.5em</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text2</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.5em</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.5em</span> <span class="number">4em</span> <span class="number">0em</span> <span class="number">4.5em</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.colButtons</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">16em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.colButton</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#EEEEEE</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.8em</span> <span class="number">0em</span> <span class="number">0.8em</span> <span class="number">4em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2E5097</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">4em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.rowButtons</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">30em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">4em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.rowButton</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#EEEEEE</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.4em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2E5097</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>leftStyle.css</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#left</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: cornflowerblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>topStyle.css</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#E6FFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: darkgoldenrod;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 华光胖头鱼_CNKI;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: auto;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#time</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">45em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="七、scripts内文件"><a href="#七、scripts内文件" class="headerlink" title="七、scripts内文件"></a>七、scripts内文件</h3><p><strong>attendance.js</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sequence = <span class="string">&quot;&quot;</span>, status = <span class="string">&quot;&quot;</span>, id = <span class="string">&quot;&quot;</span>, name = <span class="string">&quot;&quot;</span>, marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rowTouch</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; cells.length; j++) &#123;</span><br><span class="line">            cells[j].addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">1</span>; k &lt; rows.length; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (rows[k].classList.contains(<span class="string">&quot;high&quot;</span>)) &#123;</span><br><span class="line">                        rows[k].classList.remove(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                sequence = cells[<span class="number">0</span>].innerText;</span><br><span class="line">                status = cells[<span class="number">1</span>].innerText;</span><br><span class="line">                id = cells[<span class="number">2</span>].innerText;</span><br><span class="line">                name = cells[<span class="number">3</span>].innerText;</span><br><span class="line">                marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">4</span>; k &lt; cells.length; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k == cells.length - <span class="number">1</span>) &#123;</span><br><span class="line">                        marks += cells[k].innerText;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        marks += cells[k].innerText + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                rows[i].classList.add(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;text1&quot;</span>).innerText = id;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;text2&quot;</span>).innerText = name;</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;popBox&quot;</span>).style.display = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rows[i].classList.contains(<span class="string">&quot;high&quot;</span>)) &#123;</span><br><span class="line">            rows[i].classList.remove(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;popBox&quot;</span>).style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeScore</span>(<span class="params">num, classId</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">let</span> tempMarks = marks.trim().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> index = tempMarks.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> score = tempMarks[index];</span><br><span class="line">    score = <span class="built_in">parseInt</span>(score) + <span class="built_in">parseInt</span>(num);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isNaN</span>(score)) &#123;</span><br><span class="line">        score = tempMarks[index - <span class="number">1</span>];</span><br><span class="line">        score = <span class="built_in">parseInt</span>(score) + <span class="built_in">parseInt</span>(num);</span><br><span class="line">        index--;</span><br><span class="line">    &#125;</span><br><span class="line">    tempMarks[index] = score;</span><br><span class="line">    marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= index; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == index) &#123;</span><br><span class="line">            marks += tempMarks[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            marks += tempMarks[i] + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> httpRequest;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">            <span class="comment">//在IE6以上的版本以及其他内核的浏览器(Mozilla)等</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">            <span class="comment">//在IE6以下的版本</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == sequence) &#123;</span><br><span class="line">                <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">                cells[index + <span class="number">4</span>].innerText = score;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;dealAttServlet?classId=&quot;</span> + classId + <span class="string">&quot;&amp;student=&quot;</span> + sequence + <span class="string">&quot;,&quot;</span> + status + <span class="string">&quot;,&quot;</span> + id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + marks + <span class="string">&quot;&amp;time=&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(), <span class="literal">true</span>);</span><br><span class="line">        httpRequest.send();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">notTake</span>(<span class="params">classId</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line"></span><br><span class="line">    status = <span class="string">&quot;NotTake&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> httpRequest;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">            <span class="comment">//在IE6以上的版本以及其他内核的浏览器(Mozilla)等</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">            <span class="comment">//在IE6以下的版本</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        httpRequest.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (httpRequest.readyState == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (httpRequest.status == <span class="number">200</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (i == sequence) &#123;</span><br><span class="line">                            <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">                            cells[<span class="number">1</span>].innerText = httpRequest.responseText.split(<span class="string">&quot;,&quot;</span>)[<span class="number">1</span>];</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;dealAttServlet?&amp;classId=&quot;</span> + classId + <span class="string">&quot;&amp;student=&quot;</span> + sequence + <span class="string">&quot;,&quot;</span> + status + <span class="string">&quot;,&quot;</span> + id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + marks + <span class="string">&quot;&amp;time=&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(), <span class="literal">true</span>);</span><br><span class="line">        httpRequest.send();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeState</span>(<span class="params">st, classId</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">let</span> tempMarks = marks.trim().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> index = tempMarks.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> flag = tempMarks[index];</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isNaN</span>(<span class="built_in">parseInt</span>(flag) || !(flag == <span class="string">&quot;J&quot;</span> || flag == <span class="string">&quot;X&quot;</span> || flag == <span class="string">&quot;L&quot;</span>))) &#123;</span><br><span class="line">        index--;</span><br><span class="line">        flag = tempMarks[index];</span><br><span class="line">    &#125;</span><br><span class="line">    tempMarks[index] = st;</span><br><span class="line">    marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= index; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == index) &#123;</span><br><span class="line">            marks += tempMarks[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            marks += tempMarks[i] + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> httpRequest;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">            <span class="comment">//在IE6以上的版本以及其他内核的浏览器(Mozilla)等</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">            <span class="comment">//在IE6以下的版本</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == sequence) &#123;</span><br><span class="line">                <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">                cells[index + <span class="number">4</span>].innerText = st;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;dealAttServlet?classId=&quot;</span> + classId + <span class="string">&quot;&amp;student=&quot;</span> + sequence + <span class="string">&quot;,&quot;</span> + status + <span class="string">&quot;,&quot;</span> + id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + marks + <span class="string">&quot;&amp;time=&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(), <span class="literal">true</span>);</span><br><span class="line">        httpRequest.send();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reSet</span>(<span class="params">classId</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">let</span> tempMarks = marks.trim().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> index = tempMarks.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> flag = tempMarks[index];</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isNaN</span>(<span class="built_in">parseInt</span>(flag) || !(flag == <span class="string">&quot;J&quot;</span> || flag == <span class="string">&quot;X&quot;</span> || flag == <span class="string">&quot;L&quot;</span>))) &#123;</span><br><span class="line">        index--;</span><br><span class="line">        flag = tempMarks[index];</span><br><span class="line">    &#125;</span><br><span class="line">    tempMarks[index] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    status = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= index; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == index) &#123;</span><br><span class="line">            marks += tempMarks[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            marks += tempMarks[i] + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> httpRequest;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">            <span class="comment">//在IE6以上的版本以及其他内核的浏览器(Mozilla)等</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">            <span class="comment">//在IE6以下的版本</span></span><br><span class="line">            httpRequest = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == sequence) &#123;</span><br><span class="line">                <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">                cells[index + <span class="number">4</span>].innerText = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                cells[<span class="number">1</span>].innerText = <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        httpRequest.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;dealAttServlet?classId=&quot;</span> + classId + <span class="string">&quot;&amp;student=&quot;</span> + sequence + <span class="string">&quot;,&quot;</span> + status + <span class="string">&quot;,&quot;</span> + id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + marks + <span class="string">&quot;&amp;time=&quot;</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(), <span class="literal">true</span>);</span><br><span class="line">        httpRequest.send();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeStudent</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> cells = rows[i].cells;</span><br><span class="line">        <span class="keyword">if</span> (sequence === cells[<span class="number">0</span>].innerText) &#123;</span><br><span class="line">            <span class="keyword">let</span> index = <span class="built_in">parseInt</span>(i) + <span class="built_in">parseInt</span>(num);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (index &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                index = rows.length - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= rows.length) &#123;</span><br><span class="line">                index = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            cells = rows[index].cells;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">1</span>; k &lt; rows.length; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (rows[k].classList.contains(<span class="string">&quot;high&quot;</span>)) &#123;</span><br><span class="line">                    rows[k].classList.remove(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sequence = cells[<span class="number">0</span>].innerText;</span><br><span class="line">            status = cells[<span class="number">1</span>].innerText;</span><br><span class="line">            id = cells[<span class="number">2</span>].innerText;</span><br><span class="line">            name = cells[<span class="number">3</span>].innerText;</span><br><span class="line">            marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">4</span>; k &lt; cells.length; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (k == cells.length - <span class="number">1</span>) &#123;</span><br><span class="line">                    marks += cells[k].innerText;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    marks += cells[k].innerText + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            rows[index].classList.add(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;text1&quot;</span>).innerText = id;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">&quot;text2&quot;</span>).innerText = name;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomGet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">let</span> rowLength = rows.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> ran = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="built_in">parseInt</span>(rowLength), <span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cells = rows[ran].cells;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">1</span>; k &lt; rows.length; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rows[k].classList.contains(<span class="string">&quot;high&quot;</span>)) &#123;</span><br><span class="line">            rows[k].classList.remove(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sequence = cells[<span class="number">0</span>].innerText;</span><br><span class="line">    status = cells[<span class="number">1</span>].innerText;</span><br><span class="line">    id = cells[<span class="number">2</span>].innerText;</span><br><span class="line">    name = cells[<span class="number">3</span>].innerText;</span><br><span class="line">    marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">4</span>; k &lt; cells.length; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == cells.length - <span class="number">1</span>) &#123;</span><br><span class="line">            marks += cells[k].innerText;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            marks += cells[k].innerText + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rows[ran].classList.add(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;text1&quot;</span>).innerText = id;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;text2&quot;</span>).innerText = name;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;popBox&quot;</span>).style.display = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">orderGet</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> rows = <span class="built_in">document</span>.getElementById(<span class="string">&quot;attendanceTable&quot;</span>).rows;</span><br><span class="line">    <span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">1</span>; k &lt; rows.length; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rows[k].classList.contains(<span class="string">&quot;high&quot;</span>)) &#123;</span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        changeStudent(num);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> index;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) &#123;</span><br><span class="line">            index = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            index = rows.length - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cells = rows[index].cells;</span><br><span class="line">        sequence = cells[<span class="number">0</span>].innerText;</span><br><span class="line">        status = cells[<span class="number">1</span>].innerText;</span><br><span class="line">        id = cells[<span class="number">2</span>].innerText;</span><br><span class="line">        name = cells[<span class="number">3</span>].innerText;</span><br><span class="line">        marks = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">4</span>; k &lt; cells.length; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (k == cells.length - <span class="number">1</span>) &#123;</span><br><span class="line">                marks += cells[k].innerText;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                marks += cells[k].innerText + <span class="string">&quot;,&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        rows[index].classList.add(<span class="string">&quot;high&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;text1&quot;</span>).innerText = id;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;text2&quot;</span>).innerText = name;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;popBox&quot;</span>).style.display = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="八、web-xml的创建"><a href="#八、web-xml的创建" class="headerlink" title="八、web.xml的创建"></a>八、web.xml的创建</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/views/login.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.egret.servlet.SystemServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/main.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/top.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/left.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/attendance.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dealAttServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.egret.servlet.dealAttServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dealAttServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/dealAttServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.egret.servlet.UserServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>UserServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/UserServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SessionFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>cn.egret.servlet.SessionFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SessionFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/main.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/views/attendance.html<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h2><p><strong>登录页面</strong></p>
<p><img src="https://img-blog.csdnimg.cn/df68641df0294d67847485e33be28740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="登录页面"></p>
<p><strong>主页面</strong></p>
<p><img src="https://img-blog.csdnimg.cn/6732631e4a4b494a989781d4b2925173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="主页面"></p>
]]></content>
      <categories>
        <category>Java项目</category>
      </categories>
      <tags>
        <tag>JavaWeb</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL笔记</title>
    <url>/2021/07/16/MySQL%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h1 id="1、什么是数据库"><a href="#1、什么是数据库" class="headerlink" title="1、什么是数据库"></a>1、什么是数据库</h1><p>数据集合，数据是有一定规律、结构</p>
<p><strong>数据库分类</strong></p>
<p>​    关系型数据库：数据库中存储数据以表为单位</p>
<p>​    非关系型数据库：通常用来解决特定的数据：数据缓存，高并发访问。存储形式有很多种：Redis数据库 通过键值对的形式存储数据</p>
<p><strong>主流数据库介绍：</strong></p>
<p>​    MySQL：开源免费</p>
<p>​    Oracle:    闭源、最贵、性能最高，市场排行第二</p>
<p>​    SQLServer：微软，市场排行第三，主要应用.NET（C#）开发的网站</p>
<p>​    DB2：IBM，主要应用银行等国有企业中</p>
<p>​    sqlite：轻量级，只有几十K 一般应用在嵌入式和移动设备中</p>
<p><strong>开源和闭源区别：</strong></p>
<p>​    开源：开源代码，盈利方式靠卖业务，赚钱慢少，用户群大，大牛程序员会无偿帮忙升级维护</p>
<p>​    闭源：不开放代码，盈利方式卖产品+服务，赚钱快，大牛们各种攻击找漏洞</p>
<h1 id="2、基础命令"><a href="#2、基础命令" class="headerlink" title="2、基础命令"></a>2、基础命令</h1><p>登录命令 mysql -u root -p</p>
<ul>
<li><p>展示数据库(查看mysql目录下的所有数据库)</p>
<ul>
<li>show databases;</li>
</ul>
</li>
<li><p>新建数据库</p>
<ul>
<li>create database 数据库名;</li>
</ul>
</li>
<li><p>使用当前数据库</p>
<ul>
<li>use 数据库名;</li>
</ul>
</li>
<li><p>展示数据库表</p>
<ul>
<li>show tables;</li>
</ul>
</li>
<li><p>展示数据库表信息</p>
<ul>
<li>desc 表名;</li>
<li>show create table 数据库名;</li>
</ul>
</li>
</ul>
<h1 id="3、SQL"><a href="#3、SQL" class="headerlink" title="3、SQL"></a>3、SQL</h1><h2 id="3-1、什么是sql"><a href="#3-1、什么是sql" class="headerlink" title="3.1、什么是sql"></a>3.1、什么是sql</h2><p>​    结构化查询语句</p>
<h2 id="3-2、sql的分类"><a href="#3-2、sql的分类" class="headerlink" title="3.2、sql的分类"></a>3.2、sql的分类</h2><ol>
<li><p>DDL（数据库定义语言） 定义数据库对象：库、表、列、索引、约束</p>
<ul>
<li>create、drop、alter、rename</li>
</ul>
</li>
<li><p>DML（数据库操作语言）：操作数据库的<strong>数据</strong></p>
<ul>
<li>insert、delete、update、select</li>
</ul>
</li>
<li><p>DCL（数据库控制语句）：设置访问权限、安全级别</p>
<ul>
<li>grant（授权） revoke（回收特权）</li>
</ul>
</li>
<li><p>TC（ 事务控制）：控制事务回滚，保存节点以及提交</p>
<ul>
<li>commit、rollback、savepoint</li>
</ul>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#建表语句</span><br><span class="line"></span><br><span class="line">create table 表名(</span><br><span class="line"></span><br><span class="line">id int primary key,</span><br><span class="line"></span><br><span class="line">name varchar(255)</span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure>



<h2 id="3-3、列类型"><a href="#3-3、列类型" class="headerlink" title="3.3、列类型"></a>3.3、列类型</h2><ul>
<li><p>整型：int、Integer、bigint等</p>
</li>
<li><p>oracle中数字类型设置成number类型，mysql中没有number类型</p>
</li>
<li><p>int类型默认长度11，如果超出长度报错</p>
</li>
<li><p>浮点型：float，double，decimal（可以手动设置精度）</p>
</li>
<li><p>字符型：char，varchar</p>
</li>
<li><p>char是定长的字符串，长度100，无论使用长度是多还是少，所占内存都是100</p>
</li>
<li><p>varchar为自己定义一个长度，开辟的内存100但是实际所占内存按照实际存入数据大小</p>
</li>
<li><p>时间类型：date、time、timestamp（时间戳）</p>
</li>
</ul>
<h2 id="3-4、删除语句"><a href="#3-4、删除语句" class="headerlink" title="3.4、删除语句"></a>3.4、删除语句</h2><ul>
<li><p>DROP：drop table 表名；删除表结构以及数据</p>
</li>
<li><p>TRUNCATE：truncate table 表名；仅删除数据</p>
</li>
<li><p>友情提示：尽量谨慎使用，在没有备份的时候，千万别用</p>
</li>
</ul>
<h2 id="3-5、修改语句-ALTER"><a href="#3-5、修改语句-ALTER" class="headerlink" title="3.5、修改语句(ALTER)"></a>3.5、修改语句(ALTER)</h2><p>修改列：modify 仅能修改列类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 modify 字段名 字段类型</span><br></pre></td></tr></table></figure>

<p>增加列：ADD</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 add age int;</span><br></pre></td></tr></table></figure>

<p>删除列：drop</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 drop 字段名;</span><br></pre></td></tr></table></figure>

<p>修改列名以及列类型：change</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 change 要修改的字段名 新的字段名 字段类型;</span><br></pre></td></tr></table></figure>

<p>4、重命名：RENAME</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">RENAME TABLE 表名 to 新表名</span><br></pre></td></tr></table></figure>



<h2 id="3-6、约束"><a href="#3-6、约束" class="headerlink" title="3.6、约束"></a>3.6、约束</h2><h3 id="1、什么是约束"><a href="#1、什么是约束" class="headerlink" title="1、什么是约束"></a>1、什么是约束</h3><p>​            强制执行在表上的一种规则</p>
<h3 id="2、约束的作用"><a href="#2、约束的作用" class="headerlink" title="2、约束的作用"></a>2、约束的作用</h3><p>​            保证数据库的完整性；在表拥有依赖的情况下，保证数据安全</p>
<h3 id="3、约束的分类"><a href="#3、约束的分类" class="headerlink" title="3、约束的分类"></a>3、约束的分类</h3><p>​            非空约束、唯一约束、检查约束、主键约束、外键约束</p>
<p>​            根据作用于分成表级约束以及列级约束</p>
<h3 id="4、约束的创建"><a href="#4、约束的创建" class="headerlink" title="4、约束的创建"></a>4、约束的创建</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">非空约束：not null</span><br><span class="line">create table 表名(</span><br><span class="line">    id int not null</span><br><span class="line">);</span><br><span class="line">被约束的字段不能为空</span><br><span class="line"></span><br><span class="line">唯一性约束：unique</span><br><span class="line">create table 表名(</span><br><span class="line">    id int unique</span><br><span class="line">);</span><br><span class="line">被约束的字段是唯一值</span><br><span class="line">insert into test(1001,&#x27;张三&#x27;);</span><br><span class="line">insert into test(1001,&#x27;李四&#x27;);</span><br><span class="line"></span><br><span class="line">检查约束:check(mysql会忽略)</span><br><span class="line">create table 表名(</span><br><span class="line">    id int primary key,</span><br><span class="line">    name varchar(20),</span><br><span class="line">    age int check(age&gt;18)</span><br><span class="line">);</span><br><span class="line">insert into test values(1001,&#x27;张三&#x27;,15);</span><br><span class="line">insert into test values(1002,&#x27;李四&#x27;,15);</span><br><span class="line">主键约束（自增）：即时表级约束也是列级别的约束。非空且唯一，且代表创建了一个索引</span><br><span class="line">一个表中只能有一个主键，可以有多个主键约束</span><br><span class="line"></span><br><span class="line">关键字primary key，constraint</span><br><span class="line">外键约束：拥有主从关系，将某表主键设置成另一个表的外键，主键表为主表，外键表为外表</span><br><span class="line"></span><br><span class="line">当删除主表数据库的时候，要确保从表中被占有的数据已经删除，当增加或者删除的时候，要确保主表中已经有该数据或者已删除该数据</span><br></pre></td></tr></table></figure>

<h3 id="5、约束的修改"><a href="#5、约束的修改" class="headerlink" title="5、约束的修改"></a>5、约束的修改</h3><p>​    约束的增加：</p>
<p>​        增加一个非空约束：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 modify/add id int not null</span><br></pre></td></tr></table></figure>

<p>​        删除一个非空约束：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 modify id</span><br></pre></td></tr></table></figure>

<p>​        增加唯一性约束：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 constraint unique(字段)</span><br></pre></td></tr></table></figure>

<p>​        增加外键约束：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table 表名 ADD constraint  foreign KEY 约束名（字段名） references 主表名（字段名）</span><br></pre></td></tr></table></figure>

<h3 id="6、设置主从表表级联动"><a href="#6、设置主从表表级联动" class="headerlink" title="6、设置主从表表级联动"></a>6、设置主从表表级联动</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table [表名] ADD constraint  foregin key 约束（字段名） references 主表名（字段名）</span><br></pre></td></tr></table></figure>

<p><strong>set null</strong>：当外键值被删除之后，设置为空</p>
<p><strong>on action/restrict</strong>：和外键默认效果相同 可不写</p>
<p><strong>cascade</strong>：主从表联动</p>
<h3 id="7、自增，默认值"><a href="#7、自增，默认值" class="headerlink" title="7、自增，默认值"></a>7、自增，默认值</h3><p><strong>auto_increment，default</strong></p>
<p>放置在字段类型后面</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table user(id int auto_increment,name varchar(20) default &#x27;sss&#x27;);</span><br></pre></td></tr></table></figure>



<h1 id="Mysql单表操作"><a href="#Mysql单表操作" class="headerlink" title="Mysql单表操作"></a>Mysql单表操作</h1><h2 id="表数据的CRUD操作"><a href="#表数据的CRUD操作" class="headerlink" title="表数据的CRUD操作"></a>表数据的CRUD操作</h2><h2 id="一、DML语句"><a href="#一、DML语句" class="headerlink" title="一、DML语句"></a>一、DML语句</h2><h3 id="1-1、插入语法"><a href="#1-1、插入语法" class="headerlink" title="1.1、插入语法"></a>1.1、插入语法</h3><h4 id="一、语法"><a href="#一、语法" class="headerlink" title="一、语法"></a>一、语法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#方式一</span><br><span class="line">INSERT INTO 表名（字段名,...) VALUES(值...,...)</span><br><span class="line">#方式二</span><br><span class="line">INSERT INTO 表名 SET 字段名=值，字段名=值...</span><br></pre></td></tr></table></figure>

<h4 id="二、特点"><a href="#二、特点" class="headerlink" title="二、特点"></a>二、特点</h4><ol>
<li><p>要求值得类型和字段的类型要一致或兼容</p>
</li>
<li><p>字段的个数和顺序不一定与原始表中字段个数和顺序一直，但是必须保证值和字段一一对应</p>
</li>
<li><p>假如表中有可以null的字段，注意可通过2种方式进入插入null值</p>
<ol>
<li>字段和值都可以忽略</li>
<li>字段可以写上，值使用null</li>
</ol>
</li>
<li><p>字段和值得个数必须一致</p>
</li>
<li><p>字段名可以忽略，默认所有列</p>
</li>
<li><p>方式一，支持一次插入多行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名[（字段名,...)] VALUES(值...,...),(值...,...),(值...,...)...</span><br></pre></td></tr></table></figure></li>
<li><p>支持子查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名 查询语句</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="三、演示"><a href="#三、演示" class="headerlink" title="三、演示"></a>三、演示</h4><p>1.1、方式一：插入数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名[（字段名,...)] VALUES(值...,...),(值...,...),(值...,...)...</span><br></pre></td></tr></table></figure>

<p>1.2、方式二：插入数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO dept dept_id = 1,dept_name = &#x27;test&#x27;,dept_descript = &#x27;test&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="1-2、修改语句"><a href="#1-2、修改语句" class="headerlink" title="1.2、修改语句"></a>1.2、修改语句</h3><h4 id="一、语法-1"><a href="#一、语法-1" class="headerlink" title="一、语法"></a>一、语法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#更新</span><br><span class="line">UPDATE 表名 SET 字段 = 值，....WHERE 查询条件;</span><br><span class="line">#无查询条件默认更新全部</span><br></pre></td></tr></table></figure>

<h4 id="二、演示"><a href="#二、演示" class="headerlink" title="二、演示"></a>二、演示</h4><h5 id="1、单表更新"><a href="#1、单表更新" class="headerlink" title="1、单表更新"></a>1、单表更新</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE emp SET age = 19 WHERE emp_name = &quot;张三&quot;;</span><br></pre></td></tr></table></figure>

<h3 id="1-3、删除语句"><a href="#1-3、删除语句" class="headerlink" title="1.3、删除语句"></a>1.3、删除语句</h3><h4 id="一、语法-2"><a href="#一、语法-2" class="headerlink" title="一、语法"></a>一、语法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#删除</span><br><span class="line">DELETE FROM 表名 WHERE 查询条件;</span><br><span class="line">truncate table 表名 ;#删除表中的所有记录</span><br></pre></td></tr></table></figure>

<h4 id="二、演示-1"><a href="#二、演示-1" class="headerlink" title="二、演示"></a>二、演示</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM emp WHERE emp_name LIKE &#x27;李%&#x27;;</span><br></pre></td></tr></table></figure>

<h2 id="二、DQL语句"><a href="#二、DQL语句" class="headerlink" title="二、DQL语句"></a>二、DQL语句</h2><h3 id="2-1、基础查询"><a href="#2-1、基础查询" class="headerlink" title="2.1、基础查询"></a>2.1、基础查询</h3><h3 id="一、语法-3"><a href="#一、语法-3" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 查询列表 FROM 表名；</span><br></pre></td></tr></table></figure>

<h3 id="二、特点-1"><a href="#二、特点-1" class="headerlink" title="二、特点"></a>二、特点</h3><p>1、查询列表是可以字段、常量、函数、表达式</p>
<p>2、查询结果是一个 虚拟表</p>
<h3 id="三、例子"><a href="#三、例子" class="headerlink" title="三、例子"></a>三、例子</h3><p>1、查询单个字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段名 FROM 表名；</span><br></pre></td></tr></table></figure>

<p>2、查询多个字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段名,字段名 FROM 表名；</span><br></pre></td></tr></table></figure>

<p>3、查询所有字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM 表名；</span><br></pre></td></tr></table></figure>

<p>4、起别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段名 AS &quot;别名&quot; FROM 表名；</span><br></pre></td></tr></table></figure>

<p>注意：别名可以使用单引号、双引号，当只有一个单词时候，可以忽略引号，当有多个单词且有空格或者特殊符号，不能省略 AS 可以 省略</p>
<p>5、查询常量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 常量；</span><br></pre></td></tr></table></figure>

<p>注意：字符型和日期型的常量值必须用单引号，数值型不需要</p>
<p>6、去重复</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 字段名 FROM 表名;</span><br></pre></td></tr></table></figure>

<h3 id="2-2、条件查询"><a href="#2-2、条件查询" class="headerlink" title="2.2、条件查询"></a>2.2、条件查询</h3><h3 id="一、语法-4"><a href="#一、语法-4" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 查询列表 FROM 表名 WHERE 筛选条件;</span><br></pre></td></tr></table></figure>

<h3 id="二、分类"><a href="#二、分类" class="headerlink" title="二、分类"></a>二、分类</h3><p>1、<strong>条件运算符</strong>：&gt;、&gt;=、 &lt;、 &lt;=、 =、 &lt;=&gt;等于、 !=、 &lt;&gt;不等于</p>
<p>2、<strong>逻辑运算符</strong>：and、or、not</p>
<p>3、<strong>模糊运算符</strong>：</p>
<ul>
<li><strong>like</strong>：**%**任意多个字段  **_**任意单个字符</li>
<li><strong>between and</strong></li>
<li><strong>not between and</strong></li>
<li><strong>in</strong></li>
<li><strong>is null</strong></li>
<li><strong>is not null</strong></li>
</ul>
<h3 id="三、演示-1"><a href="#三、演示-1" class="headerlink" title="三、演示"></a>三、演示</h3><p>1、查询工资&gt;12000的员工的信息</p>
<p>2、查询工资&gt;=14000的员工</p>
<p>3、查询工资&lt;12000的员工的信息</p>
<p>4、查询&lt;=14000的员工</p>
<p>5、查询员工编号 = 1001的员工信息</p>
<p>6、查询员工编号&lt;=&gt;1004的员工信息</p>
<p><strong>注意：</strong>只能判断普通类型的数值，而&lt;=&gt;不仅可以判断普通类型值 还可以判断null</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE</span><br><span class="line">  emp_id &lt;=&gt; 1004</span><br></pre></td></tr></table></figure>

<p>7、查询员工编号!=1001的员工信息</p>
<p>8、查询员工编号&lt;&gt;1001的员工信息</p>
<p><font color="red">———————————————————————————————————————————————————</font></p>
<p>9、查询工资&gt;12000 &amp;&amp;工资&lt;18000的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE</span><br><span class="line">  salary &gt; 1200 AND salary &lt; 18000</span><br></pre></td></tr></table></figure>

<p>10、查询工资&lt;=12000 ||工资&gt;=18000的员工信息</p>
<p>11、查询工资 不是 &lt;=12000 ||工资&gt;=18000的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE NOT</span><br><span class="line">  salary &gt; 1200 OR salary &lt; 18000</span><br></pre></td></tr></table></figure>

<p>12、查询员工第一个字符是王、第四个字符为子的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE</span><br><span class="line">  emp_name LIKE &#x27;王__子%&#x27;</span><br></pre></td></tr></table></figure>

<p>13、查询员工编号在1000-2000之间的员工</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE</span><br><span class="line">  emp_id BETWEEN 1000 AND 2000</span><br></pre></td></tr></table></figure>

<p>14、查询员工编号不在1000-2000之间的员工</p>
<p>15、查询员工的老板编号 是 2002，2001的一个员工的名字和员工编号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">  *</span><br><span class="line">FROM</span><br><span class="line">  emp</span><br><span class="line">WHERE</span><br><span class="line">  boos_id IN(2002,2001); </span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong>in列表的值类型必须一致或者兼容，in列表中不支持支持通配符%和_</p>
<p><strong>注意：</strong>=、!=不能用来判断NULL、而&lt;=&gt;、is null、is not null 可以来判断null</p>
<h3 id="2-3、排序查询"><a href="#2-3、排序查询" class="headerlink" title="2.3、排序查询"></a>2.3、排序查询</h3><h3 id="一、语法-5"><a href="#一、语法-5" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	查询列表</span><br><span class="line">FROM</span><br><span class="line">	表</span><br><span class="line">WHERE 筛选条件</span><br><span class="line">ORDER BY 排序列表 asc/desc</span><br></pre></td></tr></table></figure>

<h3 id="二、注意"><a href="#二、注意" class="headerlink" title="二、注意"></a>二、注意</h3><ol>
<li><p>排序列表可以是单个字段、多个字段、别名、函数、表达式</p>
</li>
<li><p>asc代表升序，desc代表的是降序，如果不写，默认asc</p>
</li>
<li><p>order by 的位置一般放在查询语句的最后面（除limit语句之外）</p>
</li>
</ol>
<h3 id="三、例子-1"><a href="#三、例子-1" class="headerlink" title="三、例子"></a>三、例子</h3><ol>
<li><p>按单个字段排序：查询员工的信息，要求工资降序</p>
</li>
<li><p>按多个字段排序：查询员工的信息，要求先按工资的降序，再按照员工编号升序</p>
</li>
</ol>
<h3 id="2-4、单行函数"><a href="#2-4、单行函数" class="headerlink" title="2.4、单行函数"></a>2.4、单行函数</h3><h3 id="一、语法-6"><a href="#一、语法-6" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 函数名(实参列表) FROM 表</span><br></pre></td></tr></table></figure>

<h3 id="二、分类-1"><a href="#二、分类-1" class="headerlink" title="二、分类"></a>二、分类</h3><p>1、字符函数</p>
<ul>
<li>concat：连接字符</li>
<li>substr：截取子串</li>
<li>replace：替换字符</li>
<li>upper：变大写</li>
<li>lower：变小写</li>
<li>lpad：左填充</li>
<li>rpad：右填充</li>
<li>length：获取字节长度</li>
<li>trim：去除前后空格</li>
<li>instr：获取子串第一次出现的索引（注意：MYSQL的索引从1开始）</li>
</ul>
<p>2、数学函数</p>
<ul>
<li>round：四舍五入</li>
<li>ceil：向上取整</li>
<li>floor：向下取整</li>
<li>mod：取模运算</li>
<li>truncate：保留小数位数，不进行四舍五入</li>
<li>rand：获取随机数，返回0-1之间的小数</li>
</ul>
<p>3、日期函数</p>
<ul>
<li>now：返回当前日期+时间</li>
<li>curdate:返回当前日期</li>
<li>curtime：返回当前日期</li>
<li>year：返回年</li>
<li>month：返回月</li>
<li>day：返回日</li>
<li>hour：小时</li>
<li>minute：分钟</li>
<li>second：秒</li>
<li>monthname：以英文形式返回月</li>
<li>datediff：返回2个日期相差的天数</li>
<li>date_format：将日期转化成字符</li>
<li>str_to_date：将字符转成日期 </li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#格式符</span><br><span class="line">%Y:四位的年份</span><br><span class="line">%y:二位的年份</span><br><span class="line">%m:二位数的月份（01,02.....）</span><br><span class="line">%c:一位的月份（1,2.....）</span><br><span class="line">%d:日(01,....30,31)</span><br><span class="line">%H:小时（24小时制）</span><br><span class="line">%h:小时（12小时）</span><br><span class="line">%i:分钟(00....59)</span><br><span class="line">%s:秒(00....59)</span><br></pre></td></tr></table></figure>

<p>4、控制函数</p>
<ul>
<li>if 判断函数</li>
<li>case：分支函数</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、IF（条件判断，表达式1,表达式2）：条件成立，返回表达1，否则返回表达2</span><br><span class="line"></span><br><span class="line">2、case的格式一：</span><br><span class="line">	CASE 变量或者字段或者表达式</span><br><span class="line">		WHEN 常量1 THEN 值1</span><br><span class="line">		WHEN 常量2 THEN 值2</span><br><span class="line">		....</span><br><span class="line">		ELSE 值 n</span><br><span class="line">	END;</span><br><span class="line">	</span><br><span class="line">3、case的格式二：</span><br><span class="line">	CASE</span><br><span class="line">		WHEN 条件1 THEN 值1</span><br><span class="line">		WHEN 条件2 THEN 值2</span><br><span class="line">		....</span><br><span class="line">		ELSE 值 n</span><br><span class="line">	END;</span><br></pre></td></tr></table></figure>

<p>5、其他函数</p>
<ul>
<li>version:当前数据库的版本</li>
<li>database:当前打开的数据库</li>
<li>user:当前登录的用户</li>
<li>password(“字符”)：返回该字符的密码格式</li>
<li>md5(“加密”)：返回该字符的md5加密形式</li>
</ul>
<h3 id="三、演示-2"><a href="#三、演示-2" class="headerlink" title="三、演示"></a>三、演示</h3><p>1、concat</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT concat(&#x27;hello&#x27;,&#x27;World&#x27;) AS out_put</span><br></pre></td></tr></table></figure>

<p>2、substr</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#截取从指定的索引后面所有字符</span><br><span class="line">SELECT SUBSTR(&#x27;HelloWorld&#x27;,7) AS out_put</span><br><span class="line">#截取从指定索引处指定字符长度的字符</span><br><span class="line">SELECT SUBSTR(&#x27;HelloWorld&#x27;,7,1) AS out_put</span><br></pre></td></tr></table></figure>

<p>3、replace</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT REPLACE(&#x27;HelloWorld&#x27;,&#x27;World&#x27;,&#x27;W&#x27;) AS out_put</span><br></pre></td></tr></table></figure>

<p>4、round</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#默认的四舍五入</span><br><span class="line">SELECT ROUND(-1.55) AS out_put</span><br><span class="line">#指定保留的小数位数</span><br><span class="line">SELECT ROUND(-1.556,2) AS out_put</span><br></pre></td></tr></table></figure>

<p>注意：四舍五入和符号无关</p>
<p>5、rand</p>
<p>6、返回当前的时间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT NOW() AS out_put</span><br></pre></td></tr></table></figure>

<p>7、日期函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT YEAR(NOW())年;</span><br><span class="line">SELECT MONTH(NOW())月;</span><br></pre></td></tr></table></figure>

<p>8、计算日期天数：datediff</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DATEDIFF(&#x27;2021-5-1&#x27;,&#x27;2021-4-18&#x27;)AS out_put</span><br></pre></td></tr></table></figure>

<p>9、日期格式化date_format</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DATE_FORMAT(NOW(),&#x27;%Y年%m月%d日&#x27;)  AS out_put</span><br></pre></td></tr></table></figure>

<p>10、字符串转日期</p>
<p>11、if</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT IF(10 &lt; 5,&#x27;大&#x27;，&#x27;小&#x27; ) AS out_put</span><br></pre></td></tr></table></figure>

<p>12、case的格式一</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	查询员工的工资 ，要求</span><br><span class="line">	boos_id = 2001 显示工资为1.1倍</span><br><span class="line">	boos_id = 2002 显示工资为1.2倍</span><br><span class="line">	boos_id = 3001 显示工资为1.3倍</span><br><span class="line">	其他部门 显示的工资为原始工资</span><br><span class="line">*/</span><br><span class="line">SELECT</span><br><span class="line">	salary 原始工资,</span><br><span class="line">	emp_name,</span><br><span class="line">	CASE</span><br><span class="line">		boos_id</span><br><span class="line">		WHEN 2001 THEN salary * 1.1</span><br><span class="line">		WHEN 2002 THEN salary * 1.2</span><br><span class="line">		WHEN 3001 THEN salary * 1.3</span><br><span class="line">		ELSE salary</span><br><span class="line">	END AS 新工资</span><br><span class="line">	FROM </span><br><span class="line">		emp</span><br></pre></td></tr></table></figure>

<p>13、case的格式二</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	查询员工的工资情况</span><br><span class="line">	如果工资 &gt; 20000 显示A级别</span><br><span class="line">	如果工资 &gt; 15000 显示B级别</span><br><span class="line">	如果工资 &gt; 10000 显示C级别</span><br><span class="line">	否则，显示D级别</span><br><span class="line">*/</span><br><span class="line">	SELECT</span><br><span class="line">		salary,</span><br><span class="line">		CASE</span><br><span class="line">			WHEN salary &gt; 20000 THEN &#x27;A&#x27;</span><br><span class="line">			WHEN salary &gt; 15000 THEN &#x27;B&#x27;</span><br><span class="line">			WHEN salary &gt; 10000 THEN &#x27;C&#x27;</span><br><span class="line">		ELSE &#x27;D&#x27;</span><br><span class="line">		END AS 工资级别</span><br><span class="line">		FROM</span><br><span class="line">			emp</span><br></pre></td></tr></table></figure>

<p>14、password(‘字符’)</p>
<p>15、md5（’字符’)</p>
<h3 id="2-5、聚合函数"><a href="#2-5、聚合函数" class="headerlink" title="2.5、聚合函数"></a>2.5、聚合函数</h3><h3 id="一、语法-7"><a href="#一、语法-7" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 函数名（实参列表） FROM 表</span><br></pre></td></tr></table></figure>

<h3 id="二、分类-2"><a href="#二、分类-2" class="headerlink" title="二、分类"></a>二、分类</h3><ol>
<li>SUM()返回某个列之和</li>
<li>AVG()返回某列的平均值</li>
<li>MAX()返回某列的最大值</li>
<li>MIN()返回某列的最小值</li>
<li>COUNT()返回某列的行数</li>
</ol>
<p><strong>注意：</strong></p>
<ul>
<li>sum、avg 一般用于处理数值型，max、min、count可以处理任何类型</li>
<li>以上分组函数都忽略null值</li>
<li>可以和distinct搭配去重运算 select sum(distinct 字段) from 表</li>
<li>一般使用COUNT(*)用于统计行数</li>
<li>和分组函数一同查询字段要求 group by 后的字段</li>
</ul>
<h3 id="三、演示-3"><a href="#三、演示-3" class="headerlink" title="三、演示"></a>三、演示</h3><p>1、SUM</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT SUM(salary) FROM emp</span><br></pre></td></tr></table></figure>

<p>2、AVG</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT AVG(salary) FROM emp</span><br></pre></td></tr></table></figure>

<p>3、MAX</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT MAX(salary) FROM emp</span><br></pre></td></tr></table></figure>

<p>4、MIN</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT MIN(salary) FROM emp</span><br></pre></td></tr></table></figure>

<p>5、COUNT</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT COUNT(salary) FROM emp</span><br></pre></td></tr></table></figure>



<h3 id="2-6、分组查询"><a href="#2-6、分组查询" class="headerlink" title="2.6、分组查询"></a>2.6、分组查询</h3><h3 id="一、语法-8"><a href="#一、语法-8" class="headerlink" title="一、语法"></a>一、语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	查询列表</span><br><span class="line">FROM</span><br><span class="line">	表</span><br><span class="line">WHERE 筛选条件</span><br><span class="line">GROUP BY 分组的字段</span><br><span class="line">having 分组后的筛选</span><br><span class="line">order by 排序的字段</span><br></pre></td></tr></table></figure>

<h3 id="二、特点-2"><a href="#二、特点-2" class="headerlink" title="二、特点"></a>二、特点</h3><p>1、和分组函数一同查询的字段必须GROUP BY后出现的字段</p>
<p>2、筛选分为2类：分组前的筛选和分组后的筛选</p>
<table>
<thead>
<tr>
<th>针对的表</th>
<th>语句位置</th>
<th>连接的关键字</th>
</tr>
</thead>
<tbody><tr>
<td>分组前的原始表</td>
<td>GROUP BY前</td>
<td>where</td>
</tr>
<tr>
<td>分组后的结果集</td>
<td>GROUP BY后</td>
<td>havaing</td>
</tr>
</tbody></table>
<p>3、分组可以按照单个字段也可以按照多个字段</p>
<p>4、分组可以搭配的排序</p>
<h3 id="三、演示-4"><a href="#三、演示-4" class="headerlink" title="三、演示"></a>三、演示</h3><p>1、查询每个部门的员工的平均工资</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	AVG(salary),</span><br><span class="line">	dept_id</span><br><span class="line">FROM</span><br><span class="line">	emp</span><br><span class="line">GROUP BY</span><br><span class="line">	dept_id</span><br></pre></td></tr></table></figure>



<h1 id="Mysql多表查询操作"><a href="#Mysql多表查询操作" class="headerlink" title="Mysql多表查询操作"></a>Mysql多表查询操作</h1><h2 id="一、含义"><a href="#一、含义" class="headerlink" title="一、含义"></a>一、含义</h2><p><strong>多表查询又称为连接查询</strong></p>
<h2 id="二、分类-3"><a href="#二、分类-3" class="headerlink" title="二、分类"></a>二、分类</h2><p>1、<strong>按照年代分类</strong></p>
<ul>
<li>sql92标准：支持内连接</li>
<li>sql99标准：支持内连接、部分外连接（左连接、右连接）、交叉连接</li>
</ul>
<p>2、<strong>按照功能分类</strong></p>
<ul>
<li><strong>内连接</strong><ul>
<li>等值连接</li>
<li>非等值连接</li>
<li>自连接</li>
</ul>
</li>
<li><strong>外连接</strong><ul>
<li>左外连接</li>
<li>右外连接</li>
<li>全外连接</li>
</ul>
</li>
<li><strong>交叉连接</strong></li>
</ul>
<h3 id="2-1、sql92"><a href="#2-1、sql92" class="headerlink" title="2.1、sql92"></a>2.1、sql92</h3><p>2.1、<strong>sql92标准</strong>：等值连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询员工的名字和对应的部门名</span><br><span class="line">SELECT</span><br><span class="line">	emp_name,</span><br><span class="line">	dept_name</span><br><span class="line">FROM</span><br><span class="line">	emp e,</span><br><span class="line">	dept d</span><br><span class="line">WHERE e.dept_id = d.dept_id</span><br></pre></td></tr></table></figure>

<p>2.2、<strong>sql92标准</strong>：非等值连接<strong>（不需要字段与字段匹配）</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM emp,dept</span><br><span class="line">WHERE emp.age = 18</span><br></pre></td></tr></table></figure>

<h3 id="2-2、sql99标准"><a href="#2-2、sql99标准" class="headerlink" title="2.2、sql99标准"></a>2.2、sql99标准</h3><p>按照功能：内连接、外连接、交叉连接</p>
<h4 id="一、语法-9"><a href="#一、语法-9" class="headerlink" title="一、语法"></a>一、语法</h4><p><strong>连接类型 JOIN 表 ON</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT </span><br><span class="line">	查询列表</span><br><span class="line">FROM 表1 别名1</span><br><span class="line">连接类型 JOIN 表2 别名2 ON 连接条件</span><br><span class="line">WHERE 分组前的筛选</span><br><span class="line">GROUP BY 分组列表</span><br><span class="line">HAVING 分组后的筛选</span><br><span class="line">ORDER BY 排序列表</span><br></pre></td></tr></table></figure>

<h4 id="二、连接类型"><a href="#二、连接类型" class="headerlink" title="二、连接类型"></a>二、连接类型</h4><p>1、<strong>内连接</strong>：inner</p>
<p>2、<strong>外连接</strong></p>
<ul>
<li>左外连接：left [outer] 左边的是主表</li>
<li>右外连接 right  [outer] 右边的是主表</li>
<li>全外连接（了解）：full 两边都是主表 mysql不支持全外连接 Oracle支持</li>
</ul>
<p>3、<strong>交叉连接</strong>：cross 笛卡尔乘积</p>
<h4 id="三、演示-5"><a href="#三、演示-5" class="headerlink" title="三、演示"></a>三、演示</h4><p>1、<strong>内连接</strong>：等值连接 where inner join</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM emp e INNER JOIN dept d ON e.dept_id = d.dept_id</span><br></pre></td></tr></table></figure>

<p>2、<strong>内连接</strong>：非等值连接</p>
<p>3、<strong>内连接</strong>：自连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#就是以自己这个表为参照表，查询一些特殊的数据</span><br><span class="line">#查询所有员工以及上级的信息</span><br><span class="line">SELECT e1.emp_name &#x27;下属名&#x27;,e2.emp_name &#x27;上司名&#x27;</span><br><span class="line">FROM emp e1,emp e2</span><br><span class="line">WHERE e1.boos_id = e2.emp_id</span><br><span class="line"></span><br><span class="line">SELECT e1.emp_name as &#x27;下属名&#x27;,e2.emp_name as &#x27;领导&#x27; FROM emp e1 JOIN emp e2 ON e1.boos_id = e2.emp_id</span><br></pre></td></tr></table></figure>

<p>4、<strong>外连接</strong>：左外连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询所有部门底下的工作人员 left join on</span><br><span class="line">SELECT * FROM dept d LEFT JOIN emp e ON d.dept_id = e.dept_id</span><br><span class="line">#左连接 左表的记录会全部表示出来，而右表只会显示符合搜索条件的记录。右边记录不足的地方均为NULL</span><br></pre></td></tr></table></figure>

<p>5、<strong>外连接</strong>：右外连接</p>
<p>6、<strong>交叉查询</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#他们都返回被连接的2个表所有数据行的笛卡尔积</span><br><span class="line">#返回到数据行数等于第一个表中符合查询条件的数据行数乘以第二个表中符合查询条件的数据的函数</span><br><span class="line">SELECT b.*,bo.*</span><br><span class="line">FROM emp b</span><br><span class="line">CROSS JOIN dept bo</span><br></pre></td></tr></table></figure>

<p>7、<strong>全连接</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#union 全连接 就是左连接+右连接 去重</span><br><span class="line">SELECT * FROM dept d LEFT JOIN emp e ON d.dept_id = e.dept_id</span><br><span class="line">UNION</span><br><span class="line">SELECT * FROM dept d RIGHT JOIN emp e ON d.dept_id = e.dept_id</span><br></pre></td></tr></table></figure>

<h4 id="四、子查询"><a href="#四、子查询" class="headerlink" title="四、子查询"></a>四、子查询</h4><p>一、含义</p>
<p>子查询（内查询） 一个查询语句嵌套到另一个select查询语句中的子句。外面的语句insert、delete、update、select等。一般select作为外面语句比较多。</p>
<p>二、分类</p>
<p>1、<strong>按照出现的位置</strong></p>
<p>2、<strong>按照结果集划分</strong></p>
<p>三、特点</p>
<p>1、子查询妨碍小括号里面</p>
<p>2、子查询一般放在条件查询的右侧</p>
<p>3、子查询的执行优先于主查询执行（主查询的条件用到了子查询的结果）</p>
<p>4、标量子查询 一般搭配操作符 &gt;、&gt;=。。。。</p>
<p>5、列子查询 一般配合多行操作符 in notin any some all exits</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*子查询可以出现的位置</span><br><span class="line">	select（1） from（2） where（3） having（4）</span><br><span class="line">	（1）表示一个字段</span><br><span class="line">	（2）表示一个表</span><br><span class="line">	（3）表示一个条件</span><br><span class="line">	（4）表示一个范围</span><br><span class="line">*/</span><br><span class="line">#查询每一个部门的最高薪资的员工信息</span><br><span class="line">SELECT e1.dept_id as &#x27;部门号&#x27;,e1.salary</span><br><span class="line">FROM emp e1,</span><br><span class="line">(select dept_id,max(salary)as maxSal from emp group by dept_id) as e3</span><br><span class="line">WHERE e1.dept_id = e3.dept_id AND e1.salary = e3.maxSal</span><br><span class="line">ORDER BY e1.dept_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SELECT * FROM emp e WHERE e.dept_id in(SELECT d.dept_id FROM dept d)</span><br></pre></td></tr></table></figure>

<p>1、<strong>SELECT后面</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询每隔部门的员工个数</span><br><span class="line">SELECT</span><br><span class="line">	d.*,(</span><br><span class="line">	SELECT</span><br><span class="line">		COUNT(*)</span><br><span class="line">		FROM</span><br><span class="line">		emp e</span><br><span class="line">		WHERE e.dept_id = d.dept_id</span><br><span class="line">		) 个数</span><br><span class="line">		FROM</span><br><span class="line">			dept d</span><br></pre></td></tr></table></figure>

<p>2、<strong>from后面</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM(SELECT emp_name,emp_id FROM emp) T</span><br><span class="line">WHERE T.emp_name = &#x27;张三&#x27;</span><br></pre></td></tr></table></figure>

<p>3、<strong>where后面</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	emp_name</span><br><span class="line">	salary</span><br><span class="line">FROM</span><br><span class="line">	emp</span><br><span class="line">WHERE salary = (SELECT MIN(salary) FROM emp)</span><br></pre></td></tr></table></figure>

<p>4、<strong>列子查询</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询所有是领导的员工的姓名 DISTINCT用于返回唯一不同的值</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	emp_name</span><br><span class="line">FROM</span><br><span class="line">	emp</span><br><span class="line">WHERE emp_id IN(</span><br><span class="line">	SELECT DISTINCT boos_id FROM emp</span><br><span class="line">	)</span><br><span class="line">	</span><br><span class="line">	#返回boosid为3001 工资低于员工的信息</span><br><span class="line"></span><br><span class="line">SELECT</span><br><span class="line">	emp_id,</span><br><span class="line">	emp_name,</span><br><span class="line">	salary</span><br><span class="line">FROM</span><br><span class="line">	emp</span><br><span class="line">WHERE salary &lt; ANY(</span><br><span class="line">	SELECT  DISTINCT salary FROM emp WHERE boos_id = 3001</span><br><span class="line">) AND boos_id &lt;&gt; 3001	</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#	行子查询 查询员工编号最大 并且工资最高的员工</span><br><span class="line">SELECT</span><br><span class="line">	*</span><br><span class="line">FROM</span><br><span class="line">	emp</span><br><span class="line">WHERE(emp_id,salary) = (</span><br><span class="line">	SELECT MAX(emp_id),MAX(salary) FROM emp</span><br><span class="line">	)</span><br><span class="line">	</span><br><span class="line">#查询又员工的部门名 EXISTS后面</span><br><span class="line">SELECT</span><br><span class="line">	dept_name</span><br><span class="line">FROM</span><br><span class="line">	dept d</span><br><span class="line">WHERE EXISTS(</span><br><span class="line">	SELECT * FROM emp e</span><br><span class="line">	WHERE e.dept_id = d.dept_id</span><br><span class="line">	)</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#关联查询 查询国内男性的信息以及国外男性的信息</span><br><span class="line"></span><br><span class="line">SELECT id,cname FROM t_ca WHERE csex = &#x27;男&#x27;</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT t_id,tname FROM t_ua WHERE csex = &#x27;male&#x27;</span><br><span class="line">/*</span><br><span class="line">1、要查询的结果来自多个表 且多个表没有直接连接关系，但是查询的信息一直 可以使用联合查询</span><br><span class="line">2、要求多条查询语句的查询列数是一直</span><br><span class="line">3、要求多条查询语句查询的每一列的类型和顺序最好一直</span><br><span class="line">4、union关键字默认去重 使用UNION ALL 可以包含重复项</span><br><span class="line">*/</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="Mysql事务"><a href="#Mysql事务" class="headerlink" title="Mysql事务"></a>Mysql事务</h1><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p>特点：</p>
<ol>
<li>每个节点包含一个元素以及n个子树0&lt;=n&lt;=2</li>
<li>左树和右树是有顺序，次序不能任意颠倒，左树的值小于父节点，右边树的值大于父节点</li>
</ol>
<h2 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h2><p>数据库当中的虚拟的表</p>
<p>作用：</p>
<ol>
<li>简单。看到的都是需要的。视图不仅可以简化用户对数据的理解，也可以简化他们的操作，那些被经常使用的查询可以被定义为视图，但是视图并不在数据库中以存储的数据值形式存在</li>
<li>安全性</li>
<li>逻辑数据独立性，屏蔽真实的表结构变化带来的影响</li>
</ol>
<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>访问并可能操作数据库的一个数据库序列。这些操作要么全部执行，要么全部不执行。只是一个不可分割的工作单位。</p>
<p>比如：我们去银行转账</p>
<ol>
<li><p>从第一个账户划出钱</p>
</li>
<li><p>将钱存入第二个账户</p>
</li>
</ol>
<p>整个交易过程，看错一个事务，成功则全部成功，失败则需全部撤销。避免产生数据不一致问题</p>
<p><strong>mysql默认自动提交事务</strong></p>
<p><strong>在 MySQL 中只有使用了 Innodb 数据库引擎的数据库或表才支持事务</strong></p>
<h3 id="事务的四大特性-ACID）"><a href="#事务的四大特性-ACID）" class="headerlink" title="事务的四大特性(ACID）"></a>事务的四大特性(ACID）</h3><p>1、<strong>原子性</strong></p>
<ul>
<li>事务开始后的所有操作，要么全做要么全部不做。不可能停留在中间环节，事务执行过程中出错，回滚到事务开始前的状态，所有的操作都没有发现。也就是说事务是一个整体，就想原子，是物质构成的基本单位。</li>
<li>一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。</li>
</ul>
<p>2、<strong>一致性</strong></p>
<ul>
<li>数据库一个一致性状态改变另一个一致状态，事务执行之前和执行之后必须处于一致状态。</li>
<li>在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。</li>
</ul>
<p>3、<strong>隔离性</strong></p>
<ul>
<li>同一时间，只允许一个事务请求同一个数据。A取钱的过程结束前，B不能向这个A进行转账</li>
<li>数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。</li>
</ul>
<p>4、<strong>持久性</strong></p>
<ul>
<li>事务完成后，事务对数据库的所有更新将被保持到数据库，不能回滚。</li>
<li>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li>
</ul>
<h3 id="事务的并发问题"><a href="#事务的并发问题" class="headerlink" title="事务的并发问题"></a>事务的并发问题</h3><ol>
<li><p><strong>脏读</strong>：事务A读取事务B更新的数据，然后B回滚操作，那么A读取的数据是脏读数据</p>
</li>
<li><p><strong>不可重复读</strong>：事务A多次读取同一个数据，事务B在事务A多次读取的过程中，对数据更新并提交，导致A多次读取同一个数据的时候，结果不一致</p>
</li>
<li><p><strong>幻读</strong>：adminA将数据库中所有的学生的成绩从具体分改成ABCD等级，但是adminB就在这个时候插入了具体的分数记录，当系统admin A改完结束后发现有一条数据没改过来，感觉是幻觉。</p>
</li>
</ol>
<h3 id="事务的隔离级别"><a href="#事务的隔离级别" class="headerlink" title="事务的隔离级别"></a>事务的隔离级别</h3><table>
<thead>
<tr>
<th>隔离级别</th>
<th>脏读（Dirty Read）</th>
<th>不可重复读（NonRepeatable Read）</th>
<th>幻读（Phantom Read）</th>
</tr>
</thead>
<tbody><tr>
<td>未提交读（Read uncommitted）</td>
<td>可能</td>
<td>可能</td>
<td>可能</td>
</tr>
<tr>
<td>已提交读（Read committed）</td>
<td>不可能</td>
<td>可能</td>
<td>可能</td>
</tr>
<tr>
<td>可重复读（Repeatable read）</td>
<td>不可能</td>
<td>不可能</td>
<td>可能</td>
</tr>
<tr>
<td>可串行化（Serializable ）</td>
<td>不可能</td>
<td>不可能</td>
<td>不可能</td>
</tr>
</tbody></table>
<p><strong>InnoDB默认是可重复读级别的</strong></p>
<ul>
<li>脏读: 脏读就是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问这个数据，然后使用了这个数据。</li>
<li>不可重复读：是指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的的数据可能是不一样的。这样就发生了在一个事务内两次读到的数据是不一样的，因此称为是不可重复读。</li>
<li>幻读：第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好象发生了幻觉一样，幻读是数据行记录变多了或者少了。</li>
</ul>
<p><strong>简单点总结下他们的区别</strong>：脏读是指读取了未修改完的记录，不可重复读指因为被其它事务修改了记录导致某事务两次读取记录不一致，而幻读是指因为其它事务对表做了增删导致某事务两次读取的表记录数不一致问题。</p>
<p><strong>（1）read uncommitted 未提交读</strong>         所有事务都可以看到没有提交事务的数据。</p>
<p><strong>eg</strong>: 公司发工资了，领导把5000元打到A的账号(正常工资2千)上，但是该事务并未提交，而A正好去查看账户，发现工资已经到账，是5000元整，非常高兴。但是领导随后发现给A的工资发多了，于是迅速回滚了事务，修改金额后，将事务提交，最后A实际的工资只有2000元，A空欢喜一场。</p>
<p><strong>剖析</strong>：脏读：“事务A：leader给A发工资”，“事务B：A查询工资账户”，事务B读取了事务A尚 uncommitted 的数据。当隔离级别设置为Read uncommitted时，就可能出现脏读，如何避免脏读，请看下一个隔离级别。</p>
<p><strong>（2）read committed 提交读</strong> 　　　　事务成功提交后才可以被查询到。　　</p>
<p><strong>eg</strong>: A拿着工资卡去消费，出门前查到卡里是2000元，凑巧紧接着她的老婆作为急用把A工资卡的2000元转到另一账户， 当A准备付款时，却发现工资卡已经没有钱，扣款失败……　　</p>
<p><strong>剖析</strong>：两个并发的事务，“事务A：A消费”，“事务B：A的老婆网上转账”，事务A事先读取了数据，紧接着事务B更新了数据，并提交了事务，而事务A再次读取该数据时，数据已经发生了改变。</p>
<p>当隔离级别设置为Read committed时，避免了脏读，但是可能会造成不可重复读。大多数数据库的默认级别就是Read committed，比如Sql Server , Oracle。如何解决不可重复读这一问题，请看下一个隔离级别。</p>
<p>（3）<strong>repeatable 重复读</strong>　　　　　　　　同一个事务内多次查询却返回了不同的数据值，即可能将未提交的记录查询出来，而出现幻读。<strong>注：Mysql的默认隔离级别就是Repeatable read。</strong>　　</p>
<p><strong>前言</strong>：当隔离级别设置为Repeatable read 时，可以避免不可重复读。当A拿着工资卡去消费时，一旦系统开始读取工资卡信息（即事务开始），A的老婆就不可能对该记录进行修改，也就是A的老婆不能在此时转账。 　　　　  虽然Repeatable read避免了不可重复读，但还有可能出现幻读 。　　</p>
<p><strong>eg1</strong>: A的老婆在银行工作，她可以很方便的查看A的信用卡消费记录。月末了，她正在查询A当月的消费情况 （select sum(amount) from transaction where month = ‘本月’）为80元，而A此时正好在某收银台买单，消费1000元，即新增了一条1000元的消费记录（insert transaction … ），并提交了事务，随后A的老婆将A当月信用卡消费的明细打印到A4纸上，却发现消费总额为1080元，A的老婆很诧异，以为出现了幻觉，幻读就这样产生了。</p>
<p><strong>eg2</strong>: 在事务A中，读取到张三的工资为5000，操作没有完成，事务还没提交。与此同时，事务B把张三的工资改为8000，并提交了事务。随后，在事务A中，再次读取张三的工资，此时工资变为8000。在一个事务中前后两次读取的结果并不致，导致了不可重复读。(大部分数据库缺省的事物隔离级别都不会出现这种状况)</p>
<p>（4）<strong>Serializable可串行化</strong></p>
<p>强制的进行排序，在每个读读数据行上添加共享锁。会导致大量超时现象和锁竞争。这是花费最高代价但是最可靠的事务隔离级别。事务被处理为顺序执行。除了防止脏读，不可重复读外，还避免了幻读。</p>
<p><em><strong>附录：</strong></em></p>
<p>★　 <strong>脏读</strong>　　　　： 读取了前一事务 未提交 的数据 ;</p>
<p>　　<strong>不可重复读</strong>  ： 读取了前一事务   提交 的数据；</p>
<p>★　幻读 与 不可重复读　　　　 </p>
<p>​        <strong>common</strong>　　：都是读取了另一条已经提交的事务（这点与脏读不同）；</p>
<p>​        <strong>differences</strong> ：</p>
<p>　　　　不可重复读 ：查询的都是同一个数据项</p>
<p>　　　　幻读 　  ：针对的是一批数据整体（比如数据的个数）</p>
<p><strong>不可重复读eg: 　当隔离级别设置为Repeatable read 时，可以避免不可重复读</strong></p>
<p>　　<em><strong>eg2</strong></em>: 在事务A中，读取到张三的工资为5000，操作没有完成，事务还没提交。</p>
<p>　　　　与此同时，事务B把张三的工资改为8000，并提交了事务。</p>
<p>　　　　随后，在事务A中，再次读取张三的工资，此时工资变为8000。在一个事务中前后两次读取的结果并不致，导致了不可重复读。(大部分数据库缺省的事物隔离级别都不会出现这种状况)</p>
<p><strong>幻读eg:</strong></p>
<p>　　<em><strong>eg1</strong></em>: 目前工资为5000的员工有10人，事务A读取所有工资为5000的人数为10人。</p>
<p>　　　　此时，事务B插入一条工资也为5000的记录，并且commit了。</p>
<p>　　　　这时，事务A再次读取工资为5000的员工，记录为11人。此时产生了幻读。</p>
<p>　　　　(大部分数据库缺省的事物隔离级别都会出现这种状况，此种事物隔离级别将带来表级锁)</p>
<p>　　<em><strong>eg2</strong></em>： A将db中all学生的score从数字分数改变为ABCDE等级,但是B就在此时插入了一条具体的分数,当A改完后发现还有一条记录没有改过来,就好像发生了幻觉一样.这就叫幻读。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaIO流常用对象与方法详解</title>
    <url>/2021/04/16/JavaIO%E6%B5%81%E5%B8%B8%E7%94%A8%E5%AF%B9%E8%B1%A1%E4%B8%8E%E6%96%B9%E6%B3%95%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>该文总结了JavaIO流常用对象与方法的使用样例，可根据需要学习。</p>
<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p>Java把电脑中的文件和文件夹封装成了File类，我们可以使用File类对文件和文件夹进行一些操作</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul>
<li>删除文件夹/文件</li>
<li>创建文件/文件夹</li>
<li>判断文件/文件夹是否存在</li>
<li>获取文件/文件夹的大小</li>
</ul>
<h2 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h2><p><font color="red">File类是一个与系统无关的类，任何操作系统都可以使用这个类中的方法</font></p>
<h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><p><strong>路径分隔符</strong>：</p>
<ul>
<li>windows系统的路径分隔符 -      ;</li>
<li>Linux系统下的路径分隔符 -      :</li>
</ul>
<p><strong>文件名称分隔符</strong>：</p>
<ul>
<li>window系统下  -     \</li>
<li>Linux系统下 -    /</li>
</ul>
<p><strong>相关函数</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*static String	pathSeparator</span></span><br><span class="line"><span class="comment">          与系统有关的路径分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class="line"><span class="comment">	static char	pathSeparatorChar</span></span><br><span class="line"><span class="comment">          与系统有关的路径分隔符。</span></span><br><span class="line"><span class="comment">	static String	separator</span></span><br><span class="line"><span class="comment">          与系统有关的默认名称分隔符，为了方便，它被表示为一个字符串。</span></span><br><span class="line"><span class="comment">	static char	separatorChar</span></span><br><span class="line"><span class="comment">          与系统有关的默认名称分隔符。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">String pathseparator = File.pathSeparator;</span><br><span class="line">System.out.println(<span class="string">&quot;pathseparator    = &quot;</span>  + pathseparator);<span class="comment">// 输出;</span></span><br><span class="line">System.out.println(<span class="string">&quot;pathseparator    = &quot;</span>  + File.pathSeparatorChar);<span class="comment">// 输出;</span></span><br><span class="line"></span><br><span class="line">String separator = File.separator;</span><br><span class="line">System.out.println(<span class="string">&quot;separator  = &quot;</span> + separator);<span class="comment">// 输出\</span></span><br><span class="line">System.out.println(<span class="string">&quot;separator  = &quot;</span> + File.separatorChar);<span class="comment">// 输出\</span></span><br></pre></td></tr></table></figure>





<h1 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h1><p><strong>相对路径和绝对路径</strong>：</p>
<p><font color="red">绝对路径</font>：一个完整路径（从盘符开始的路径），如：<strong>D:\xxxx\xxx\xxx.java</strong></p>
<p>它表示的是当前文件或者目录在当前操作系统中的真实路径，</p>
<p><font color="red">缺点</font>：</p>
<ul>
<li>比较不灵活并且比较少见</li>
</ul>
<p><font color="red">相对路径</font>：一个简化的路径。</p>
<p><strong>注意</strong>：相对指的是什么？相对指的是对于当前项目的根路径，如果使用当前项目的根目录，路径可以简化书写</p>
<p><strong>绝对路径</strong>：D:\xxxx\xxx\xxx.java</p>
<p><strong>相对路径</strong>：xxx.java</p>
<ul>
<li><p>表示相对于某个基准目录的路径（类似于我们所说的参照物）</p>
</li>
<li><p>不用指定文件在哪个盘下</p>
</li>
<li><p>java项目下，是以项目目录作为参考路径</p>
</li>
</ul>
<p><strong>注意</strong>：使用File对象的时候只能做到对文件（目录)的属性进行访问</p>
<p>比如：名字，大小，是否为文件等，还可以做到对文件（目录）进行删除和创建的操作</p>
<p><strong>注意</strong>：</p>
<ul>
<li><p>相对路径可以省略项目的根目录</p>
</li>
<li><p>相对路径不区分大小写</p>
</li>
<li><p>路径中的中文文件名称分割符:window下使用 \ , \是转译字符 , \ 代表这个是一个普通的\</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//相对路径</span></span><br><span class="line">String pathname = <span class="string">&quot;src/cn/egret/Demo01.java&quot;</span>;</span><br><span class="line">File file = <span class="keyword">new</span> File(pathname);</span><br><span class="line">System.out.println(file); <span class="comment">// src\cn\egret\Demo01.java</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取绝对路径:getAbsolutePath()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">System.out.println(file.getAbsolutePath()); <span class="comment">// C:\Users\86176\eclipse-workspace\day20210318\src\cn\egret\Demo01.java</span></span><br></pre></td></tr></table></figure>





<h1 id="File构造器"><a href="#File构造器" class="headerlink" title="File构造器"></a>File构造器</h1><table>
<thead>
<tr>
<th>构造器</th>
<th align="center">说明</th>
<th>优点</th>
<th align="center">注意点</th>
</tr>
</thead>
<tbody><tr>
<td>File(File parent, String child)</td>
<td align="center">根据 parent 抽象路径名和 child 路径名字符串创建一个新 File 实例。</td>
<td>1. 父路径和子路径他们可以单独书写，使用起来比较灵活，并且父路径和子路径都可以变化<br>2. 路径可以随时变化，父类是File类型，可以使用File的方法对路径进行操作，在使用路径去创建对象</td>
<td align="center"></td>
</tr>
<tr>
<td>File(String pathname)</td>
<td align="center">通过将给定路径名字符串转换为抽象路径名来创建一个新 File 实例。</td>
<td></td>
<td align="center">1、路径可以是相对路径也可以是绝对路径&lt;br/ &gt;2、传入的路径它可以是存在的也可以是不存在<br/>3、路径可以是以文件结尾，也可以是以文件夹结尾<br/>4、创建File对象的时候只是把字符串路径封装成字符串对象，可以不用考虑路径的真假问题</td>
</tr>
<tr>
<td>File(String parent, String child)</td>
<td align="center">根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例。</td>
<td></td>
<td align="center"></td>
</tr>
<tr>
<td>File(URI url)</td>
<td align="center">通过将给定的 file: URI 转换为一个抽象路径名来创建一个新的 File 实例。</td>
<td></td>
<td align="center"></td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String pathName = <span class="string">&quot;D:\\egret\\javase2101\\day20210318\\cn\\egret\\Demo04.java&quot;</span>;</span><br><span class="line">		</span><br><span class="line">File file  = <span class="keyword">new</span> File(pathName);</span><br><span class="line">		</span><br><span class="line">System.out.println(file); <span class="comment">// D:\egret\javase2101\day20210318\cn\egret\Demo04.java</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 注意：File对象被创建成功，但是不一定表示File对象所代表的文件或者文件夹就已经存在</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">String parent = <span class="string">&quot;/Users/egret&quot;</span>;</span><br><span class="line">String child = <span class="string">&quot;javase2101.txt&quot;</span>;</span><br><span class="line">File file2 = <span class="keyword">new</span> File(parent, child);</span><br><span class="line">System.out.println(file2);<span class="comment">//  /Users/javase2101.txt</span></span><br></pre></td></tr></table></figure>





<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><table>
<thead>
<tr>
<th align="center">方法</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">getAbsolutePath()</td>
<td align="center">返回此抽象路径名的绝对路径名字符串。</td>
</tr>
<tr>
<td align="center">getPath()</td>
<td align="center">将此抽象路径名转换为一个路径名字符串。</td>
</tr>
<tr>
<td align="center">getName()</td>
<td align="center">返回由此抽象路径名表示的文件或目录的名称。</td>
</tr>
<tr>
<td align="center">length()</td>
<td align="center">返回由此抽象路径名表示的文件的长度。</td>
</tr>
<tr>
<td align="center">isDirectory()</td>
<td align="center">测试此抽象路径名表示的文件是否是一个目录。</td>
</tr>
<tr>
<td align="center">isFile()</td>
<td align="center">测试此抽象路径名表示的文件是否是一个标准文件。</td>
</tr>
<tr>
<td align="center">exists()</td>
<td align="center">测试此抽象路径名表示的文件或目录是否存在。</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、getAbsolutePath()：返回此抽象路径名的绝对路径名字符串</span></span><br><span class="line"><span class="comment">//注意:它是获取构造方法中传递的路径，无论是相对路径或者是绝对路径返回的都是绝对路径</span></span><br><span class="line">String pathname = <span class="string">&quot;day20210318\\src\\cn\\egret&quot;</span>;</span><br><span class="line">String pathname1 = <span class="string">&quot;src/cn/egret/javase2101.txt&quot;</span>;</span><br><span class="line">File file1 = <span class="keyword">new</span> File(pathname);</span><br><span class="line">File file2 = <span class="keyword">new</span> File(pathname1);</span><br><span class="line">		</span><br><span class="line">System.out.println(file1.getAbsolutePath()); <span class="comment">// 输出C:\Users\86176\eclipse-workspace\day20210318\src\cn\egret\javase2101.txt</span></span><br><span class="line">System.out.println(file2.getAbsolutePath()); <span class="comment">// 输出C:\Users\86176\eclipse-workspace\day20210318\src\cn\egret\javase2101.txt</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//2、getPath()：将此抽象路径名转换为一个路径名字符串</span></span><br><span class="line"><span class="comment">//注意:这里获取的路径是表示你这个路径是什么它就是什么</span></span><br><span class="line"><span class="comment">//toString()调用的就是getPath方法</span></span><br><span class="line">String s1 = file1.getPath();</span><br><span class="line">String s2 = file2.getPath();</span><br><span class="line">System.out.println(<span class="string">&quot;s1 = &quot;</span> + s1);<span class="comment">// s1 = \Users\86176\eclipse-workspace\day20210318\src\cn\egret\javase2101.txt</span></span><br><span class="line">System.out.println(<span class="string">&quot;s2 = &quot;</span> + s2); <span class="comment">// s2 = src\cn\egret\javase2101.txt</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//getName():返回由此抽象路径名表示的文件或目录的名称。</span></span><br><span class="line">String name1 = file1.getName();</span><br><span class="line">String name2 = file2.getName();</span><br><span class="line">System.out.println(<span class="string">&quot;name1 = &quot;</span> + name1); <span class="comment">// name1 = javase2101.txt</span></span><br><span class="line">System.out.println(<span class="string">&quot;name2 = &quot;</span> + name2); <span class="comment">// name2 = javase2101.txt</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//length()：返回由此抽象路径名表示的文件的长度。</span></span><br><span class="line"><span class="comment">//注意：获取的是构造方法中指定的文件大小，以字节为单位</span></span><br><span class="line"><span class="comment">//注意：文件夹是没有大小的概念的，不可以获取文件夹的大小</span></span><br><span class="line"><span class="comment">//注意:如果构造方法中给出路径是假的，则此时他返回0</span></span><br><span class="line">String p1 = <span class="string">&quot;/Users/egret/javase2101&quot;</span>;<span class="comment">//文件夹</span></span><br><span class="line">String p2 = <span class="string">&quot;C:\\Users\\86176\\eclipse-workspace\\day20210318\\src\\cn\\egret\\Demo01.java&quot;</span>;<span class="comment">//真实存在的文件</span></span><br><span class="line">String p3 = <span class="string">&quot;D:\\egret\\javase2101\\day20210318\\src\\cn\\egret\\Demo01.java&quot;</span>;<span class="comment">//假路径</span></span><br><span class="line">File f1 = <span class="keyword">new</span> File(p1);</span><br><span class="line">File f2 = <span class="keyword">new</span> File(p2);</span><br><span class="line">File f3 = <span class="keyword">new</span> File(p3);</span><br><span class="line">System.out.println(<span class="string">&quot;f1 =&quot;</span> + f1.length());<span class="comment">//f1 = 0由于文件夹没有大小的概念，故我们不可以用于获取文件夹大小</span></span><br><span class="line">System.out.println(<span class="string">&quot;f2 =&quot;</span> + f2.length());<span class="comment">// f2 =1743</span></span><br><span class="line">System.out.println(<span class="string">&quot;f3 =&quot;</span> + f3.length()); <span class="comment">// f3 =0</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*     boolean	exists():测试此抽象路径名表示的文件或目录是否存在。</span></span><br><span class="line"><span class="comment">* 	   存在：返回true   不存在：返回false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">String p1 = <span class="string">&quot;/Users/egret/javase2101/day20210318/src/cn/egret&quot;</span>;</span><br><span class="line">String p2 = <span class="string">&quot;D:/egret/javase2101/day20210318/src/cn/egret&quot;</span>;</span><br><span class="line">File f1 = <span class="keyword">new</span> File(p1);</span><br><span class="line">File f2 = <span class="keyword">new</span> File(p2);</span><br><span class="line"><span class="keyword">boolean</span> exists2 = f2.exists();</span><br><span class="line"><span class="keyword">boolean</span> exists = f1.exists();</span><br><span class="line">System.out.println(<span class="string">&quot;文件夹/文件是否存在 :&quot;</span> + exists);</span><br><span class="line">System.out.println(<span class="string">&quot;文件夹/文件是否存在 :&quot;</span> + exists2);</span><br><span class="line">		</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* boolean	isDirectory(): 测试此抽象路径名表示的文件是否是一个目录。</span></span><br><span class="line"><span class="comment">*	是:true  否:false</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* boolean	isFile():测试此抽象路径名表示的文件是否是一个标准文件。</span></span><br><span class="line"><span class="comment">*  是:true  否:false</span></span><br><span class="line"><span class="comment">*  </span></span><br><span class="line"><span class="comment">*  注意:电脑的硬盘只有文件/文件夹，他们是互斥的</span></span><br><span class="line"><span class="comment">*  </span></span><br><span class="line"><span class="comment">*  这两个方法使用的前提：路径必须存在，否则都返回false</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span>(f1.exists()) &#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;f1.isDirectory :&quot;</span> + f1.isDirectory());</span><br><span class="line">	System.out.println(<span class="string">&quot;f1.isFile :&quot;</span> + f1.isFile());</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;文件/文件夹不存在&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">		</span><br><span class="line">System.out.println(<span class="string">&quot;f2.isDirectory :&quot;</span> + f2.isDirectory());</span><br><span class="line">System.out.println(<span class="string">&quot;f2.isFile :&quot;</span> + f2.isFile());</span><br></pre></td></tr></table></figure>



<h1 id="文件方法"><a href="#文件方法" class="headerlink" title="文件方法"></a>文件方法</h1><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><table>
<thead>
<tr>
<th align="center">方法</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">createNewFile()</td>
<td align="center">创建文件</td>
</tr>
<tr>
<td align="center">mkdir()</td>
<td align="center">创建单级文件夹</td>
</tr>
<tr>
<td align="center">mkdirs()</td>
<td align="center">既能创建单级文件夹，也能够创建多级文件夹</td>
</tr>
</tbody></table>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String p1 = <span class="string">&quot;src/cn/egret/javase2101.txt&quot;</span>;</span><br><span class="line">File f1 = <span class="keyword">new</span> File(p1);</span><br><span class="line"><span class="keyword">if</span>(!(f1.exists())) &#123;</span><br><span class="line">	<span class="keyword">boolean</span> createNewFile = f1.createNewFile();</span><br><span class="line">	System.out.println(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;您要创建的文件已经存在，请不要重复创建&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">		</span><br><span class="line">String p2 = <span class="string">&quot;src/cn/egret/aaa&quot;</span>;</span><br><span class="line">String p3 = <span class="string">&quot;src/bn/egret/aaa/bbb/ccc/ddd&quot;</span>;</span><br><span class="line">File f2 = <span class="keyword">new</span> File(p2);</span><br><span class="line">File f3 = <span class="keyword">new</span> File(p3);</span><br><span class="line"><span class="keyword">if</span>(!(f3.exists())) &#123;</span><br><span class="line">	<span class="keyword">boolean</span> mkdir = f3.mkdirs();</span><br><span class="line">	System.out.println(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">	System.out.println(<span class="string">&quot;文件夹已经存在&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">String path1 = <span class="string">&quot;src/cn/egret/aaa&quot;</span>;</span><br><span class="line">String path2 = <span class="string">&quot;src/cn/egret/aaa/bbb/ccc/ddd&quot;</span>;</span><br><span class="line">File f1 = <span class="keyword">new</span> File(path1);</span><br><span class="line">File f2 = <span class="keyword">new</span> File(path2);</span><br><span class="line"><span class="keyword">boolean</span> mkdir = f1.mkdir();</span><br><span class="line"><span class="keyword">boolean</span> mkdirs = f2.mkdirs();</span><br><span class="line">System.out.println(<span class="string">&quot;一级目录创建 :&quot;</span> + mkdir);</span><br><span class="line">System.out.println(<span class="string">&quot;多级目录创建 :&quot;</span> + mkdirs);</span><br></pre></td></tr></table></figure>





<h2 id="删除文件delete"><a href="#删除文件delete" class="headerlink" title="删除文件delete()"></a>删除文件delete()</h2><p>删除有次级file的方法，他的返回值是boolean</p>
<p>true：文件、文件夹被删除</p>
<p>false：文件夹中有内容，不会删除，返回false。 构造方法中的路径是假路径也会删除失败</p>
<p><font color="red">注意：delete直接在硬盘中删除文件或者文件夹，不放入回收站，删除需谨慎</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String path = <span class="string">&quot;src/cn/egret/aaa&quot;</span>;</span><br><span class="line">File file = <span class="keyword">new</span> File(path);</span><br><span class="line"><span class="keyword">boolean</span> delete = file.delete();</span><br><span class="line">System.out.println(<span class="string">&quot;文件是否删除：&quot;</span> + delete);</span><br></pre></td></tr></table></figure>



<h2 id="目录遍历-list-和-listFiles"><a href="#目录遍历-list-和-listFiles" class="headerlink" title="目录遍历    list()和 listFiles()"></a>目录遍历    list()和 listFiles()</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String [] list(); <span class="comment">// 函数原型</span></span><br><span class="line"><span class="comment">//返回一个字符串数组，这些字符串指定此抽象路径名表示的目录中的文件和目录。</span></span><br><span class="line">File [] listFiles(); <span class="comment">// 函数原型</span></span><br><span class="line"><span class="comment">//返回一个抽象路径名数组，这些路径名表示此抽象路径名表示的目录中的文件。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><font color="red">注意：</font><strong>注意:list( )和listFiles()这两个方法遍历的是构造器中给的目录</strong></p>
<ul>
<li>如果构造函数中给出的目录路径不存在，会抛出空指针异常。</li>
<li>如果构造方法中给出的路径不是一个目录的话，它也会抛出空指针异常</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String path1 = <span class="string">&quot;src/cn/egret&quot;</span>;</span><br><span class="line">File f1 = <span class="keyword">new</span> File(path1);</span><br><span class="line"><span class="keyword">if</span>(!f1.exists())&#123;</span><br><span class="line">    f1.mkdirs();</span><br><span class="line">    System.out.println(<span class="string">&quot;创建成功&quot;</span>)；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    System.out.printle(<span class="string">&quot;创建失败&quot;</span>)；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//list()遍历构造方法中给的目录，会获取目录中所有文件/文件夹的名称, 并且把获取到的名称存到一个String类型的数组当中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">File f2 = <span class="keyword">new</span> File(path1);</span><br><span class="line"><span class="keyword">if</span>(f2.isDFirectory())&#123;</span><br><span class="line">    String [] list = f2.list();</span><br><span class="line">    <span class="keyword">for</span>(String name : list)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name&quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;非文件夹“);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>



<p>练习：删除多级文件夹</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(String pathName)</span></span>&#123;</span><br><span class="line">    File f1 = <span class="keyword">new</span> File(pathName);</span><br><span class="line">    <span class="keyword">if</span>(f1.isDirectory())&#123;</span><br><span class="line">        String [] list = f1.list();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.length(); i++)&#123;</span><br><span class="line">            delete(pathname + <span class="string">&quot;/&quot;</span> + list[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    f1.delete(); <span class="comment">// 删除最外层文件夹</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		String pathname = <span class="string">&quot;src/cn/egret/aaa&quot;</span>;</span><br><span class="line">		File f1 = <span class="keyword">new</span> File(pathname);</span><br><span class="line">		<span class="keyword">if</span>(f1.isDirectory()) &#123;</span><br><span class="line">			delete(pathname);</span><br><span class="line">			System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;你要删除的目录不存在&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="文件过滤器-FileFilter"><a href="#文件过滤器-FileFilter" class="headerlink" title="文件过滤器  FileFilter"></a>文件过滤器  FileFilter</h2><p><strong>获取当前目录下所有满足条件的部分子类</strong></p>
<p>FilenameFilter 接口: boolean accept(File dir, String name) ;其中dir表示的是当前目录，name是文件名</p>
<p>FileFilter 接口:boolean  accept(File pathname) pathname 表示的是文件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	String pathname = <span class="string">&quot;src/cn/egret&quot;</span>;</span><br><span class="line">	File f1 = <span class="keyword">new</span> File(pathname);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 通过FileFilter实现指定文件过滤</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	FileFilter fileFilter = <span class="keyword">new</span> FileFilter() &#123;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 实现accept方法，当其值为true的时候表示这个文件是我们需要的</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 需求:只需要后缀名是java的文件</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="meta">@Override</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">accept</span><span class="params">(File pathname)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(pathname.isDirectory()) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			String name = pathname.getName();</span><br><span class="line">			<span class="comment">/**</span></span><br><span class="line"><span class="comment">			 * endsWith:代表以什么为结尾</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			<span class="keyword">return</span> name.endsWith(<span class="string">&quot;.txt&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 可能数据从别的地方传入。所以这是我们还是需要先做一个判断，判断他是文件还是文件目录</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span>(f1.isDirectory()) &#123;</span><br><span class="line">		File[] listFiles = f1.listFiles(fileFilter);</span><br><span class="line">		<span class="keyword">for</span> (File filename : listFiles) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;filename = &quot;</span> + filename);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="文件随机读写类-RandomAccessFile"><a href="#文件随机读写类-RandomAccessFile" class="headerlink" title="文件随机读写类 RandomAccessFile"></a>文件随机读写类 RandomAccessFile</h1><p>文件随机读写类 RandomAccessFile</p>
<p>基于指针对文件数据的读写，是用于实现对文件内容的读写操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">        String p1 = <span class="string">&quot;src\\cn\\egret\\d.txt&quot;</span>;</span><br><span class="line">		File f1 = <span class="keyword">new</span> File(p1);</span><br><span class="line">		System.out.println(f1.getAbsolutePath());</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 使用文件随机读写类RandomAccessFile</span></span><br><span class="line"><span class="comment">		 * 注意:它内部会自动判断这个file是否存在，如果不存在则会创建</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 构造函数:  RandomAccessFile(File file, String mode)</span></span><br><span class="line"><span class="comment">		 *  实现对指定File对象所表示文件或者指定路径的文件进行读写操作</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * file:表示读写的文件</span></span><br><span class="line"><span class="comment">		 * mode:表示读写的模式</span></span><br><span class="line"><span class="comment">		 *     r:只读模式    rw: 读写模式</span></span><br><span class="line"><span class="comment">		 * 注意:它的读模式和写模式是分开的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		</span><br><span class="line">		RandomAccessFile randomAccessFile = <span class="keyword">new</span> RandomAccessFile(p1, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * write(int d)</span></span><br><span class="line"><span class="comment">		 * 向指定文件写入一个字节数据</span></span><br><span class="line"><span class="comment">		 * 实现上写的是d的低8位</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="comment">//randomAccessFile.write(16); // 并不能写入你想要的16</span></span><br><span class="line">		</span><br><span class="line">		randomAccessFile.writeInt(<span class="number">16</span>);</span><br><span class="line">		randomAccessFile.close();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 思考如何写入一个数字3</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 3 ---&gt;  00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * -------------------------------------------------</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 			 				  00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">		 * 					 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">		 * 			00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">		 * 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 使用右移运算符：写入4次就能够将3写入</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		randomAccessFile.write(<span class="number">3</span>&gt;&gt;&gt;<span class="number">24</span>);</span><br><span class="line">		randomAccessFile.write(<span class="number">3</span>&gt;&gt;&gt;<span class="number">16</span>);</span><br><span class="line">		randomAccessFile.write(<span class="number">3</span>&gt;&gt;&gt;<span class="number">8</span>);</span><br><span class="line">		randomAccessFile.write(<span class="number">3</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * RandomAccessFile也为我们提供了若干个</span></span><br><span class="line"><span class="comment">		 * writeXXX() 用于实现对于基本数据类型的写出操作</span></span><br><span class="line"><span class="comment">		 * writeInt(int value) 会一次写出，表示int的4字节的数据</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">long</span> length1 = f1.length();</span><br><span class="line">		System.out.println(<span class="string">&quot;写入数据之前的文件大小 = &quot;</span> + length1);</span><br><span class="line">		randomAccessFile.writeInt(<span class="number">16</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line">		<span class="keyword">long</span> length2 = f1.length();</span><br><span class="line">		System.out.println(<span class="string">&quot;写入数据之后的文件大小 = &quot;</span> + length2);</span><br><span class="line">		<span class="comment">//释放资源</span></span><br><span class="line">		randomAccessFile.close();</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		String p1 = <span class="string">&quot;src/cn/egret/d.txt&quot;</span>;</span><br><span class="line">		File f1 = <span class="keyword">new</span> File(p1);</span><br><span class="line">		RandomAccessFile randomAccessFile = <span class="keyword">new</span> RandomAccessFile(f1, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * readInt()  表示从指定文件中读取一个int类型的数据</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * read()  表示从指定文件中读取一个byte类型的数据</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 一次会读取4个字节的数据</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">int</span> read= randomAccessFile.readInt();</span><br><span class="line">		System.out.println(<span class="string">&quot;读取到的数据为 :&quot;</span> + read);</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------------------</span><br><span class="line">		File f1 = <span class="keyword">new</span> File(<span class="string">&quot;src/cn/egret/e.txt&quot;</span>);</span><br><span class="line">		RandomAccessFile ra = <span class="keyword">new</span> RandomAccessFile(f1, <span class="string">&quot;rw&quot;</span>);</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * getFilePointer() ：获取当前指针位置</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">long</span> filePointer1 = ra.getFilePointer();</span><br><span class="line">		System.out.println(<span class="string">&quot;filePointer1 = &quot;</span> + filePointer1);</span><br><span class="line"></span><br><span class="line">		ra.write(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">		System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">long</span> filePointer2 = ra.getFilePointer();</span><br><span class="line">		System.out.println(<span class="string">&quot;filePointer2 = &quot;</span> + filePointer2);</span><br><span class="line">		</span><br><span class="line">		ra.write(<span class="string">&#x27;b&#x27;</span>);  <span class="comment">//ab</span></span><br><span class="line">		<span class="keyword">long</span> filePointer3 = ra.getFilePointer();</span><br><span class="line">		System.out.println(<span class="string">&quot;filePointer3 = &quot;</span> + filePointer3);</span><br><span class="line"></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * seek（long length）  :  表示设定当前指针的位置</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		ra.seek(<span class="number">1</span>);</span><br><span class="line">		ra.write(<span class="string">&#x27;c&#x27;</span>);  <span class="comment">//ac</span></span><br><span class="line">		System.out.println(<span class="string">&quot;c写入成功当前指针位置为: &quot;</span> + ra.getFilePointer());</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------------		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 一次性写入一串数据</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 注意:对于大文件操作都是通过字节数组进行的</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		String str = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">		<span class="keyword">byte</span>[] bytes = str.getBytes();</span><br><span class="line">		ra.write(bytes);</span><br><span class="line">		System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>)randomAccessFile.length()];</span><br><span class="line">		randomAccessFile.read(bytes);</span><br><span class="line">		System.out.println(<span class="string">&quot;读取到的数据为 :&quot;</span> + <span class="keyword">new</span> String(bytes,<span class="string">&quot;UTF-8&quot;</span>));</span><br></pre></td></tr></table></figure>



<h1 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h1><p><strong>硬盘特点</strong>：永久储存</p>
<p><strong>输入流</strong>：把硬盘中的数据读取到内存中使用</p>
<p><strong>输出流</strong>：把内存中的东西输出到硬盘</p>
<p><img src="https://img-blog.csdnimg.cn/da6853ac7ce8448582d2456e493b73c1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"></p>
<p><strong>I</strong> : input 输入</p>
<p><strong>o</strong> : output 输出</p>
<p><strong>流</strong>： 数据（字符，字节）  1个字符  =  2个字节， 1个字节  =  8个比特位</p>
<p><font color="red">注意</font>：<strong>根据读数据不同有</strong></p>
<ul>
<li>字符输入流</li>
<li>字节输入流</li>
<li>字符输出流</li>
<li>字节输出流</li>
</ul>
<p>根据<strong>数据的流向</strong>分为:输入流和输出流</p>
<ul>
<li>输入流：把数据从其他设备上读取到内存中使用的流</li>
<li>输出流：把数据从内存中写入到其他设备上的流</li>
</ul>
<p>根据<strong>数据类型</strong>可将流分为: 1、字符流 2、字节流</p>
<ul>
<li>字节流：以字节为单位去读写数据的流</li>
<li>字符流：以字符为单位去读写数据的流</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th>输入流</th>
<th>输出流</th>
</tr>
</thead>
<tbody><tr>
<td>字节流</td>
<td>InputStream</td>
<td>OutputStream</td>
</tr>
<tr>
<td>字符流</td>
<td>Reader</td>
<td>Writer</td>
</tr>
</tbody></table>
<h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><p><strong>字节流</strong>： 一切皆为字节，一切文本数据在存储的时候，都是以二进制的形式进行保存，既都是一个个字节。 所以字节流是可以传输任意文件的数据。</p>
<h3 id="字节输出流outputStream"><a href="#字节输出流outputStream" class="headerlink" title="字节输出流outputStream"></a>字节输出流outputStream</h3><p><strong>java.io.OutputStream</strong>：此抽象类是表示输出字节流的所有类的超类。将指定的字节信息写出到目的地。 它定义了字节输出流基本的共性方法。</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>void close()</td>
<td>关闭此输出流并释放与此流有关的所有系统资源。</td>
</tr>
<tr>
<td>void flush()</td>
<td>刷新此输出流并强制写出所有缓冲的输出字节。</td>
</tr>
<tr>
<td>void write(byte[] b)</td>
<td>将 b.length 个字节从指定的 byte 数组写入此输出流。</td>
</tr>
<tr>
<td>void write(byte[] b, int off, int len)</td>
<td>将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此输出流。</td>
</tr>
<tr>
<td>abstract void write(int b)</td>
<td>将指定的字节写入此输出流。</td>
</tr>
</tbody></table>
<p><strong>注意：当完成流操作时，必须调用close方法，释放资源</strong></p>
<h4 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h4><p>FileOutputStream : 文件字节输出流，用于将数据写到文件当中去</p>
<p>构造方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>FileOutputStream(File file)</td>
<td>创建一个向指定 File 对象表示的文件中写入数据的文件输出流。</td>
</tr>
<tr>
<td>FileOutputStream(String name)</td>
<td>创建一个向具有指定名称的文件中写入数据的输出文件流。</td>
</tr>
<tr>
<td>FileOutputStream(File file, boolean append)</td>
<td>创建一个向指定 File 对象表示的文件中写入数据的文件输出流。</td>
</tr>
<tr>
<td>FileOutputStream(String name, boolean append)</td>
<td>创建一个向具有指定 name 的文件中写入数据的输出文件流。</td>
</tr>
</tbody></table>
<p><strong>参数：写入数据的目的地</strong></p>
<ul>
<li>String name：目的是一个文件路径</li>
<li>File file：目的地是一个文件</li>
</ul>
<p><strong>构造方法的作用</strong>：</p>
<ol>
<li>创建FileOutputStream对象</li>
<li>根据构造方法传递的文件/文件路径，创建一个空文件</li>
<li>会把FileOutputStream对象指向创建好的文件</li>
</ol>
<p><strong>代码实例</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用File对象创建流对象</span></span><br><span class="line">File f1 = <span class="keyword">new</span> File(<span class="string">&quot;src/cn/egret/pm/a.txt&quot;</span>);</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(f1);</span><br><span class="line">	</span><br><span class="line">使用文件名称创建流对象</span><br><span class="line">FileOutputStream fos1 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;b.txt&quot;</span>);</span><br></pre></td></tr></table></figure>



<h5 id="写入方法使用"><a href="#写入方法使用" class="headerlink" title="写入方法使用"></a>写入方法使用</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 写出字节数据</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * void write(int b) 将指定字节写入此文件输出流。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 写入数据（内存 -&gt; 硬盘)</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 	java程序 ——&gt; Java虚拟机 ——&gt; os(操作系统）  ——&gt; os调用写数据的方法 ——&gt;将数据写入到文件当中</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 字节输出流使用步骤</span></span><br><span class="line"><span class="comment"> * 1、创建FileOutputStream对象，构造方法中写入数据传递的目的地</span></span><br><span class="line"><span class="comment"> * 2、调用FileOutputStream对象中的write，将数据写入到文件当中</span></span><br><span class="line"><span class="comment"> * 3、释放资源（使用流是会占内存，使用要将内存清空，提高程序的效率）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="number">1</span>、创建FileOutputStream对象，构造方法中写入数据传递的目的地</span><br><span class="line">FileOutputStream  fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;src/cn/egret/pm/a.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="number">2</span>、调用FileOutputStream对象中的write，将数据写入到文件当中</span><br><span class="line">fos.write(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="number">3</span>、释放资源</span><br><span class="line">fos.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一次写多个字节的方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * void write(byte[] b) 将 b.length 个字节从指定 byte 数组写入此文件输出流中。 </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * void write(byte[] b,int off, int len) 将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此文件输出流。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">FileOutputStream fos2 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;b.txt&quot;</span>);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 思考：在文件中写入100，是写几个字节</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">fos2.write(<span class="number">49</span>);</span><br><span class="line">fos2.write(<span class="number">48</span>);</span><br><span class="line">fos2.write(<span class="number">48</span>);</span><br><span class="line">fos2.close();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * void write(byte[] b)  一次写入多个字节</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> * 	1、如果写的第一个字节是正数，会查询ASCII码表</span></span><br><span class="line"><span class="comment"> * 	2、如果写的第一个字节是负数，那么第一个字节和第二个字节会组成一个中文显示</span></span><br><span class="line"><span class="comment"> * 	3、查询系统默认的编码表（GBK）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String str = <span class="string">&quot;ABCDEFG&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = str.getBytes();</span><br><span class="line">fos2.write(bytes);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * void write(byte[] b,int off, int len)</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 	把字节数组中的一部分写入到文件中</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	off : 数组开始索引</span></span><br><span class="line"><span class="comment"> * 	len : 写几个字节</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String str2 = <span class="string">&quot;fileOutputStream&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes2 = str2.getBytes();</span><br><span class="line">fos2.write(bytes2, <span class="number">10</span>, <span class="number">6</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br></pre></td></tr></table></figure>



<h5 id="追加写入"><a href="#追加写入" class="headerlink" title="追加写入"></a>追加写入</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 思考：如何在保留目标文件数据的同时，还能够添加新的数据</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * FileOutputStream(File file, boolean append) </span></span><br><span class="line"><span class="comment"> * 			创建一个向指定 File 对象表示的文件中写入数据的文件输出流。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * FileOutputStream(String name, boolean append) </span></span><br><span class="line"><span class="comment"> * 			创建一个向具有指定 name 的文件中写入数据的输出文件流。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	参数：</span></span><br><span class="line"><span class="comment"> * 		append :追加写的开关	</span></span><br><span class="line"><span class="comment"> * 					true:创建对象不会覆盖原有文件，继续在文件末尾添加数据</span></span><br><span class="line"><span class="comment"> * 					false:创建一个新文件覆盖原有文件，在新文件中写数据</span></span><br><span class="line"><span class="comment"> * 		name : 写入数据的目的地</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">FileOutputStream fos3 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;b.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">String str3 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = str3.getBytes();</span><br><span class="line">fos3.write(bytes);</span><br><span class="line">System.out.println(<span class="string">&quot;fos3写入数据成功&quot;</span>);</span><br><span class="line">String str4 = <span class="string">&quot;,FileOutputStream&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes2 = str4.getBytes();</span><br><span class="line">fos3.write(bytes2);  <span class="comment">//hello,FileOutputStream</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 写换行，书写换行符号</span></span><br><span class="line"><span class="comment"> * 	windows:\r\n</span></span><br><span class="line"><span class="comment"> * 	linux: \n</span></span><br><span class="line"><span class="comment"> * 	mac: \r</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 换行追加写</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">FileOutputStream fos4 = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;b.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">String str3 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = str3.getBytes();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">	fos4.write(bytes); <span class="comment">//hello</span></span><br><span class="line">	fos4.write(<span class="string">&quot;\r&quot;</span>.getBytes());  <span class="comment">//windows系统下换行符 : \r\n</span></span><br><span class="line">&#125;</span><br><span class="line">fos4.close();</span><br></pre></td></tr></table></figure>



<h3 id="字节输入流InputStream"><a href="#字节输入流InputStream" class="headerlink" title="字节输入流InputStream"></a>字节输入流InputStream</h3><p><strong>java.io.InputStream</strong>：所有字节输入流的父类，可以读取字节信息到内存中去，它定义了字节输入流基本的共性方法</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>void close()</td>
<td>关闭此输入流并释放与该流关联的所有系统资源。</td>
</tr>
<tr>
<td>abstract int read()</td>
<td>从输入流中读取数据的下一个字节。</td>
</tr>
<tr>
<td>int read(byte[] b)</td>
<td>从输入流中读取一定数量的字节，并将其存储在缓冲区数组 b 中。</td>
</tr>
<tr>
<td>int read(byte[] b, int off, int len)</td>
<td>将输入流中最多len 个数据字节读入 byte 数组。</td>
</tr>
</tbody></table>
<h4 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h4><p><strong>FileInputStream</strong>：文件字节输入流</p>
<p><strong>作用</strong>：把硬盘文件中的数据，读取到内存中去使用</p>
<p>构造方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>FileInputStream(File file)</td>
<td>通过打开一个到实际文件的连接来创建一个FileInputStream，该文件通过文件系统中的 File 对象 file 指定。</td>
</tr>
<tr>
<td>FileInputStream(String name)</td>
<td>通过打开一个到实际文件的连接来创建一个 * FileInputStream，该文件通过文件系统中的路径名 name 指定。</td>
</tr>
</tbody></table>
<p><strong>参数：读取文件的数据域</strong></p>
<ul>
<li>String name:文件路径</li>
<li>File file:文件</li>
</ul>
<p><strong>构造方法中的作用</strong>:</p>
<ol>
<li><p>创建FileInputStream对象</p>
</li>
<li><p>会把FileInputStream对象指定构造方法中要读取的文件</p>
</li>
</ol>
<p><strong>读取文件的原理（硬盘到内存）</strong></p>
<ul>
<li>java程序 - JVM — os操作系统 - os读取数据的方法</li>
</ul>
<p><strong>使用字节输入流的步骤</strong></p>
<ol>
<li>创建FileInputStream对象，构造方法中绑定要读取的数据</li>
<li>使用FileInputStream对象中提供read方法读取文件</li>
<li>释放资源</li>
</ol>
<h5 id="读入示例"><a href="#读入示例" class="headerlink" title="读入示例"></a>读入示例</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileInputStream  fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/pm/a.txt&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * int read() ：读取文件中一个字节并返回，读取到文件末尾返回-1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">int</span> read = fis.read();</span><br><span class="line">System.out.println(<span class="string">&quot;read :&quot;</span> + read);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> read1 = fis.read();</span><br><span class="line">System.out.println(<span class="string">&quot;read1 :&quot;</span> + read1);</span><br><span class="line"><span class="keyword">int</span> read2 = fis.read();</span><br><span class="line">System.out.println(<span class="string">&quot;read2 :&quot;</span> + read2);</span><br><span class="line"><span class="keyword">int</span> read3 = fis.read();</span><br><span class="line">System.out.println(<span class="string">&quot;read3 :&quot;</span> + read3);</span><br><span class="line"><span class="keyword">int</span> read4 = fis.read();</span><br><span class="line">System.out.println(<span class="string">&quot;read4 :&quot;</span> + read4);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用while循环优化程序</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 思考：while循环的结束条件</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 读取到-1的时候结束</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * while循环表达式</span></span><br><span class="line"><span class="comment"> * 	1、fis.read() 读取一个字节</span></span><br><span class="line"><span class="comment"> * 	2、len = fis.read() 将读取到的字节给len</span></span><br><span class="line"><span class="comment"> * 	3、判断len ！= -1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//定义一个变量，用于记录读取到的字节</span></span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((len = fis.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">	System.out.println((<span class="keyword">char</span>)len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 一次读取多字节的方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * read(byte[] b)</span></span><br><span class="line"><span class="comment"> * 		从输入流中读取一定数量的字节，并将其存储到缓冲区数组b中</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 明确两个事情</span></span><br><span class="line"><span class="comment"> * 	1、方法参数byte[]的作用</span></span><br><span class="line"><span class="comment"> * 	2、方法返回值int是什么</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/pm/a.txt&quot;</span>);</span><br><span class="line"><span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> len = fis.read(bytes);</span><br><span class="line">System.out.println(<span class="string">&quot;len :&quot;</span> + len);</span><br><span class="line">System.out.println(<span class="string">&quot;arrays.toString: &quot;</span> + Arrays.toString(bytes));</span><br><span class="line"></span><br><span class="line">len = fis.read(bytes);</span><br><span class="line">System.out.println(<span class="string">&quot;len :&quot;</span> + len);</span><br><span class="line">System.out.println(<span class="string">&quot;arrays.toString: &quot;</span> + Arrays.toString(bytes));</span><br><span class="line"></span><br><span class="line">len = fis.read(bytes);</span><br><span class="line">System.out.println(<span class="string">&quot;len :&quot;</span> + len);</span><br><span class="line">System.out.println(<span class="string">&quot;arrays.toString: &quot;</span> + Arrays.toString(bytes));</span><br><span class="line"></span><br><span class="line"><span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;	<span class="comment">//记录每次读取到的有效字个数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((len = fis.read(bytes)) != -<span class="number">1</span>) &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * String类的构造方法</span></span><br><span class="line"><span class="comment">	 * 	String(byte[] b)  把字节数组转化成字符串</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 	String(byte bytes[], int offset, int length)  把字节数组中的一部分转化成字符串</span></span><br><span class="line"><span class="comment">	 * 		offset：数组开始的索引</span></span><br><span class="line"><span class="comment">	 * 		length：转化的字节个数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	String str = <span class="keyword">new</span> String(bytes,<span class="number">0</span>,len);</span><br><span class="line">	System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//释放资源</span></span><br><span class="line">fis.close();</span><br></pre></td></tr></table></figure>



<p>小练习：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 字节输入输出流练习:</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 需求：实现图片的复制，要将cn/egret/pm/image1.jpg 复制到 cn/egret/am并且将其命名为image2.jpg</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 明确：</span></span><br><span class="line"><span class="comment"> * 	1、数据源是什么</span></span><br><span class="line"><span class="comment"> * 	2、数据的目的地是哪里</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> egret</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>



<h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><p>使用字节流读取中文文件时，<strong>1个中文</strong>：</p>
<ul>
<li>gbk：占两个字节</li>
<li>UTF-8：占用3个字节</li>
</ul>
<h3 id="字符输入流Reader"><a href="#字符输入流Reader" class="headerlink" title="字符输入流Reader"></a>字符输入流Reader</h3><p>来自包 <strong>java.io.Reader</strong>，所有字符输入流的父类</p>
<p><strong>常用方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>close()</td>
<td>关闭此流并且释放资源</td>
</tr>
<tr>
<td>read()</td>
<td>从输入流中读取一个字符</td>
</tr>
<tr>
<td>read(char[] ch))</td>
<td>从输入流当中读取一些字符，并且将其存入字符数组中去</td>
</tr>
</tbody></table>
<p><strong>构造方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>FileReader(File file)</td>
<td>在给定从中读取数据的 File 的情况下创建一个新 FileReader。</td>
</tr>
<tr>
<td>FileReader(String fileName)</td>
<td>在给定从中读取数据的文件名的情况下创建一个新 FileReader。</td>
</tr>
</tbody></table>
<p><strong>字符输入流使用步骤</strong></p>
<ol>
<li><p>创建FileReader对象，构造方法绑定要读取到数据源</p>
</li>
<li><p>调用read()读取文件</p>
</li>
<li><p>释放资源</p>
</li>
</ol>
<p><font color="red">读取字符：read() ，每次读取一个字符的数据，将其提升为int类型，当读取到文件末尾到时候返回-1。</font></p>
<p><strong>代码示例</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String fileName = <span class="string">&quot;src/cn/egret/a.txt&quot;</span>;</span><br><span class="line"><span class="comment">// 1、创建FileReader对象，构造方法绑定要读取到数据源</span></span><br><span class="line">FileReader fileReader = <span class="keyword">new</span> FileReader(fileName);</span><br><span class="line"><span class="comment">// 2、调用read()读取文件</span></span><br><span class="line"><span class="keyword">char</span>[] ch = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;<span class="comment">//记录每次读取到有效字符个数</span></span><br><span class="line"><span class="keyword">while</span>((len = fileReader.read(ch)) != -<span class="number">1</span>) &#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * String构造方法</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * String(char value[])</span></span><br><span class="line"><span class="comment">	 * String(char value[], int offset, int count)</span></span><br><span class="line"><span class="comment">	 * 	</span></span><br><span class="line"><span class="comment">	 * 参数：</span></span><br><span class="line"><span class="comment">	 * 	offset：数组开始索引</span></span><br><span class="line"><span class="comment">	 * 	count ： 转化的个数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	String str = <span class="keyword">new</span> String(ch,<span class="number">0</span>,len);</span><br><span class="line">	System.out.println(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 3、释放资源</span></span><br><span class="line">fileReader.close();</span><br></pre></td></tr></table></figure>



<h3 id="字符输出流Writer"><a href="#字符输出流Writer" class="headerlink" title="字符输出流Writer"></a>字符输出流Writer</h3><p><strong>字符输出流：Writer 所有字符输出流的父类</strong></p>
<p><strong>直接已知子类</strong>：</p>
<ul>
<li>BufferedWriter</li>
<li>CharArrayWriter</li>
<li>FilterWriter</li>
<li>OutputStreamWriter</li>
<li>PipedWriter</li>
<li>PrintWriter</li>
<li>StringWriter</li>
</ul>
<p><strong>常用共性方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>void write(char[] cbuf)</td>
<td>写入字符数组。</td>
</tr>
<tr>
<td>abstract void write(char[] cbuf, int off, int len)</td>
<td>写入字符数组的某一部分。</td>
</tr>
<tr>
<td>void write(int c)</td>
<td>写入单个字符。</td>
</tr>
<tr>
<td>void write(String str)</td>
<td>写入字符串。</td>
</tr>
<tr>
<td>void write(String str, int off, int len)</td>
<td>写入字符串的某一部分。</td>
</tr>
<tr>
<td>flush()</td>
<td>刷新该流的缓冲。</td>
</tr>
<tr>
<td>close()</td>
<td>关闭此流，但要先刷新它。</td>
</tr>
</tbody></table>
<p><strong>FileWriter</strong>：用来写入字符文件的便捷类。此类的构造方法假定默认字符编码和默认字节缓冲区大小都是可接受的。要自己指定这些值，可以先在 FileOutputStream 上构造一个 OutputStreamWriter。</p>
<p><strong>构造方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>FileWriter(File file)</td>
<td>根据给定的 File 对象构造一个 FileWriter 对象。</td>
</tr>
<tr>
<td>FileWriter(String fileName)</td>
<td>根据给定的文件名构造一个 FileWriter 对象。</td>
</tr>
</tbody></table>
<p><strong>作用</strong>：把内存中的数据写入到文件中去</p>
<p><strong>使用步骤</strong>：</p>
<ol>
<li><p>创建FileWriter对象，构造方法绑定要写出到资源路径</p>
</li>
<li><p>调用write()写出数据</p>
</li>
<li><p>释放资源</p>
</li>
</ol>
<p>代码示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//		1、创建FileWriter对象，构造方法绑定要写出到资源路径</span></span><br><span class="line">		FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>,<span class="keyword">true</span>);</span><br><span class="line">		<span class="keyword">char</span>[] ch = &#123;<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;e&#x27;</span>&#125;;</span><br><span class="line"><span class="comment">//		2、调用write()写出数据</span></span><br><span class="line">		fw.write(ch);</span><br><span class="line">		System.out.println(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 注意：由于字符输入流内置缓冲区的原因，如果我们并没有关闭流或者刷新资源，则无法将数据写入到文件中</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * flush和close的区别</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * flush：刷新缓冲区，流对象可以继续使用</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * close：先刷新缓冲区，然后通知系统释放资源，并且流不可以在被使用</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		fw.flush();</span><br><span class="line">		fw.write(<span class="string">&#x27;刷&#x27;</span>);</span><br><span class="line">		fw.flush();</span><br><span class="line">		fw.write(<span class="string">&#x27;新&#x27;</span>);</span><br><span class="line">		fw.flush();</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 一次性写入多个字符</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		String str = <span class="string">&quot;javase进阶&quot;</span>;</span><br><span class="line">		fw.write(str);</span><br><span class="line">		fw.flush();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * write(String str, int off, int len)</span></span><br><span class="line"><span class="comment">		 * 	off:索引位置</span></span><br><span class="line"><span class="comment">		 * 	len:写入个数</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		fw.write(str, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line">		fw.flush();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">			fw.write(<span class="string">&quot;javase进阶&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;\r&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line"><span class="comment">//		3、释放资源</span></span><br><span class="line">		fw.close();</span><br><span class="line">		fw.write(<span class="string">&#x27;刷&#x27;</span>); <span class="comment">//java.io.IOException: Stream closed 流已经关闭IO异常</span></span><br><span class="line">		fw.write(<span class="string">&#x27;新&#x27;</span>);</span><br></pre></td></tr></table></figure>



<h3 id="转换流"><a href="#转换流" class="headerlink" title="转换流"></a>转换流</h3><p><strong>编码</strong>：字符（能看的懂得） -&gt; 字节（看不懂的）</p>
<p><strong>解码</strong>：字节（看不懂的） -&gt; 字符（能看的懂得）</p>
<p><font color="red">注意</font>：如果指定了编码。就相当于指定了字符集。所以编码才是我们要关心的内容</p>
<p><strong>gbk 格式进行编码  要想让其显示正确  要用gbk对应字符集进行解码</strong></p>
<p><strong>gbk 格式进行编码     使用utf-8格式进行解码   乱码</strong>        </p>
<p><strong>字符集（charset）</strong>：编码表，是系统支持的所有字符的集合，其中包括国家文字，标点符号，图形符号，数字</p>
<p><strong>常见的字符集</strong>：</p>
<ul>
<li>ASCII字符集</li>
<li>GBxxx字符集 </li>
<li>GB（国标）</li>
<li>GB2312：简体中文码表</li>
<li>GBK：常见的中文码表</li>
<li>GB18030：最新的中文码表</li>
<li>Unicode字符集等</li>
<li>ISO-8859-1：字符集（拉丁码表）</li>
</ul>
<p><strong>FileReader</strong>：读取默认编码格式文件，读取系统默认的编码（gbk）会产生乱码的情况</p>
<p><font color="red">注意</font>：gbk存储在电脑上的实际是4个字节，使用utf-8存储实际是6个字节，编码格式不同，占用的大小不同</p>
<p><font color="red">注意</font>：FileReader只能查询系统的默认码表</p>
<p><strong>思考：查询默认码表的目的？ 将字节转化成字符（解码的过程）</strong></p>
<p>使用InputStreamReader读取文件，它能够查询utf-8和指定的编码表</p>
<p>InputStreamReader（）是字节通向字符的桥梁</p>
<p>FileWriter 同样只能使用系统默认码表将字符转成字节</p>
<p>OutputStreamWriter() 从字符流到字节流的桥梁</p>
<p><strong>注意：转换流的强大之处在于我们可以指定编码表</strong></p>
<h4 id="InputStreamReader"><a href="#InputStreamReader" class="headerlink" title="InputStreamReader"></a>InputStreamReader</h4><p><strong>构造方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>InputStreamReader(InputStream in)</td>
<td>创建一个使用默认字符集的 InputStreamReader。</td>
</tr>
<tr>
<td>InputStreamReader(InputStream in, String charsetName)</td>
<td>创建使用指定字符集的 InputStreamReader。</td>
</tr>
</tbody></table>
<p><strong>参数</strong>：</p>
<ul>
<li>InputStream in ：字节输入流，用与读取文件中保存的字节</li>
<li>String charsetName ： 设置表码表</li>
</ul>
<p><strong>使用步骤</strong>：</p>
<ol>
<li>创建InputStreamReader对象，构造方法中传入指定的字节输入流和表码格式</li>
<li>使用InputStreamReader对象中read()读取文件</li>
<li>释放资源</li>
</ol>
<p><font color="red">注意：构造方法中指定的编码表明要和文件编码相同，否则会乱码</font></p>
<p><strong>代码示例：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>);</span><br><span class="line">InputStreamReader in = <span class="keyword">new</span> InputStreamReader(fis,<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((len = in.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">	System.out.print((<span class="keyword">char</span>)len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意：后开启的资源先释放</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">in.close();</span><br><span class="line">fis.close();</span><br></pre></td></tr></table></figure>



<h4 id="OutputStreamWriter"><a href="#OutputStreamWriter" class="headerlink" title="OutputStreamWriter"></a>OutputStreamWriter</h4><p><strong>OutputStreamWriter</strong> 是字符流通向字节流的桥梁：可使用指定的 charset，将要写入流中的字符编码成字节。 它使用的字符集可以由名称指定或显式给定，否则将接受平台默认的字符集。</p>
<p><strong>构造方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>OutputStreamWriter(OutputStream out)</td>
<td>创建使用默认字符编码的 OutputStreamWriter。</td>
</tr>
<tr>
<td>OutputStreamWriter(OutputStream out, String charsetName)</td>
<td>创建使用指定字符集的OutputStreamWriter。</td>
</tr>
</tbody></table>
<p><strong>使用步骤</strong>：</p>
<ol>
<li>创建OutputStreamWriter对象，构造方法中传递字节输出流和指定编码格式的名称</li>
<li>使用write()将数据写入到缓冲区</li>
<li>使用flush方法刷新缓冲区将数据写入文件中</li>
<li>释放资源</li>
</ol>
<p>代码示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>);</span><br><span class="line">OutputStreamWriter os = <span class="keyword">new</span> OutputStreamWriter(fos,<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">String str = <span class="string">&quot;你好Javase2101&quot;</span>;</span><br><span class="line">os.write(str);</span><br><span class="line">os.flush();</span><br><span class="line">os.close();</span><br><span class="line">fos.close();</span><br></pre></td></tr></table></figure>



<h3 id="字符缓冲流"><a href="#字符缓冲流" class="headerlink" title="字符缓冲流"></a>字符缓冲流</h3><p><strong>字符缓冲流</strong>：可以传递一个FileWriter/FileReader，缓冲会给FileWriter/FileReader增加一个缓冲区，便于提高读写效率</p>
<h4 id="字符缓存输入流"><a href="#字符缓存输入流" class="headerlink" title="字符缓存输入流"></a>字符缓存输入流</h4><p><strong>BufferedReader构造方法</strong>：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>BufferedReader(Reader in)</td>
<td>创建一个使用默认大小输入缓冲区的缓冲字符输入流。</td>
</tr>
<tr>
<td>BufferedReader(Reader in, int sz)</td>
<td>创建一个使用指定大小输入缓冲区的缓冲字符输入流。</td>
</tr>
</tbody></table>
<p><strong>参数</strong>：</p>
<ul>
<li>Reader in：字符输入流</li>
<li>int sz : 指定缓冲区大小，如果不写的话使用默认大小</li>
</ul>
<h4 id="字符缓存输出流"><a href="#字符缓存输出流" class="headerlink" title="字符缓存输出流"></a>字符缓存输出流</h4><p><strong>BufferedWriter构造方法：</strong></p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>BufferedWriter(Writer out)</td>
<td>创建一个使用默认大小输出缓冲区的缓冲字符输出流。</td>
</tr>
<tr>
<td>BufferedWriter(Writer out, int sz)</td>
<td>创建一个使用给定大小输出缓冲区的新缓冲字符输出流。</td>
</tr>
</tbody></table>
<p><strong>参数</strong>：</p>
<ul>
<li>Writer out：字符输出流</li>
<li>int sz : 指定缓冲区大小，如果不写的话使用默认大小</li>
</ul>
<p><strong>特有方法</strong>:    </p>
<ul>
<li>newLine()：写入一个行分隔符，会根据不同的操作系统，获取到不同到行分隔符;  :</li>
</ul>
<p><strong>使用步骤</strong></p>
<ol>
<li>创建字符缓冲输入/输出流，构造方法中传递对应的输入/输出流</li>
<li>使用write/read方法，读取指定文件的数据/将数据写入到指定到文件中</li>
<li>如果是写操作的话，调用flush方法刷新缓冲区，如过是读操作则忽略该步骤</li>
<li>释放资源</li>
</ol>
<p>代码示例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">---------------------------------写------------------------------------------</span><br><span class="line"><span class="comment">//		1、创建字符缓冲输入/输出流，构造方法中传递对应的输入/输出流</span></span><br><span class="line">		FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>);</span><br><span class="line">		OutputStreamWriter ow = <span class="keyword">new</span> OutputStreamWriter(fos,<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">		BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(ow);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">			String str = <span class="string">&quot;这个是使用gbk格式写入的文件数据&quot;</span>;</span><br><span class="line">			bw.write(str + (i+<span class="number">1</span>));</span><br><span class="line"><span class="comment">//			bw.write(&quot;\r&quot;);</span></span><br><span class="line">			bw.newLine();</span><br><span class="line">		&#125;</span><br><span class="line">		bw.flush();</span><br><span class="line">		bw.close();</span><br><span class="line">		ow.close();</span><br><span class="line">		fos.close();</span><br><span class="line"></span><br><span class="line">--------------------------------读------------------------------------------</span><br><span class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>);</span><br><span class="line">		InputStreamReader ir = <span class="keyword">new</span> InputStreamReader(fis,<span class="string">&quot;gbk&quot;</span>);</span><br><span class="line">		BufferedReader br = <span class="keyword">new</span> BufferedReader(ir);</span><br><span class="line">		<span class="keyword">char</span>[] ch = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * readLine(): 读取一个文本行。</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		String readLine = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">while</span>((readLine = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">			System.out.println(readLine + <span class="string">&quot;\r&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		br.close();</span><br><span class="line">		ir.close();</span><br><span class="line">		fis.close();</span><br></pre></td></tr></table></figure>



<p>小练习：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	需求：</span></span><br><span class="line"><span class="comment"> * 		对文本的内容进行排序，按照（1，2，3...)顺序进行排序</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	分析:</span></span><br><span class="line"><span class="comment"> * 		1、创建map集合用来存放文件</span></span><br><span class="line"><span class="comment"> * 			key : 可以存放文本序号（1，2，3）</span></span><br><span class="line"><span class="comment"> * 			value: 存放每行文本的内容</span></span><br><span class="line"><span class="comment"> *		2、创建字符缓冲输入流对象，构造方法中绑定字符输入流</span></span><br><span class="line"><span class="comment"> *		3、创建字符缓存输出流对象，构造方法中绑定字符输出流</span></span><br><span class="line"><span class="comment"> *		4、使用字符缓冲输入流的方法readLine()逐行读取文本数据</span></span><br><span class="line"><span class="comment"> *		5、对读取到的文件进行切割操作，获取文本序号和文本内容</span></span><br><span class="line"><span class="comment"> *		6、将切割好的序号和内容存入集合中（key是有序的，所以会自动排序）</span></span><br><span class="line"><span class="comment"> *		7、遍历每个键值对</span></span><br><span class="line"><span class="comment"> *		8、将每个键值对拼接成一个文本行</span></span><br><span class="line"><span class="comment"> *		9、将拼接好的数据写入到指定文件当中</span></span><br><span class="line"><span class="comment"> *		10、释放资源</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、创建map集合用来存放文件key :可以存放文本序号(1, 2, 3) value: 存放每行文本的内容</span></span><br><span class="line">Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;String,String&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、创建字符缓冲输入流对象，构造方法中绑定字符输入流</span></span><br><span class="line">FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/a.txt&quot;</span>);</span><br><span class="line">InputStreamReader ir = <span class="keyword">new</span> InputStreamReader(fis);</span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(ir);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3、创建字符缓存输出流对象，构造方法中绑定字符输出流</span></span><br><span class="line">File0utputStream fos = <span class="keyword">new</span> File0utputStream(<span class="string">&quot;src/cn/egret/b.txt&quot;</span>);</span><br><span class="line">OutputStreamWriter ow = <span class="keyword">new</span> 0utputStreamWriter(fos);</span><br><span class="line">BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(ow);</span><br><span class="line"></span><br><span class="line"><span class="comment">//4、使用字符缓冲输入流的方法readLine()逐行读取文本数据</span></span><br><span class="line">String readLine = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">while</span>((readLine = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">	<span class="comment">//5、对读取到的文件进行切割操作，获取文本序号和文本内容</span></span><br><span class="line">	<span class="comment">//1.asdsasdsa</span></span><br><span class="line">	String[] split = readLine.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6、将切割好的序号和内容存入集合中(key是有序的， 所以会自动排序)</span></span><br><span class="line">	map.put(split[<span class="number">0</span>],split[<span class="number">1</span>]); <span class="comment">//split[0]: 序号  split[1]: 文本内容</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//7、遍历每个键值对</span></span><br><span class="line"><span class="keyword">for</span> (String key : map.ketSet()) &#123;</span><br><span class="line">	String value = map.get(key);</span><br><span class="line">	<span class="comment">//8、将每个键值对拼接成一个文本行</span></span><br><span class="line">	readLine = key + <span class="string">&quot;.&quot;</span> + value; .</span><br><span class="line">	<span class="comment">//9、将拼接好的数据写入到指定文件当中</span></span><br><span class="line">	bw.write(readLine);</span><br><span class="line">	bw.newLine();<span class="comment">//换行</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//10、释放资源</span></span><br><span class="line">bw.close();</span><br><span class="line">0W.close();</span><br><span class="line">fos.close( );</span><br><span class="line">br.close();</span><br><span class="line">ir.close();</span><br><span class="line">fis.close();</span><br></pre></td></tr></table></figure>



<h2 id="对象流"><a href="#对象流" class="headerlink" title="对象流"></a>对象流</h2><p>对象序列化流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Person p = new Person(&quot;Egret&quot;,3);</span><br></pre></td></tr></table></figure>

<p>把对象用流的形式存放文件当中进行保存，可以叫做写对象，也可以称之为对象的序列化</p>
<p><strong>注意</strong>：对象中可能不仅仅包含字符，还有字节。需要使用字节流进行对象的序列化</p>
<p>对象的序列化流：ObjectOutputStream</p>
<p><strong>注意：硬盘中保存的对象都是字节</strong></p>
<p><strong>java.io.ObjectOutputStream</strong>：将Java对象的原始数据类型写入到文件当中去，实现对象持久存储</p>
<table>
<thead>
<tr>
<th>类别</th>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>构造方法</td>
<td>ObjectOutputStream(OutputStream out)</td>
<td>创建写入指定 OutputStream 的 ObjectOutputStream。</td>
</tr>
<tr>
<td>特有的成员方法</td>
<td>writeObject(Object obj)</td>
<td>将指定的对象写入 ObjectOutputStream。</td>
</tr>
</tbody></table>
<p><strong>使用步骤:</strong></p>
<ol>
<li>创建一个ObjectOutputStream对象，构造方法中传递字节输出流</li>
<li>使用ObjectOutputStream对象中特有的成员方法writeObject，将对象写入到文件当中</li>
<li>释放资源</li>
</ol>
<p><font color="red">注意</font>：java.io.NotSerializableException: cn.egret.am.Person</p>
<ul>
<li>序列化和反序列化的时候如果对象没有实现Serializable接口，则会抛出该异常：没有序列化异常</li>
</ul>
<p>对象序列化需要的条件</p>
<ul>
<li>实现Serializable</li>
<li>该类的所有属性都必须是可序列化的，如果该类中有一个属性不需要被序列化，则需要表明这个属性是瞬态的，必须用transient关键字修饰</li>
</ul>
<p>对象的反序列化流：ObjectInputStream</p>
<p><strong>作用</strong>：将文件中保存的对象，以流的形式读取出来</p>
<p><strong>思考</strong>：写的时候是可以写任意对象的，那么读取对象的时候我们要用什么类型来接受读取到的对象？</p>
<p><strong>答</strong>：Object类型</p>
<table>
<thead>
<tr>
<th>类别</th>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>构造方法</td>
<td>ObjectInputStream(InputStream in)</td>
<td>创建从指定 InputStream 读取的 ObjectInputStream。</td>
</tr>
<tr>
<td>特有的成员方法</td>
<td>readObject()</td>
<td>从 ObjectInputStream 读取对象。</td>
</tr>
</tbody></table>
<p><strong>使用步骤</strong>：</p>
<ol>
<li>创建ObjectInputStream对象，构造方法中传递字节输入流</li>
<li>使用ObjectInputStream对象中的方法readObject读取保存的对象文件</li>
<li>释放资源</li>
<li>使用读取出来的文件（打印）</li>
</ol>
<p><strong>注意</strong>：</p>
<ul>
<li>反序列的类必须实现Serializable</li>
<li>必须存在类对应的class文件</li>
</ul>
<p><strong>例子Person类</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">12312312312312L</span>;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 在实现了Serializable序列化接口中，会要求我们去定义一个静态常量serialVersionUID作为序列化的版本号</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * serialVersionUID作用：</span></span><br><span class="line"><span class="comment">	 * 		其起到决定当前实例在反序列的时候能否成功，</span></span><br><span class="line"><span class="comment">	 * 		</span></span><br><span class="line"><span class="comment">	 * 当我们使用ObjectOutputStream输出流将对象写入硬盘中的时候，该序列号也会被一起写入</span></span><br><span class="line"><span class="comment">	 * 我们如果要通过ObjectInputStream输入流进行反序列化的时候</span></span><br><span class="line"><span class="comment">	 * 会检测当前对象的序列化的版本号和接收对象的序列化版本号是否一致</span></span><br><span class="line"><span class="comment">	 * 如果一致则反序列化成功，不一致则失败</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 在反序列化的过程中，如果版本一致，则采用兼容模式进行还原</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> String name;<span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">public</span> String address;<span class="comment">//地址</span></span><br><span class="line">	<span class="keyword">public</span> Integer age;<span class="comment">//年龄</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, String address, Integer age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p><strong>使用例子</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//      对象序列化方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"><span class="comment">//		1、创建一个ObjectOutputStream对象，构造方法中传递字节输出流</span></span><br><span class="line">		FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;src/cn/egret/am/a.txt&quot;</span>);</span><br><span class="line">		ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(fos);</span><br><span class="line">		<span class="comment">//创建对象</span></span><br><span class="line">		Person person = <span class="keyword">new</span> Person(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;厦门&quot;</span>, <span class="number">18</span>);</span><br><span class="line"><span class="comment">//		2、使用ObjectOutputStream对象中特有的成员方法writeObject，将对象写入到文件当中</span></span><br><span class="line">		oos.writeObject(person);</span><br><span class="line">		System.out.println(<span class="string">&quot;对象序列化成功&quot;</span>);</span><br><span class="line"><span class="comment">//		3、释放资源</span></span><br><span class="line">		oos.close();</span><br><span class="line">		fos.close();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//对象反序列化的方法</span></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> IOException </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@throws</span> ClassNotFoundException   class文件找不到异常</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">		FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/am/a.txt&quot;</span>);</span><br><span class="line">		ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(fis);</span><br><span class="line">		Object object = ois.readObject();</span><br><span class="line">		ois.close();</span><br><span class="line">		System.out.println(object);</span><br><span class="line">		Person person = (Person) object;</span><br><span class="line">		System.out.println(person.getName() + <span class="string">&quot; &quot;</span> + person.getAddress() + <span class="string">&quot; &quot;</span> + person.getAge());</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException 	  </span>&#123;</span><br><span class="line">		write();</span><br><span class="line">		read();</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p><strong>小练习</strong>：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 序列化集合</span></span><br><span class="line"><span class="comment"> * 需求：</span></span><br><span class="line"><span class="comment"> * 	我们需要在一个文件中存放多个对象的时候，为了节省空间，我们需要将多个对象存储到一个集合当中去</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 目的：</span></span><br><span class="line"><span class="comment"> * 	对集合进行序列化和反序列化操作</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 分析：</span></span><br><span class="line"><span class="comment"> * 	1、定义一个存储对象的集合（ArrayList）</span></span><br><span class="line"><span class="comment"> * 	2、将对象存储到ArrayList集合中去</span></span><br><span class="line"><span class="comment"> * 	3、创建一个序列化流ObjectOutputStream对象</span></span><br><span class="line"><span class="comment"> * 	4、使用ObjectOutputStream中的writeObject方法对集合进行序列化</span></span><br><span class="line"><span class="comment"> * 	5、创建ObjectInputStream对象</span></span><br><span class="line"><span class="comment"> * 	6、使用ObjectInputStream中的readObject方法进行反序列化操作</span></span><br><span class="line"><span class="comment"> * 	7、把Object类型的集合转为ArrayList</span></span><br><span class="line"><span class="comment"> * 	8、遍历集合</span></span><br><span class="line"><span class="comment"> * 	9、释放资源</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method01</span><span class="params">()</span> <span class="keyword">throws</span> I0Exception </span>&#123;</span><br><span class="line"><span class="comment">// 1、定义一个存储对象的集合(ArrayList)</span></span><br><span class="line">    List list = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="comment">// 2、将对象存储到ArrayList集合中去</span></span><br><span class="line">    Person person1 = <span class="keyword">new</span> Person(<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;福州&quot;</span>,<span class="number">18</span>);</span><br><span class="line">    Person person2 = <span class="keyword">new</span> Person (<span class="string">&quot;bbb&quot;</span>,<span class="string">&quot;福州&quot;</span>,<span class="number">18</span>);</span><br><span class="line">    Person person3 = <span class="keyword">new</span> Person(<span class="string">&quot;ccc&quot;</span>,<span class="string">&quot;福州&quot;</span>,<span class="number">18</span>);</span><br><span class="line">    list.add(person1);</span><br><span class="line">    list.add(person2);</span><br><span class="line">    list.add(person3);</span><br><span class="line"><span class="comment">// 3、创建一个序列化流0bject0utputStream对象</span></span><br><span class="line">    File0utputStream fos = <span class="keyword">new</span> File0utputStream(<span class="string">&quot;src/cn/egret/person. txt&quot;</span>);</span><br><span class="line">    0bjectOutputStream out = <span class="keyword">new</span> 0bject0utputStream(fos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4、使用0bject0utputStream中的write0bject方法对集合进行序列化</span></span><br><span class="line">    out.writeObject(list);</span><br><span class="line">    System.out.println(<span class="string">&quot;对象序列化成功&quot;</span>);</span><br><span class="line">    out.close();</span><br><span class="line">    fos.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method02</span><span class="params">()</span> <span class="keyword">throws</span> IOException, Clas sNotFoundException </span>&#123;</span><br><span class="line"><span class="comment">// 5、创建0bjectInputStream对象</span></span><br><span class="line">    FileInputStream fis = <span class="keyword">new</span> FileInputStream(<span class="string">&quot;src/cn/egret/person.txt&quot;</span>);</span><br><span class="line">    ObjectInputStream ois = <span class="keyword">new</span> 0bjectInputStream(fis);</span><br><span class="line"><span class="comment">// 6、使用0bjectInputStream中的read0bject方法进行反序列化操作</span></span><br><span class="line">    0bject person = ois.read0bject();</span><br><span class="line"><span class="comment">// 7、把0bject类型的集合转为ArrayList</span></span><br><span class="line">    List&lt;Person&gt; list = (List&lt;Person&gt;)person;</span><br><span class="line"><span class="comment">// 8、遍历集合</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        0bject object = list.get(i);</span><br><span class="line">        System.out.println(object);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (Person person2 : list) &#123;</span><br><span class="line">        System.out.println(person2);</span><br><span class="line">    &#125;</span><br><span class="line">    ois.close();</span><br><span class="line">    fis.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>JavaIO</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程笔记</title>
    <url>/2021/05/16/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本人学习多线程时做的一些笔记，以备以后回顾复习。</p>
<h1 id="第一章、多线程"><a href="#第一章、多线程" class="headerlink" title="第一章、多线程"></a>第一章、多线程</h1><h2 id="1-1-并发与并行"><a href="#1-1-并发与并行" class="headerlink" title="1.1 并发与并行"></a>1.1 并发与并行</h2><ul>
<li><strong>并发</strong>：指两个或多个事件在<strong>同一个时间段内</strong>发生。</li>
</ul>
<p>此时有两个任务，一个任务1，一个任务2，我要在某个时间内让它完成两个任务，一个任务1，一个任务2，我们用并发的方式完成，我们执行任务需要cpu来执行它，比如此时我的电脑是单核心的，它会先执行任务1再执行任务2，然后执行任务1<strong>比如（QQ，微信，浏览器，交替执行，但是交替速度很快）</strong>。这个指的就是并发即一段时间内，cpu在多个任务之间交替执行</p>
<p><img src="https://img-blog.csdnimg.cn/e162e972c1704b0ca53d27b4230a12bc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"></p>
<ul>
<li><strong>并行</strong>：指两个或多个事件在<strong>同一时刻</strong>发生（同时发生）。</li>
</ul>
<p>我们现在电脑的cpu都是多核心多线程的了对吧。这个cpu可以执行任务1，还能再来一个cpu让它执行任务2.所以这个并行它叫同时执行</p>
<p><img src="https://img-blog.csdnimg.cn/b7b8b3c7a08a40f09122614ad6cba6f4.png"></p>
<p>在操作系统中，安装了多个程序，并发指的是在一段时间内宏观上有多个程序同时运行，这在单 CPU 系统中，每一时刻只能有一道程序执行，即微观上这些程序是分时的交替运行，只不过是给人的感觉是同时运行，那是因为分时交替运行的时间是非常短的。</p>
<p>而在多个 CPU 系统中，则这些可以并发执行的程序便可以分配到多个处理器上（CPU），实现多任务并行执行，即利用每个处理器来处理一个可以并发执行的程序，这样多个程序便可以同时执行。目前电脑市场上说的多核 CPU，便是多核处理器，核越多，并行处理的程序越多，能大大的提高电脑运行的效率。</p>
<blockquote>
<p>注意：单核处理器的计算机肯定是不能并行的处理多个任务的，只能是多个任务在单个CPU上并发运行。同理，线程也是一样的，从宏观角度上理解线程是并行运行的，但是从微观角度上分析却是串行运行的，即一个线程一个线程的去运行，当系统只有一个CPU时，线程会以某种顺序执行多个线程，我们把这种情况称之为线程调度。</p>
</blockquote>
<h2 id="1-2-线程与进程"><a href="#1-2-线程与进程" class="headerlink" title="1.2 线程与进程"></a>1.2 线程与进程</h2><ul>
<li><p><strong>进程</strong>：是指一个内存中运行的应用程序，每个进程都有一个独立的内存空间，一个应用程序可以同时运行多个进程；进程也是程序的一次执行过程，是系统运行程序的基本单位；系统运行一个程序即是一个进程从创建、运行到消亡的过程。</p>
</li>
<li><p><strong>线程</strong>：线程是进程中的一个执行单元，负责当前进程中程序的执行，一个进程中至少有一个线程。一个进程中是可以有多个线程的，这个应用程序也可以称之为多线程程序。 </p>
<p>简而言之：一个程序运行后至少有一个进程，一个进程中可以包含多个线程 </p>
</li>
</ul>
<p>我们可以再电脑底部任务栏，右键—–&gt;打开任务管理器,可以查看当前任务的进程：</p>
<p><strong>进程与线程</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	程序：一堆命令的集合，进程静止的状态，包括了可执行文件、配置文件、</span></span><br><span class="line"><span class="comment"> * 		   数据文件等等软件文件集合，即计算机要执行的任务。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	进程： 即具有一定功能的程序 关于某个数据集合上的一次运行活动，</span></span><br><span class="line"><span class="comment"> *       是cpu进行资源分配和调用的 一个独立单元。</span></span><br><span class="line"><span class="comment"> * 		 </span></span><br><span class="line"><span class="comment"> * 	线程： 有时候可以看成轻量级的进程，是程序执行流的最小单元，</span></span><br><span class="line"><span class="comment"> * 		  一个进程可以看做是有n个线程组成的</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 		在单个程序运行的过程中，可以同时执行多个线程完成不同的工作，</span></span><br><span class="line"><span class="comment"> * 	    称之为多线程</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> *	以腾讯管家为例，打开腾讯管家，就会进入到内存中，就是一个进程</span></span><br><span class="line"><span class="comment"> *	它里面有很多功能,例如病毒查杀，清理垃圾，电脑加速，他们都是一个线程</span></span><br><span class="line"><span class="comment"> *	此时点击病毒查杀，清理垃圾，电脑加速让它执行，它就会开启一条应用程序到cpu的执行路径</span></span><br><span class="line"><span class="comment"> *	cpu就可以通过路径就可以执行功能，这个路径有个名字叫线程 </span></span><br><span class="line"><span class="comment"> *	腾讯电脑管家实际上是个多线程的路径</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> *	注意：线程是属于进程的，是进程中的一个执行单元，负责程序的执行</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *	并发：</span></span><br><span class="line"><span class="comment"> *		 官方解释 ：并发，在操作系统中，是指一个时间段中有几个程序都处</span></span><br><span class="line"><span class="comment"> *				于已启动运行到运行完毕之间，且这几个程序都是在同一个处理机上运行，</span></span><br><span class="line"><span class="comment"> *				但任一个时刻点上只有一个程序在处理机上运行。</span></span><br><span class="line"><span class="comment"> *	理解： </span></span><br><span class="line"><span class="comment"> * 	  线程总是并发运行的，操作系统会将时间分成若干个片段（时间片）</span></span><br><span class="line"><span class="comment"> * 	  尽可能的将这些时间片分配均匀的分配给每一个线程，</span></span><br><span class="line"><span class="comment"> *  	 当线程得到时间片以后，就可能被cpu所执行，</span></span><br><span class="line"><span class="comment"> *   	随着cpu高速的运行，从宏观的角度来看， 所有任务都在同时被执行，</span></span><br><span class="line"><span class="comment"> *   	但是从微观的角度看，每个任务都是走走停停的，此种现象被称为并发。</span></span><br><span class="line"><span class="comment"> *   </span></span><br><span class="line"><span class="comment"> *   </span></span><br><span class="line"><span class="comment"> *	并行： 多个任务是被多个cpu真的同时运行。		</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>

<p><strong>线程调度:</strong></p>
<ul>
<li><p>分时调度</p>
<p>所有线程轮流使用 CPU 的使用权，平均分配每个线程占用 CPU 的时间</p>
</li>
<li><p>抢占式调度</p>
<p>优先让优先级高的线程使用 CPU，如果线程的优先级相同，那么会随机选择一个(线程随机性)，Java使用的为抢占式调度。</p>
<ul>
<li><p>设置线程的优先级 </p>
</li>
<li><p>抢占式调度详解</p>
<p>大部分操作系统都支持多进程并发运行，现在的操作系统几乎都支持同时运行多个程序。比如：现在我们上课一边使用编辑器，一边使用录屏软件，同时还开着画图板，dos窗口等软件。此时，这些程序是在同时运行，”感觉这些软件好像在同一时刻运行着“。</p>
</li>
</ul>
<p>实际上，CPU(中央处理器)使用抢占式调度模式在多个线程间进行着高速的切换。对于CPU的一个核而言，某个时刻，只能执行一个线程，而 CPU的在多个线程间切换速度相对我们的感觉要快，看上去就是在同一时刻运行。<br>  其实，多线程程序并不能提高程序的运行速度，但能够提高程序运行效率，让CPU的使用率更高。</p>
</li>
</ul>
<h2 id="1-3-创建线程类"><a href="#1-3-创建线程类" class="headerlink" title="1.3 创建线程类"></a>1.3 创建线程类</h2><p>Java使用<code>java.lang.Thread</code>类代表<strong>线程</strong>，所有的线程对象都必须是Thread类或其子类的实例。每个线程的作用是完成一定的任务，实际上就是执行一段程序流即一段顺序执行的代码。Java使用线程执行体来代表这段程序流。Java中通过继承Thread类来<strong>创建</strong>并<strong>启动多线程</strong>的步骤如下：</p>
<ol>
<li>定义Thread类的子类，并重写该类的run()方法，该run()方法的方法体就代表了线程需要完成的任务,因此把run()方法称为线程执行体。</li>
<li>创建Thread子类的实例，即创建了线程对象</li>
<li>调用线程对象的start()方法来启动该线程</li>
</ol>
<p>代码如下：</p>
<p>测试类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">创建多线程程序的第一种方式:创建Thread类的子类</span></span><br><span class="line"><span class="comment">java.lang.Thread类:是描述线程的类,我们想要实现多线程程序,就必须继承Thread类</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">实现步骤:</span></span><br><span class="line"><span class="comment">    1.创建一个Thread类的子类</span></span><br><span class="line"><span class="comment">    2.在Thread类的子类中重写Thread类中的run方法,设置线程任务(开启线程要做什么?)</span></span><br><span class="line"><span class="comment">    3.创建Thread类的子类对象</span></span><br><span class="line"><span class="comment">    4.调用Thread类中的方法start方法,开启新的线程,执行run方法</span></span><br><span class="line"><span class="comment">         void start() 使该线程开始执行；Java 虚拟机调用该线程的 run 方法。</span></span><br><span class="line"><span class="comment">         结果是两个线程并发地运行；当前线程（main线程）和另一个线程（创建的新线程,执行其 run 方法）。</span></span><br><span class="line"><span class="comment">         多次启动一个线程是非法的。特别是当线程已经结束执行后，不能再重新启动。</span></span><br><span class="line"><span class="comment">java程序属于抢占式调度,那个线程的优先级高,那个线程优先执行;同一个优先级,随机选择一个执行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 3.创建Thread类的子类对象</span></span><br><span class="line">		MyThread mt = <span class="keyword">new</span> MyThread();</span><br><span class="line">		<span class="comment">// 4.调用Thread类中的方法start方法,开启新的线程,执行run方法</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * 注：  启动一个线程，是通过调用其start()来实现的。</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		mt.start();</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;main:&quot;</span> + i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义线程类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="comment">//定义指定线程名称的构造方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//调用父类的String参数的构造方法，指定线程的名称</span></span><br><span class="line">		<span class="keyword">super</span>(name);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 重写run方法，完成该线程执行的逻辑</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">			System.out.println(getName()+<span class="string">&quot;：正在执行！&quot;</span>+i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第二章、多线程执行原理"><a href="#第二章、多线程执行原理" class="headerlink" title="第二章、多线程执行原理"></a>第二章、多线程执行原理</h1><p>JVM执行main方法，找os开辟一条main方法通向CPU的路径，这个路径叫做main线程(主线程)</p>
<p>cpu通过这个线程,这个路径可以执行main方法</p>
<p>当我们在这里new MyThread(); 等于它重新开辟了一个指向CPU的路径</p>
<p>这条路径是执行run方法的</p>
<p>现在对于CPU而言,我是不是有两条执行路径了，cpu就有了选择的权限。</p>
<p>注意：我们控制不了CPU，CPU喜欢谁它就会执行哪条路径</p>
<p><img src="https://img-blog.csdnimg.cn/d1a6b8d67da0453ab3e70912742dad0b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"></p>
<p><strong>所以就有了程序的随机打印结果</strong></p>
<p>即两个线程，一个main线程，一个thread线程一起抢夺cpu的执行权(cpu的执行时间)</p>
<p>谁抢到了谁执行对应的代码。<br><img src="https://img-blog.csdnimg.cn/1efe066342804fbeb8b15af5b86e6d88.png"></p>
<h2 id="2-1、多线程原理"><a href="#2-1、多线程原理" class="headerlink" title="2.1、多线程原理"></a>2.1、多线程原理</h2><p>有一个main方法，还有一个run方法。run方法里面有个for循环，</p>
<p>那我们来看看它的内存图解</p>
<p>首先它有一个栈内存</p>
<p>程序怎么执行的呢，首先执行程序的入口也就是main方法。它会压栈执行，从栈内存进来跑到栈内存最下面来</p>
<p>然后一行行执行代码，首先创建对象，对象创建在那里?是不是就是在堆内存中，这里new的对象是在堆内存中的， 它有个内存空间，这个对象它有自己的地址值，然后会把地址赋值给变量，</p>
<p>我们今天重点研究的不是堆内存而是栈内存，这里我要执行一行代码即(<strong>mt.run</strong>)它这里就是调用这个run方法</p>
<p>它也会压栈执行，但是这么执行，程序就是单线程的程序了。他会先执行完run方法，在执行主方法里的其他代码。</p>
<p>那什么是多线程程序呢</p>
<p>就是我们在这里调用了<strong>mt.start</strong>方法。调用mt.start方法，它就不一样了。<strong>它会开辟一个新的栈空间</strong>。它调用的是mt.start方法，执行run方法</p>
<p>此时对于cpu而言，我可以选择执行哪个栈空间里的代码，即cpu有了选择的权利，可以执行main方法也可以执行run方法。这个就是多线程的内存空间</p>
<h2 id="2-2、多线程的好处"><a href="#2-2、多线程的好处" class="headerlink" title="2.2、多线程的好处"></a>2.2、多线程的好处</h2><p>多个线程之间互不影响（在不同的栈空间中）</p>
<h1 id="第三章、Thread类"><a href="#第三章、Thread类" class="headerlink" title="第三章、Thread类"></a>第三章、Thread类</h1><h2 id="3-1、thread类的常见方法"><a href="#3-1、thread类的常见方法" class="headerlink" title="3.1、thread类的常见方法"></a>3.1、thread类的常见方法</h2><h3 id="3-1-1、获取线程名称"><a href="#3-1-1、获取线程名称" class="headerlink" title="3.1.1、获取线程名称"></a>3.1.1、获取线程名称</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程常见的方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1、获取线程名称： </span></span><br><span class="line"><span class="comment"> * 	1.1、使用Thread类中的方法getName() String getName() 返回该线程的名称</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	1.2、可以先获取当前正在执行的线程，使用线程中的方法getName()获取线程名</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 	static Thread currentThread()返回对当前正在执行的线程对象引用</span></span><br><span class="line"><span class="comment"> *	获取当前的Id       getId()</span></span><br><span class="line"><span class="comment"> * 	获取当前线程的优先级 getPriority()</span></span><br><span class="line"><span class="comment"> * 	获取当前线程的状态 getState()</span></span><br><span class="line"><span class="comment"> * 	判断当前线程是否还处于活动状态 isAlive()</span></span><br><span class="line"><span class="comment"> * 	判断线程是否为守护线程 isDaemon()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个Thread的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThreads</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 重写Thread类中的run方法,设置线程任务</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//		获取线程名</span></span><br><span class="line">		String name2 = getName();</span><br><span class="line">		System.out.println(name2);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//获取当前执行线程</span></span><br><span class="line">		Thread currentThread = Thread.currentThread();</span><br><span class="line">		System.out.println(currentThread);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//链式编程</span></span><br><span class="line">		System.out.println(Thread.currentThread().getName());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread02</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		MyThreads mt = <span class="keyword">new</span> MyThreads();</span><br><span class="line">		<span class="comment">//调用start方法,开启新线程,执行run方法</span></span><br><span class="line">		mt.run();</span><br><span class="line">		<span class="keyword">new</span> MyThreads().start();	</span><br><span class="line">		<span class="comment">//链式编程</span></span><br><span class="line">		System.out.println(Thread.currentThread().getName());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-2、设置线程名称"><a href="#3-1-2、设置线程名称" class="headerlink" title="3.1.2、设置线程名称"></a>3.1.2、设置线程名称</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	设置线程名称:</span></span><br><span class="line"><span class="comment">		1、使用Thread类中方法setName(名字)</span></span><br><span class="line"><span class="comment">			void setName(String name)</span></span><br><span class="line"><span class="comment">		改变线程名称，使之与参数name相同</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">		2、创建带参数的构造方法,参数传递线程的名称</span></span><br><span class="line"><span class="comment">			调用父类的带参构造方法，把线程名称传递给父类</span></span><br><span class="line"><span class="comment">			让父类Thread()给子线程起一个名字</span></span><br><span class="line"><span class="comment">			Thread(String name) 分配新的Thread对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread03</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 开启多线程</span></span><br><span class="line">		Mythread1 th1 = <span class="keyword">new</span> Mythread1();</span><br><span class="line">		th1.setName(<span class="string">&quot;线程1&quot;</span>);</span><br><span class="line">		th1.start();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//开启多线程</span></span><br><span class="line">		Mythread1 th2 = <span class="keyword">new</span> Mythread1(<span class="string">&quot;线程2&quot;</span>);</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mythread1</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span>  <span class="title">Mythread1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Mythread1</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//把线程名给父类,让父类Thread给子线程起个名字</span></span><br><span class="line">		<span class="keyword">super</span>(name);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 获取线程名</span></span><br><span class="line">		System.out.println(Thread.currentThread().getName());</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-3、设置守护线程"><a href="#3-1-3、设置守护线程" class="headerlink" title="3.1.3、设置守护线程"></a>3.1.3、设置守护线程</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 守护线程: 守护线程也叫做后台线程,正常创建出来的线程又叫做前台线程 或者 主线程</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 主线程可以通过setDemeon()设置成后台线程(守护线程)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 当一个程序中,所有的主线程都结束后,此时如果程序中还有守护线程在执行任务 则不管守护线程是否执行完任务,整个程序结束。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 当一个程序中，所有的守护线程任务结束，当此时如果程序中还有主线程在执行任务 则整个程序继续执行</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;主线程在执行任务 &quot;</span> + i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						<span class="comment">//线程睡眠</span></span><br><span class="line">						Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;守护线程在执行任务 &quot;</span> + i);</span><br><span class="line">					</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">500</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;	</span><br><span class="line">		<span class="comment">//将线程2设置成守护线程</span></span><br><span class="line">		th2.setDaemon(<span class="keyword">true</span>);</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-4、线程睡眠"><a href="#3-1-4、线程睡眠" class="headerlink" title="3.1.4、线程睡眠"></a>3.1.4、线程睡眠</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * sleep(int value) 让当前线程陷入沉睡,沉睡时间为指定的时间,单位是毫秒</span></span><br><span class="line"><span class="comment"> * sleep为静态方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">5</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">					System.out.println(i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-5、设置线程优先级"><a href="#3-1-5、设置线程优先级" class="headerlink" title="3.1.5、设置线程优先级"></a>3.1.5、设置线程优先级</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 线程的优先级：</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 我们不能强制干涉cpu将时间片分配给某个线程</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 但是我们可以控制线程的优先级，从而提高该线程获取时间片的概率</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 数据越大，优先级越高。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 优先级：1-10级，数字越大，优先级越高</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 优先级默认等级为5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;th1正在执行&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(<span class="string">&quot;th2&quot;</span>) &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;th2正在执行&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * setPriority(int value)</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 设置当前线程的优先级，需要在线程启动之前调用，之后调用就没有意义</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		th1.setPriority(<span class="number">2</span>);</span><br><span class="line">		th2.setPriority(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-6、线程让步"><a href="#3-1-6、线程让步" class="headerlink" title="3.1.6、线程让步"></a>3.1.6、线程让步</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * yield : 线程让步,当前线程让出自己的cpu资源让其他线程优先执行</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 注:  1、让出的时间不确定; </span></span><br><span class="line"><span class="comment"> *      2、在让出cpu资源时,会先检查是否有相同优先级且处于可运行状态的线程,如果有则让出,否则不让</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;老太太排队买票 &quot;</span> + i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">					&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">						<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;小朋友在排队买票 &quot;</span> + i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						<span class="keyword">if</span> (i == <span class="number">4</span>) &#123;</span><br><span class="line">							System.out.println(<span class="string">&quot;开始让出cpu&quot;</span>);</span><br><span class="line">							<span class="comment">/**</span></span><br><span class="line"><span class="comment">							 * 让出cpu资源，让出的时间不确定，若要把cpu全让出，可用线程插队</span></span><br><span class="line"><span class="comment">							 */</span></span><br><span class="line">							Thread.yield();</span><br><span class="line"></span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">						<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-1-7、线程插队"><a href="#3-1-7、线程插队" class="headerlink" title="3.1.7、线程插队"></a>3.1.7、线程插队</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * jion() 该方法表示线程插队,当当前线程插队时,其他线程陷入阻塞状态,直到当前线程插队将任务执行完毕</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;老太太排队买票 &quot;</span> + i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;小朋友在排队买票 &quot;</span> + i);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">						<span class="keyword">if</span> (i == <span class="number">3</span>) &#123;</span><br><span class="line">							System.out.println(<span class="string">&quot;老太太又事情，先插个队&quot;</span>);</span><br><span class="line">							<span class="comment">/**</span></span><br><span class="line"><span class="comment">							 * 让th1线程插队</span></span><br><span class="line"><span class="comment">							 */</span></span><br><span class="line">							th1.join();</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="第四章、实现多线程的第二种方法"><a href="#第四章、实现多线程的第二种方法" class="headerlink" title="第四章、实现多线程的第二种方法"></a>第四章、实现多线程的第二种方法</h1><h2 id="4-1、实现Runnable接口"><a href="#4-1、实现Runnable接口" class="headerlink" title="4.1、实现Runnable接口"></a>4.1、实现Runnable接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	 在java中使用多线程方式2(推荐)：</span></span><br><span class="line"><span class="comment"> * 		  通过实现Runnable接口， 重写run（） ，在其中定义要执行的任务。</span></span><br><span class="line"><span class="comment"> * 		  然后将该任务子类对象添加到线程中执行。</span></span><br><span class="line"><span class="comment"> * 		   </span></span><br><span class="line"><span class="comment"> * 		  好处在于将线程 和 线程要执行的任务分开，避免的线程和任务的强耦合，</span></span><br><span class="line"><span class="comment"> * 		  当前这个线程在完成某个任务以后，可以再去执行别的任务。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	构造方法：</span></span><br><span class="line"><span class="comment"> * 		Thread(Runnable target)分配新的Thread对象</span></span><br><span class="line"><span class="comment"> * 		Thread(Runnable target,String name)分配新的name对象</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	实现步骤:</span></span><br><span class="line"><span class="comment"> * 		1、创建一个Runnable接口的实现类</span></span><br><span class="line"><span class="comment"> * 		2、在实现类中重写Runnable接口中的run方法</span></span><br><span class="line"><span class="comment"> * 		3、创建一个Runnable接口实现类对象</span></span><br><span class="line"><span class="comment"> * 		4、创建Thread类对象，构造方法中传递Runnable接口的实现类对象</span></span><br><span class="line"><span class="comment"> * 		5、调用Thread类中的start方法开启新的线程,执行run方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread06</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//Runnable 可以看作任务类接口</span></span><br><span class="line">		Runnable1 run1 = <span class="keyword">new</span> Runnable1();</span><br><span class="line">		Runnable2 run2 = <span class="keyword">new</span> Runnable2();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">// 将任务对象 添加线程中执行</span></span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run1);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run2);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable1</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;runnable1接口实现多线程&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable2</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;runnable2接口实现多线程&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第五章、Thread和Runnable接口的区别"><a href="#第五章、Thread和Runnable接口的区别" class="headerlink" title="第五章、Thread和Runnable接口的区别"></a>第五章、Thread和Runnable接口的区别</h1><p>如果一个类继承Thread，则不适合资源共享，但是如果实现了Runnable接口的话，则很容易的实现资源共享。</p>
<p><strong>总结：</strong></p>
<p><strong>实现Runnable接口比继承Thread类所具有的优势：</strong></p>
<ol>
<li><p>适合多个相同的程序代码的线程去共享一个资源 </p>
</li>
<li><p>可以避免Java中的单继承的局限性</p>
</li>
<li><p>增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立</p>
</li>
<li><p>线程池只能放入实现Runnable或者Callable类线程。不能直接放入继承Thread的类</p>
</li>
</ol>
<p><font color="red">扩充：在Java中，每次程序运行至少启动两个线程，一个是main线程，一个是垃圾收集线程，因为每当使用Java命令执行一个类的时候，实际上都会启动一个JVM，每个JVM其实在就是在操作系统中启动了一个进程</font></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">	实现Runnable接口创建多线程程序的好处</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">	1、避免了单继承的局限性</span></span><br><span class="line"><span class="comment">		一个类只能继承一个类(一个人只能有一个亲爹)</span></span><br><span class="line"><span class="comment">		类继承了Thread类就不能继承其它类</span></span><br><span class="line"><span class="comment">		实现了Runnable接口，还可以继承其它类，实现其它接口</span></span><br><span class="line"><span class="comment">	2、增强程序的扩展性,降低了程序的耦合性(解耦)</span></span><br><span class="line"><span class="comment">		实现Runnable接口的方式,把设置线程任务和开启新线程进行分离(解耦)</span></span><br><span class="line"><span class="comment">		实现类中,重写了run方法,用来设置线程任务</span></span><br><span class="line"><span class="comment">		创建Thread类对象,调用start方法,用来开启新线程</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread08</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Runnable3 run3 = <span class="keyword">new</span> Runnable3();</span><br><span class="line">		Runnable4 run4 = <span class="keyword">new</span> Runnable4();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run3);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run4);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable3</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;Hello,Runnable&quot;</span> + (i + <span class="number">1</span>));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;HelloWorld&quot;</span> + (i + <span class="number">1</span>));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第六章、匿名内部类的方式实现多线程"><a href="#第六章、匿名内部类的方式实现多线程" class="headerlink" title="第六章、匿名内部类的方式实现多线程"></a>第六章、匿名内部类的方式实现多线程</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	匿名内部类方式</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	匿名:没有名字 内部类:写在其他类内部的类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	匿名内部类的作用:简化代码 把子类继承父类，重写父类的方法创建子类对象可以一步完成 </span></span><br><span class="line"><span class="comment"> * 	把实现实现类接口，重写接口中的方法，创建实现类对象一步完成</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	匿名内部类的最终产物:子类/实现类对象，而这个类它没有名字</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	格式: </span></span><br><span class="line"><span class="comment"> * 	new 父类/接口()&#123;</span></span><br><span class="line"><span class="comment"> * 		 重写父类/接口中的方法</span></span><br><span class="line"><span class="comment"> * 	 &#125;;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread09</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 线程的父类是Thread</span></span><br><span class="line">		Thread thread = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">					System.out.println(Thread.currentThread().getName() + <span class="string">&quot; &quot;</span> + (i + <span class="number">1</span>));</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line"><span class="comment">//		thread.start();</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 实现线程接口Runnable</span></span><br><span class="line">		Runnable r = <span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">					System.out.println(Thread.currentThread().getName() + <span class="string">&quot;Runnable&quot;</span> + (i + <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(r) &#123;</span><br><span class="line">		&#125;;</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第七章、线程安全问题"><a href="#第七章、线程安全问题" class="headerlink" title="第七章、线程安全问题"></a>第七章、线程安全问题</h1><p>如果有多个线程在同时运行，而这些线程可能会同时运行这段代码。程序每次运行结果和单线程运行的结果是一样的，而且其他的变量的值也和预期的是一样的，就是线程安全的。 </p>
<p>我们通过一个案例，演示线程的安全问题： </p>
<p>电影院要卖票，我们模拟电影院的卖票过程。假设要播放的电影是 “葫芦娃大战奥特曼”，本次电影的座位共100个 (本场电影只能卖100张票)。 </p>
<p>我们来模拟电影院的售票窗口，实现多个窗口同时卖 “葫芦娃大战奥特曼”这场电影票(多个窗口一起卖这100张票) 需要窗口，采用线程对象来模拟；需要票，Runnable接口子类来模拟</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 	线程安全问题:</span></span><br><span class="line"><span class="comment"> 		</span></span><br><span class="line"><span class="comment"> 	案例:此时有个电影院开始售票,它一共贩卖100张</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	现在只能让它现场买票，这个就相当于单线程程序(不会出现线程安全问题）</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	那此时，一个窗口卖票速度太慢了,变成了三个窗口</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	1号窗口贩卖(1-33) 2号窗口贩卖(34-67) 3号窗口贩卖(68-100)</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	三个窗口一起卖票，但是卖的票不同，也不会出问题(多线程程序没有访问共享数据)</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	现在假如有这么一个情景，还是开设了三个窗口，但是每个窗口都是从1号票开始卖</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	这就会出现问题了，是不是就会出现混乱的情况了啊！是不是就会出现不存在的票啊！</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	多线程访问了共享的数据会产生安全问题，这个问题是可以解决的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	线程并发带来的安全问题 : 当多个线程操作同一个资源的时候就会引发安全问题</span></span><br><span class="line"><span class="comment"> *	 当多个线程访问同一份临界资源时,由于cpu切换线程的不确定性,会引发多个线程抢资源的现象,导致逻辑上的伦乱,引发数据安全问题。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Java中一般引发安全问题的前提:  </span></span><br><span class="line"><span class="comment"> *		1、多个线程同时访问同一个对象	  </span></span><br><span class="line"><span class="comment"> *		2、操作同一个全局变量</span></span><br><span class="line"><span class="comment"> * 	解决办法 : 通过添加synchronized锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//模拟卖票案例</span></span><br><span class="line">		Runnable1 run1 = <span class="keyword">new</span> Runnable1();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run1);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run1);</span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread(run1);</span><br><span class="line">	</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable1</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"><span class="comment">//	定义一个多线程共享的票源</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置线程任务，卖票</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 使用死循环让卖票重复执行</span></span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">			<span class="comment">// 先判断票是否存在</span></span><br><span class="line">			<span class="keyword">if</span> (ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;还有余票&quot;</span> + Thread.currentThread().getName() + <span class="string">&quot;正在售卖第&quot;</span> + ticket + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line">				ticket = ticket - <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现程序出现了两个问题： </p>
<ol>
<li><p>相同的票数,比如5这张票被卖了两回。 </p>
</li>
<li><p>不存在的票，比如0票与-1票，是不存在的。 </p>
</li>
</ol>
<p>这种问题，几个窗口(线程)票数不同步了，这种问题称为线程不安全。 </p>
<p>线程安全问题都是由全局变量及静态变量引起的。若每个线程中对全局变量、静态变量只有读操作，而无写 </p>
<p>操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步， </p>
<p>否则的话就可能影响线程安全。 </p>
<h2 id="7-1-线程同步"><a href="#7-1-线程同步" class="headerlink" title="7.1  线程同步"></a>7.1  线程同步</h2><p>当我们使用多个线程访问同一资源的时候，且多个线程中对资源有写的操作，就容易出现线程安全问题。 </p>
<p>要解决上述多线程并发访问一个资源的安全性问题:也就是解决重复票与不存在票问题，Java中提供了同步机制 (<strong>synchronized</strong>)来解决。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">窗口1线程进入操作的时候，窗口2和窗口3线程只能在外等着，窗口1操作结束，窗口1和窗口2和窗口3才有机会进入代码去执行。</span><br><span class="line">也就是说在某个线程修改共享资源的时候，其他线程不能修改该资源，等待修改完毕同步之后，才能去抢夺CPU资源，</span><br><span class="line">完成对应的操作，保证了数据的同步性，解决了线程不安全的现象</span><br></pre></td></tr></table></figure>

<p>为了保证每个线程都能正常执行原子操作,Java引入了线程同步机制。 </p>
<p>那么怎么去使用呢？有三种方式完成同步操作： </p>
<ol>
<li><p>同步代码块。 </p>
</li>
<li><p>同步方法。 </p>
</li>
<li><p>锁机制。 </p>
</li>
</ol>
<h2 id="7-2、同步代码块"><a href="#7-2、同步代码块" class="headerlink" title="7.2、同步代码块"></a>7.2、同步代码块</h2><ul>
<li><strong>同步代码块</strong>： synchronized 关键字可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。 </li>
</ul>
<p>格式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(同步锁)&#123;</span><br><span class="line">    需要同步操作的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>同步锁</strong>: </p>
<p>对象的同步锁只是一个概念,可以想象为在对象上标记了一个锁. </p>
<ol>
<li><p>锁对象 可以是任意类型。 </p>
</li>
<li><p>多个线程对象 要使用同一把锁。 </p>
</li>
</ol>
<p>注意:在任何时候,最多允许一个线程拥有同步锁,谁拿到锁就进入代码块,其他的线程只能在外等着 </p>
<p>(BLOCKED)。 </p>
<p>使用同步代码块解决代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	注意：</span></span><br><span class="line"><span class="comment"> * 		线程安全问题不能产生,我们可以让一个线程在访问共享数据</span></span><br><span class="line"><span class="comment"> * 		的时候，无论是否丢失了cpu的执行权，让其他的线程只能等待</span></span><br><span class="line"><span class="comment"> * 		等待当前线程卖完票，其它线程才能进行卖票。</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 	保证:始终只有一个线程在卖票</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 	同步代码块：</span></span><br><span class="line"><span class="comment"> * 	synchronized(同步锁)&#123;</span></span><br><span class="line"><span class="comment"> *   	可能会出现线程安全的代码</span></span><br><span class="line"><span class="comment"> *	&#125;</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> *	注意：</span></span><br><span class="line"><span class="comment"> *		1、同步代码块的锁对象，可以是任意对象</span></span><br><span class="line"><span class="comment"> *		2、但是必须保证多个线程使用的锁对象是同一个</span></span><br><span class="line"><span class="comment"> *		3、锁对象作用:</span></span><br><span class="line"><span class="comment"> *			把同步代码块锁住,只能一个线程在同步代码块中执行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Runnable2 run1 = <span class="keyword">new</span> Runnable2();</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		Thread th1 =<span class="keyword">new</span> Thread(run1);</span><br><span class="line">		Thread th2 =<span class="keyword">new</span> Thread(run1);</span><br><span class="line">		Thread th3 =<span class="keyword">new</span> Thread(run1);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//	创建一个锁对象</span></span><br><span class="line">	Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//			创建同步代码块</span></span><br><span class="line">			<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">				<span class="keyword">if</span> (ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="comment">// 票存在，卖票ticket</span></span><br><span class="line">					System.out.println(Thread.currentThread().getName() + <span class="string">&quot;正在出售第 &quot;</span> + ticket + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line"></span><br><span class="line">					ticket--;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-3、同步基数原理"><a href="#7-3、同步基数原理" class="headerlink" title="7.3、同步基数原理"></a>7.3、同步基数原理</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	同步技术原理:</span></span><br><span class="line"><span class="comment"> * 		使用了一个锁对象，这个锁对象叫做同步锁，也叫对象锁</span></span><br><span class="line"><span class="comment"> * 		也叫对象监视器，</span></span><br><span class="line"><span class="comment"> * 	</span></span><br><span class="line"><span class="comment"> * 	流程:</span></span><br><span class="line"><span class="comment"> * 		两个线程一起抢夺cpu执行权，谁抢到了谁执行run方法进行卖票</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 		t0抢到了cpu的资源执行run方法，遇到synchronized同步代码块</span></span><br><span class="line"><span class="comment"> * 		此时t0检查同步代码块是否有锁对象,发现有，就会获取到锁对象，进入到同步中执行	</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 		t1抢到了cpu的执行权，执行run方法，遇到synchronized同步代码块</span></span><br><span class="line"><span class="comment"> *		此时t1检查同步代码块是否有锁对象,发现有，就会获取到锁对象，进入到同步中执行	</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *		t1发现没有锁对象，就会进入到阻塞状态，会一直等待。t0线程归还锁对象</span></span><br><span class="line"><span class="comment"> *		一直到t0线程执行完同步中的代码，就会把锁对象归还给同步代码块</span></span><br><span class="line"><span class="comment"> *		t1才能获取到锁对象，进入到同步中执行</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	总结:</span></span><br><span class="line"><span class="comment"> *		同步中的线程,没有执行完，不会释放锁，同步外的线程没有锁进不去</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	注意：</span></span><br><span class="line"><span class="comment"> *		同步保证了只能有一个线程在同步中执行共享数据，保证了安全</span></span><br><span class="line"><span class="comment"> *		程序频繁的判断锁，获取锁，释放锁，程序的效率会变低</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Runnable3 run3 = <span class="keyword">new</span> Runnable3();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run3) ;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run3);</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">double</span> money;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Account</span><span class="params">(String name, <span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">		<span class="keyword">this</span>.money = money;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">takeMoney</span><span class="params">(<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">			<span class="keyword">this</span>.money -= money;</span><br><span class="line">			System.out.println(Thread.currentThread().getName() </span><br><span class="line">					+ <span class="string">&quot;取款后剩余&quot;</span> + <span class="keyword">this</span>.money);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable3</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	Account account = <span class="keyword">new</span> Account(<span class="string">&quot;llw&quot;</span>, <span class="number">10000</span>);</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		account.takeMoney(<span class="number">1000</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-4、同步方法"><a href="#7-4、同步方法" class="headerlink" title="7.4、同步方法"></a>7.4、同步方法</h2><ul>
<li><strong>同步方法</strong>:使用synchronized修饰的方法,就叫做同步方法,保证A线程执行该方法的时候,其他线程只能在方法外等着。 </li>
</ul>
<p>格式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">    可能会产生线程安全问题的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同步锁是谁? </p>
<p>对于非static方法,同步锁就是this。 </p>
<p>对于static方法,我们使用当前方法所在类的字节码对象(类名.class)。 </p>
<p>使用同步方法代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 	在方法上加个synchronized关键字</span></span><br><span class="line"><span class="comment"> 		</span></span><br><span class="line"><span class="comment"> 	案例:</span></span><br><span class="line"><span class="comment"> 		卖票案例出现线程安全问题</span></span><br><span class="line"><span class="comment"> 		卖出了重复的票和不存在的票</span></span><br><span class="line"><span class="comment"> 		</span></span><br><span class="line"><span class="comment"> 		解决线程问题的方案:使用同步方法来解决</span></span><br><span class="line"><span class="comment"> 		</span></span><br><span class="line"><span class="comment"> 	使用步骤</span></span><br><span class="line"><span class="comment"> 	1、把访问共享数据的代码抽取出来，方法方法中</span></span><br><span class="line"><span class="comment"> 	2、在方法上添加修饰符synchronized</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	格式:</span></span><br><span class="line"><span class="comment"> 		定义方法的格式</span></span><br><span class="line"><span class="comment"> 	</span></span><br><span class="line"><span class="comment"> 	修饰符 synchronized 返回值类型 方法名(参数列表)&#123;</span></span><br><span class="line"><span class="comment"> 		可能会出现线程安全问题的代码</span></span><br><span class="line"><span class="comment"> 	&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * synchronized锁  实际上锁的不是某段代码，某个方法，而是锁的是此方法，或者同步块所指定的对象</span></span><br><span class="line"><span class="comment"> *	 当某个线程去访问这些加了synchronized锁的代码时，对应的对象就被上锁。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 	同步锁的互斥：当我们使用线程访问了某个对象中的带synchronized的方法（代码段）</span></span><br><span class="line"><span class="comment"> * 	那么该对象中的其他synchronized方法（代码段）</span></span><br><span class="line"><span class="comment"> * 	也都不可以被其他线程同时访问，但是非synchronized方法不受限制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Runnable4 run4 = <span class="keyword">new</span> Runnable4();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run4);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run4);</span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread(run4);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnable4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//卖票</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">			payTicket();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 	定义一个同步方法</span></span><br><span class="line"><span class="comment">	 	同步方法也会把方法内部的代码锁住</span></span><br><span class="line"><span class="comment">	 	只让一个线程执行 </span></span><br><span class="line"><span class="comment">	 	同步方法锁的对象是谁?</span></span><br><span class="line"><span class="comment">	 	就是实现类对象，即new Runnable4() 也就是this</span></span><br><span class="line"><span class="comment">	 	即谁调用这个方法，对象就是谁</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">payTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//票存在ticket--</span></span><br><span class="line">			System.out.println(Thread.currentThread().getName()</span><br><span class="line">					+<span class="string">&quot;正在贩卖&quot;</span> + ticket +<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">			ticket--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-5、静态锁"><a href="#7-5、静态锁" class="headerlink" title="7.5、静态锁"></a>7.5、静态锁</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *	 静态锁： 在静态方法上加锁， 此时锁的不是方法所在的对象（因为静态方法不是某个对象的，而是被该类的全体对象所共有的），</span></span><br><span class="line"><span class="comment"> *   此时实际上锁的是当前类对应的Class(存放类信息的类,jvm加载的每一个类，都有一个对应的Class实例)对象。</span></span><br><span class="line"><span class="comment"> *   所以此时，调用上锁的静态方法时，是否同步执行，和是哪个对象无关。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	 注意：静态的同步方法，锁对象是谁？ 不是this，this是创建对象之后产生的</span></span><br><span class="line"><span class="comment"> *		  静态方法优先于对象</span></span><br><span class="line"><span class="comment"> *		  静态方法的锁对象是本来的class属性 --&gt; class文件对象(反射)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Runnalbe5 run5 = <span class="keyword">new</span> Runnalbe5();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run5);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run5);</span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread(run5);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Runnalbe5</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            payStaticTicket();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">payStaticTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * 这样也可以保证锁对象是唯一的</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="comment">/*</span></span><br><span class="line"><span class="comment">		 * synchronized (Runnalbe5.class) &#123;</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * &#125;</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">		<span class="keyword">if</span>(ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="comment">//票存在ticket--</span></span><br><span class="line">			System.out.println(Thread.currentThread().getName()</span><br><span class="line">					+<span class="string">&quot;正在贩卖&quot;</span> + ticket +<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">			ticket--;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-6、线程脏读问题"><a href="#7-6、线程脏读问题" class="headerlink" title="7.6、线程脏读问题"></a>7.6、线程脏读问题</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 	线程脏读问题:</span></span><br><span class="line"><span class="comment"> * 	此时可能就会出现脏读：即一个线程进行写数据操作的时候，执行到一半时间片耗尽，</span></span><br><span class="line"><span class="comment"> * 	此时有另一个线程去执行读数据的操作，但是读操作是没有加锁的可以被并发访问</span></span><br><span class="line"><span class="comment"> * 	此时可能读到的是另一个线程处理了一般的数据，此时可能读到的是另一个线程处理了一半的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Accounts accounts = <span class="keyword">new</span> Accounts(<span class="string">&quot;llw&quot;</span>,<span class="number">1000</span>);</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				accounts.setMoney(<span class="number">500</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;th1 :&quot;</span> + accounts.getMoney());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(<span class="string">&quot;th2&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;th2 :&quot;</span> + accounts.getMoney());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Accounts</span></span>&#123;</span><br><span class="line">	String userName;</span><br><span class="line">	<span class="keyword">double</span> money;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Accounts</span><span class="params">(String userName,<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.userName = userName;</span><br><span class="line">		<span class="keyword">this</span>.money = money;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="comment">/*synchronized*/</span><span class="function"><span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">double</span> money)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Thread.sleep(<span class="number">500</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">this</span>.money -= money;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span><span class="comment">/*synchronized*/</span> <span class="function"><span class="keyword">double</span> <span class="title">getMoney</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> money;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-7、内存的可见性问题-和-volatile关键字"><a href="#7-7、内存的可见性问题-和-volatile关键字" class="headerlink" title="7.7、内存的可见性问题 和 volatile关键字"></a>7.7、内存的可见性问题 和 volatile关键字</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  内存的可见性问题 和 volatile关键字</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  在下述案例中我们期望通过线程2修改status变量的值，去停止线程1 但是实际上并没有成功</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">  那么线程1在运行的时候，会将stop变量的值拷贝一份放在自己的工作内存当中。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">　　那么当线程2更改了stop变量的值之后，但是还没来得及写入主存当中，线程2转去做其他事情了，那么线程1由于不知道线程2对stop变量的更改，因此还会一直循环下去。</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  	为什么发生这样的结果：和jvm的内存模型相关，在jvm中全局共享变量存放在主存中（堆中） 而每个线程都有属于自己的私有的本地内存，当程序运行起来以后，</span></span><br><span class="line"><span class="comment">  	CPU为了避免频繁的去主存中读取数据，而导致性能降低，所以会先将主存中的数据复制一份到线程的本地内存中，</span></span><br><span class="line"><span class="comment">  	然后所有对数据的操作都是对本地内存中的副本进行操作，操作完毕后，会在合适的时机将数据刷新到主存中去 此时如果多个线程去访问同一份数据都是先拷贝一份到本地中</span></span><br><span class="line"><span class="comment"> 	而某个线程刷新了主存中的数据以后，其他的线程并不一定能感知到主存中的数据已经发生了改变 此时就导致了线程之间的可见性问题。</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">  	解决的办法：</span></span><br><span class="line"><span class="comment">  		1、对数据操作时使用线程锁 synchronized 或者 Lock </span></span><br><span class="line"><span class="comment">  		2、在对操作的变量前加volatile关键字</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">  volatile关键字： 是Java提供的一种轻量级的同步机制（并不能解决线程安全问题！！！！）</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">  	当一个变量被volatile关键字修饰以后，某个线程对此数据修改，刷新到主存中后，jvm会通知其他线程次数据已经发生改变</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> 	此时数据已经发生了变化，其他线程就会重新载入这个数据</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">  线程的可见性：指的是某条线程修改了多个线程的共享的全局变量数据，新的值对其他线程来说也是可以立刻得知的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo07</span> </span>&#123;</span><br><span class="line"><span class="comment">//	boolean status = true;</span></span><br><span class="line">	<span class="keyword">volatile</span> <span class="keyword">boolean</span> status = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Demo07 d7 = <span class="keyword">new</span> Demo07();</span><br><span class="line"></span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">				String thName = Thread.currentThread().getName();</span><br><span class="line">				System.out.println(thName + <span class="string">&quot;开始执行..&quot;</span>);</span><br><span class="line"></span><br><span class="line">				<span class="keyword">while</span> (d7.status) &#123;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">				System.out.println(thName + <span class="string">&quot;执行完毕&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(<span class="string">&quot;th2&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				String thName = Thread.currentThread().getName();</span><br><span class="line">				System.out.println(thName + <span class="string">&quot;开始执行&quot;</span>);</span><br><span class="line">				d7.status = <span class="keyword">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		th2.start();</span><br><span class="line">		System.out.println(d7.status);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * volatile 不能替代synchronized锁机制，它还是会引发线程安全问题</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span>	</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo08</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 1、测试volatile会引发安全问题</span></span><br><span class="line"><span class="comment">//		Thread th1 = new Thread() &#123;</span></span><br><span class="line"><span class="comment">//			@Override</span></span><br><span class="line"><span class="comment">//			public void run() &#123;</span></span><br><span class="line"><span class="comment">//				for (int i = 0; i &lt; 10000; i++) &#123;</span></span><br><span class="line"><span class="comment">//					numadd();</span></span><br><span class="line"><span class="comment">//				&#125;</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line"><span class="comment">//		&#125;;</span></span><br><span class="line"><span class="comment">//		Thread th2 = new Thread() &#123;</span></span><br><span class="line"><span class="comment">//			@Override</span></span><br><span class="line"><span class="comment">//			public void run() &#123;</span></span><br><span class="line"><span class="comment">//				for (int i = 0; i &lt; 10000; i++) &#123;</span></span><br><span class="line"><span class="comment">//					numadd();</span></span><br><span class="line"><span class="comment">//				&#125;</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line"><span class="comment">//		&#125;;</span></span><br><span class="line"><span class="comment">//		th1.start();</span></span><br><span class="line"><span class="comment">//		th2.start();</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line"><span class="comment">//		try &#123;</span></span><br><span class="line"><span class="comment">//			Thread.sleep(1000);</span></span><br><span class="line"><span class="comment">//		&#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//			e.printStackTrace();</span></span><br><span class="line"><span class="comment">//		&#125;</span></span><br><span class="line"><span class="comment">//		System.out.println(num);</span></span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//2、测试 synchronized不会引发安全问题</span></span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">					numadd();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(<span class="string">&quot;th2&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">					numadd();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		System.out.println(num);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"><span class="comment">//	  public static void numadd() &#123; num++; &#125;</span></span><br><span class="line">	 </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">numadd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		num++;</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-8、synchronized锁的重入机制"><a href="#7-8、synchronized锁的重入机制" class="headerlink" title="7.8、synchronized锁的重入机制"></a>7.8、synchronized锁的重入机制</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * synchronized锁的重入（重新进入）机制：</span></span><br><span class="line"><span class="comment"> * 当一个线程获得一个对象的锁以后，在该锁中执行代码的时候，可以再次获得该对象的锁。</span></span><br><span class="line"><span class="comment"> * 例子：比如下面的method1()方法被线程访问了以后，对应的对象被锁定了，其他的带synchronized的方法也不可以被访问，</span></span><br><span class="line"><span class="comment"> * 但是在method1()里面又调用了method2()方法。按理说此时程序是不可以继续向下执行的，变成死锁</span></span><br><span class="line"><span class="comment"> * 但是实际上它是可以继续执行的，因为锁的重入机制，虽然调用method1()的时候，获取了对应的对象的锁，此时在这个锁的内部执行代码</span></span><br><span class="line"><span class="comment"> * 可以再次获取同一个对象的锁，即继续执行method2()方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		method2();</span><br><span class="line">		System.out.println(<span class="string">&quot;method1()....&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;method2()...&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Demo01 demo01 = <span class="keyword">new</span> Demo01();</span><br><span class="line">		Thread th = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				demo01.method1();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-9、死锁"><a href="#7-9、死锁" class="headerlink" title="7.9、死锁"></a>7.9、死锁</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 死锁： 多个线程在竞争资源的时候，过多的同步方法导致线程推进不当， 两个或者以上线程持有对方所需要的锁，但是又不可以及时释放，</span></span><br><span class="line"><span class="comment"> * 导致线程之间都在等待对方释放锁，最终引发死锁问题。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 例子： 有线程th1和th2，以及有两个被锁对象obj1和obj2 线程1执行的时候，需要先锁obj1在去锁obj2</span></span><br><span class="line"><span class="comment"> * 与此同时，线程th2也在并发执行，需要先锁obj2，在去锁obj1</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 此时，可能就会出现线程th1拿到obj1锁的时候，发现obj2锁已经被th2拿了</span></span><br><span class="line"><span class="comment"> * 那么此时th1就只能等待th2释放锁，但是th2释放obj2的锁，需要先拿到obj1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">	Object obj1 = <span class="keyword">new</span> Object();</span><br><span class="line">	Object obj2 = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">synchronized</span> (obj1) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;锁完boj1以后，去锁obj2&quot;</span>);</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">500</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">            <span class="comment">// 想要2</span></span><br><span class="line">			<span class="keyword">synchronized</span> (obj2) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;锁定obj2&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">synchronized</span> (obj2) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;锁完boj2以后，去锁obj1&quot;</span>);</span><br><span class="line"></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">500</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 想要1</span></span><br><span class="line">			<span class="keyword">synchronized</span> (obj1) &#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;锁定obj1&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Demo02 demo02 = <span class="keyword">new</span> Demo02();</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				demo02.method2();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(<span class="string">&quot;th2&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				demo02.method1();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-10、Lock锁"><a href="#7-10、Lock锁" class="headerlink" title="7.10、Lock锁"></a>7.10、Lock锁</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Lock锁： Lock实现了比synchronized锁更广泛的锁操作</span></span><br><span class="line"><span class="comment"> * 接口中提供了两个方法</span></span><br><span class="line"><span class="comment"> * 1、Lock：获取锁</span></span><br><span class="line"><span class="comment"> * 2、unlock:释放锁</span></span><br><span class="line"><span class="comment"> * 他能够知道什么时候获取锁，什么时候释放锁</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * java.util.conurrent.locks.ReentrantLock implement Lock</span></span><br><span class="line"><span class="comment"> * 使用步骤（既然是接口，就要实现它的实现类）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1、在成员位置上创建一个ReentrantLock对象</span></span><br><span class="line"><span class="comment"> * 2、可能会出现安全问题的代码前，调用Lock方法获取锁</span></span><br><span class="line"><span class="comment"> * 3、可能会出现安全问题的代码后，调用unLock释放锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		Rannable10 run10 = <span class="keyword">new</span> Rannable10();</span><br><span class="line">		</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line">		</span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rannable10</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//	1、在成员变量前创建Lock锁</span></span><br><span class="line">	Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">//		2、可能会出现安全问题的代码前，调用Lock方法获取锁</span></span><br><span class="line">			lock.lock();</span><br><span class="line">			payticket();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">payticket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println(Thread.currentThread().getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket +<span class="string">&quot;张票&quot;</span>);</span><br><span class="line">			ticket--;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		3、可能会出现安全问题的代码后，调用unLock释放锁</span></span><br><span class="line">		lock.unlock();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其实它还有一种更好的写法，那我们来一起看一下怎个要怎么写吧</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Lock锁： Lock实现了比synchronized锁更广泛的锁操作 </span></span><br><span class="line"><span class="comment"> * 接口中提供了两个方法 </span></span><br><span class="line"><span class="comment"> * 		1、Lock：获取锁 </span></span><br><span class="line"><span class="comment"> *		2、unlock:释放锁</span></span><br><span class="line"><span class="comment"> * 他能够知道什么时候获取锁，什么时候释放锁</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * java.util.conurrent.locks.ReentrantLock implement Lock 使用步骤（既然是接口，就要实现它的实现类）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 1、在成员位置上创建一个ReentrantLock对象 </span></span><br><span class="line"><span class="comment"> * 2、可能会出现安全问题的代码前，调用Lock方法获取锁</span></span><br><span class="line"><span class="comment"> * 3、可能会出现安全问题的代码后，调用unLock释放锁</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Lock(java提供的lock对象来实现synchronized相同的效果);</span></span><br><span class="line"><span class="comment"> * Lock是一个接口类型，常见的子实现类为Reentrantlock</span></span><br><span class="line"><span class="comment"> * 使用的时候先创建lock对象，通过lock方法加锁，unlock()方法手动释放锁</span></span><br><span class="line"><span class="comment"> * 在他们之间的代码就都被上锁了，变成同步执行的代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		Rannable10 run10 = <span class="keyword">new</span> Rannable10();</span><br><span class="line"></span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread(run10);</span><br><span class="line"></span><br><span class="line">		th1.start();</span><br><span class="line">		th2.start();</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rannable10</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ticket = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//	1、在成员变量前创建Lock锁</span></span><br><span class="line">	Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">//		2、可能会出现安全问题的代码前，调用Lock方法获取锁</span></span><br><span class="line">			lock.lock();</span><br><span class="line">			payticket();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">payticket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (ticket &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">				System.out.println(Thread.currentThread().getName() + <span class="string">&quot;正在卖第&quot;</span> + ticket + <span class="string">&quot;张票&quot;</span>);</span><br><span class="line">				ticket--;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">                <span class="comment">// 加了finally</span></span><br><span class="line">			&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">//				3、可能会出现安全问题的代码后，调用unLock释放锁</span></span><br><span class="line">				lock.unlock();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第八章、线程状态"><a href="#第八章、线程状态" class="headerlink" title="第八章、线程状态"></a>第八章、线程状态</h1><h2 id="8-1、线程状态概述"><a href="#8-1、线程状态概述" class="headerlink" title="8.1、线程状态概述"></a>8.1、线程状态概述</h2><p>当线程被创建并启动以后，它既不是已启动就进入了执行状态，也不是一直处于执行状态，在线程的生命周期中，有几种状态呢？</p>
<table>
<thead>
<tr>
<th>线程状态</th>
<th>导致状态发生条件</th>
</tr>
</thead>
<tbody><tr>
<td>new（新建）</td>
<td>线程刚被创建，但是未启动，还没调用start方法</td>
</tr>
<tr>
<td>runnable（可运行）</td>
<td>线程可以在java虚拟机中运行的状态，可能正在运行自己的代码，也可能没有，这取决于操作系统的处理器</td>
</tr>
<tr>
<td>Blocked（锁阻塞）</td>
<td>当一个线程试图获取一个对象锁，而该对象锁被其他线程持有，则该线程进入Blocked状态，当该线程持有锁，改线程编程Runnable状态</td>
</tr>
<tr>
<td>waiting（无限等待）</td>
<td>一个线程在等待另一个线程执行一个（唤醒）动作时，该线程进入waiting状态，进入这个状态后时不能自动唤醒的，必须等待另一个线程调用notify或者notifyAll方法才能唤醒</td>
</tr>
<tr>
<td>Timed Waiting（计时等待、休眠）</td>
<td>同waiting状态，有几个方法会有超时参数，调用他们进入Timed Waiting状态，这一状态将一直保持到超时期满或者接收到唤醒通知，带有超时参数的常用方法有Thread.sleep、Object wait</td>
</tr>
<tr>
<td>Teminated（死亡状态）</td>
<td>因为run方法正常退出而死亡，或者因为没有捕获的异常终止了run方法而死亡。</td>
</tr>
</tbody></table>
<p><strong>注意：他们各个状态之间可以相互转换</strong></p>
<p><img src="https://img-blog.csdnimg.cn/cd47c24357a242fa855ad44ff0dbf7a6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70"></p>
<h2 id="8-2-Timed-Waiting（计时等待）"><a href="#8-2-Timed-Waiting（计时等待）" class="headerlink" title="8.2 Timed Waiting（计时等待）"></a>8.2 Timed Waiting（计时等待）</h2><p>Timed Waiting在API中的描述为：一个正在限时等待另一个线程执行一个（唤醒）动作的线程处于这一状态。单独的去理解这句话，真是玄之又玄，其实我们在之前的操作中已经接触过这个状态了，在哪里呢？ </p>
<p>在我们写卖票的案例中，为了减少线程执行太快，现象不明显等问题，我们在run方法中添加了sleep语句，这样就强制当前正在执行的线程休眠（<strong>暂停执行</strong>），以“减慢线程”。 </p>
<p>其实当我们调用了sleep方法之后，当前执行的线程就进入到“休眠状态”，其实就是所谓的Timed Waiting(计时等 </p>
<p>待)，那么我们通过一个案例加深对该状态的一个理解。 </p>
<p><strong>实现一个计数器，计数到100</strong>，在每个数字之间暂停<strong>1</strong>秒，每隔<strong>10</strong>个数字输出一个字符串 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *	实现一个计数器，计数到100，在每个数字之间暂停1秒，</span></span><br><span class="line"><span class="comment"> *	每隔10个数字输出一个字符串	</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 	在这我们新建一个线程，它是处于可以运行状态</span></span><br><span class="line"><span class="comment"> * 	如果我们调用了sleep方法，它就会进入到计时等待状态</span></span><br><span class="line"><span class="comment"> * 	等待结束以后，它又会回到可运行的状态</span></span><br><span class="line"><span class="comment"> * 	这个就被叫做计时等待</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">					<span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;每间隔10个数字输出一个字符串&quot;</span> + i);</span><br><span class="line">						System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					System.out.println(<span class="string">&quot;i = &quot;</span> + i);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">				&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过案例可以发现，sleep方法的使用还是很简单的。我们需要记住下面几点： </p>
<ol>
<li><p>进入 TIMED_WAITING 状态的一种常见情形是调用的 sleep 方法，单独的线程也可以调用，不一定非要有协作关系。</p>
</li>
<li><p>为了让其他线程有机会执行，可以将Thread.sleep()的调用<strong>放线程run()之内</strong>。这样才能保证该线程执行过程中会睡眠 </p>
</li>
<li><p>sleep与锁无关，线程睡眠到期自动苏醒，并返回到Runnable（可运行）状态。 </p>
</li>
</ol>
<p>小提示：sleep()中指定的时间是线程不会运行的最短时间。因此，sleep()方法不能保证该线程睡眠到期后就 </p>
<p>开始立刻执行。 </p>
<h2 id="8-3-BLOCKED（锁阻塞）"><a href="#8-3-BLOCKED（锁阻塞）" class="headerlink" title="8.3 BLOCKED（锁阻塞）"></a>8.3 BLOCKED（锁阻塞）</h2><p>Blocked状态在API中的介绍为：一个正在阻塞等待一个监视器锁（锁对象）的线程处于这一状态。 </p>
<p>我们已经学完同步机制，那么这个状态是非常好理解的了。比如，线程A与线程B代码中使用同一锁，如果线程A获取到锁，线程A进入到Runnable状态，那么线程B就进入到Blocked锁阻塞状态。 </p>
<p>这是由Runnable状态进入Blocked状态。除此Waiting以及Time Waiting状态也会在某种情况下进入阻塞状态，而这部分内容作为扩充知识点带领大家了解一下。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 锁阻塞:</span></span><br><span class="line"><span class="comment"> * 	首先它也是先创建一个线程，它处于可运行的状态</span></span><br><span class="line"><span class="comment"> * 	什么被称之为可运行的状态呢，就是它可以运行，但是它需要和别的线程去争抢cpu执行权</span></span><br><span class="line"><span class="comment"> * 	没有争取到锁的对象进入到锁阻塞的状态</span></span><br><span class="line"><span class="comment"> * 	如果锁阻塞状态的线程，获取到锁对象，它就会进入到可运行的状态</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-4-Waiting（无限等待）"><a href="#8-4-Waiting（无限等待）" class="headerlink" title="8.4 Waiting（无限等待）"></a>8.4 Waiting（无限等待）</h2><p>Wating状态在API中介绍为：一个正在无限期等待另一个线程执行一个特别的（唤醒）动作的线程处于这一状态。 </p>
<p>那么我们之前遇到过这种状态吗？答案是并没有，但并不妨碍我们进行一个简单深入的了解。我们通过一段代码来 </p>
<p>学习一下： </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	无限等待：</span></span><br><span class="line"><span class="comment"> *	等待唤醒案例（线程之间的通信）</span></span><br><span class="line"><span class="comment"> *	有两个商铺，一个卖包子的商铺，一个买包子的商铺</span></span><br><span class="line"><span class="comment"> *	顾客要买包子，和老板说明买包子的数量和种类，</span></span><br><span class="line"><span class="comment"> *	顾客就等着老板做包子（调用wait方法）</span></span><br><span class="line"><span class="comment"> *	waiting状态，无限等待</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	老板开始做包子，根据你的需要来做包子，做好包子告诉顾客（调用notify)</span></span><br><span class="line"><span class="comment"> *	告诉顾客包子做好了，就可以开始吃了</span></span><br><span class="line"><span class="comment"> *	所以顾客和老板之间就形成了一个通信</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	顾客来买包子，要等待老板做包子，调用wait方法</span></span><br><span class="line"><span class="comment"> *	老板做好包子，告诉顾客包子做好了，调用notify方法</span></span><br><span class="line"><span class="comment"> *	这个就形成线程之间的通信</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> */</span>	</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	等待唤醒案例：线程之间的通信</span></span><br><span class="line"><span class="comment"> * 		创建一个顾客线程(消费者)告知老板要的包子的种类和数量</span></span><br><span class="line"><span class="comment"> * 		调用wait方法，放弃cpu的执行，进入到WAITING无限等待状态</span></span><br><span class="line"><span class="comment"> * 		</span></span><br><span class="line"><span class="comment"> *		创建一个老板线程(生产者)花了5秒做包子，做好包子之后，调用</span></span><br><span class="line"><span class="comment"> *		notify方法唤醒顾客，吃包子</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> *	注意:顾客和老板线程必须使用同步代码块包裹起来，包子等待和唤醒只能有</span></span><br><span class="line"><span class="comment"> *		一个在执行</span></span><br><span class="line"><span class="comment"> *		同步使用的锁对象必须保证唯一</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *		只有锁对象才能调用wait和notify方法，非锁对象是不能调用的</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	object类中的方法</span></span><br><span class="line"><span class="comment"> *		void wait()</span></span><br><span class="line"><span class="comment"> *			在其他线程调用此对象的notify()方法或者notifyAll()方法前，导致当前线程等待</span></span><br><span class="line"><span class="comment"> *		</span></span><br><span class="line"><span class="comment"> *		void notify()</span></span><br><span class="line"><span class="comment"> *			唤醒在此对象监视器上等待的单个线程</span></span><br><span class="line"><span class="comment"> *			会继续执行wait方法之后的代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo05</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 创建锁对象，保证唯一</span></span><br><span class="line">		Object obj = <span class="keyword">new</span> Object();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 创建一个顾客线程（消费者)</span></span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">					<span class="comment">// 保证等待和唤醒的线程只能有一个执行，需要使用同步技术</span></span><br><span class="line">					<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;顾客线程(消费者)告知老板要的包子的种类和数量&quot;</span>);</span><br><span class="line">						<span class="comment">// 调用wait方法，让它进入到无限等待状态</span></span><br><span class="line">						<span class="keyword">try</span> &#123;</span><br><span class="line">							obj.wait();</span><br><span class="line">						&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">							e.printStackTrace();</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="comment">// 唤醒之后执行的代码</span></span><br><span class="line">						System.out.println(<span class="string">&quot;包子已经做好了，可以开始吃了&quot;</span>);</span><br><span class="line">						System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 创建一个老板线程（生产者)</span></span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"><span class="comment">//						老板线程(生产者)花了5秒做包子，做好包子之后，</span></span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">5000</span>);<span class="comment">// 花5秒做包子</span></span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="comment">// 保证等待和唤醒的线程只能有一个执行，需要使用同步技术</span></span><br><span class="line">					<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;做好包子，告知顾客，可以吃包子了&quot;</span>);</span><br><span class="line"><span class="comment">//						调用notify方法唤醒顾客，吃包子</span></span><br><span class="line">						obj.notify();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过上述案例我们会发现，一个调用了某个对象的 Object.wait 方法的线程会等待另一个线程调用此对象的 </p>
<p>Object.notify()方法 或 Object.notifyAll()方法。 </p>
<p>其实waiting状态并不是一个线程的操作，它体现的是多个线程间的通信，可以理解为多个线程之间的协作关系， </p>
<p>多个线程会争取锁，同时相互之间又存在协作关系。就好比在公司里你和你的同事们，你们可能存在晋升时的竞争，但更多时候你们更多是一起合作以完成某些任务。 </p>
<p>当多个线程协作时，比如A，B线程，如果A线程在Runnable（可运行）状态中调用了wait()方法，那么A线程就进入了Waiting（无限等待）状态，同时失去了同步锁。假如这个时候B线程获取到了同步锁，在运行状态中调用了</p>
<p>notify()方法，那么就会将无限等待的A线程唤醒。注意是唤醒，如果获取到锁对象，那么A线程唤醒后就进入 </p>
<p>Runnable（可运行）状态；如果没有获取锁对象，那么就进入到Blocked（锁阻塞状态）。 </p>
<h2 id="8-5、wait和notify"><a href="#8-5、wait和notify" class="headerlink" title="8.5、wait和notify"></a>8.5、wait和notify</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 	Object类中wait带参方法和notifyAll()方法</span></span><br><span class="line"><span class="comment"> *	 </span></span><br><span class="line"><span class="comment"> *	进入到TimeWaiting(即使等待)有两种方式</span></span><br><span class="line"><span class="comment"> *	1、使用sleep（long m) 方法,在毫秒结束以后，线程睡醒</span></span><br><span class="line"><span class="comment"> *	进入到Runnable/Blocked状态</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> *	2、使用wait(long m)方法，wait方法如果在毫秒结束之后</span></span><br><span class="line"><span class="comment"> *	还没被notify唤醒，就会自动醒来</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *	唤醒的方法:</span></span><br><span class="line"><span class="comment"> *		void notify()</span></span><br><span class="line"><span class="comment"> *			唤醒在此对象监视器上等待的单个线程，</span></span><br><span class="line"><span class="comment"> *		void notifyAll()</span></span><br><span class="line"><span class="comment"> *			唤醒在此对象监视器上等待的所有线程，</span></span><br><span class="line"><span class="comment"> *	</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo06</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 创建锁对象，保证唯一</span></span><br><span class="line">		Object obj = <span class="keyword">new</span> Object();</span><br><span class="line">		Thread th1 = <span class="keyword">new</span> Thread(<span class="string">&quot;th1&quot;</span>) &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">					<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;顾客1告诉老板要的包子种类和数&quot;</span>);</span><br><span class="line">						<span class="keyword">try</span> &#123;</span><br><span class="line">							obj.wait(<span class="number">5000</span>);</span><br><span class="line">						&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">							e.printStackTrace();</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="comment">// 唤醒之后执行的代码</span></span><br><span class="line">						System.out.println(<span class="string">&quot;顾客1包子已经做好了，开吃&quot;</span>);</span><br><span class="line">						System.out.println(<span class="string">&quot;-----------------&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th1.start();</span><br><span class="line"></span><br><span class="line">		Thread th2 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">					<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;顾客2告诉老板要的包子种类和数&quot;</span>);</span><br><span class="line">						<span class="keyword">try</span> &#123;</span><br><span class="line">							obj.wait(<span class="number">5000</span>);</span><br><span class="line">						&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">							e.printStackTrace();</span><br><span class="line">						&#125;</span><br><span class="line">						<span class="comment">// 唤醒之后执行的代码</span></span><br><span class="line">						System.out.println(<span class="string">&quot;顾客2包子已经做好了，开吃&quot;</span>);</span><br><span class="line">						System.out.println(<span class="string">&quot;-----------------&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th2.start();</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 老板线程</span></span><br><span class="line">		Thread th3 = <span class="keyword">new</span> Thread() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">synchronized</span> (obj) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;老板5秒钟后做好包子&quot;</span></span><br><span class="line">								+<span class="string">&quot;告知顾客，包子可以吃了&quot;</span>);</span><br><span class="line">						obj.notify();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		th3.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="第九章、等待与唤醒机制"><a href="#第九章、等待与唤醒机制" class="headerlink" title="第九章、等待与唤醒机制"></a>第九章、等待与唤醒机制</h1><h2 id="9-1、线程之间的通信"><a href="#9-1、线程之间的通信" class="headerlink" title="9.1、线程之间的通信"></a>9.1、线程之间的通信</h2><p><strong>概念：</strong>多线程在处理同一个资源，但是处理的动作(线程任务)却不同。</p>
<p>比如：A线程是用来生产包子的，B线程是用来吃包子的。包子可以理解为同一资源，线程A和线程B处理的动作一个是生产，一个是消费。那么线程A和线程B之间就存在线程通信问题，大家也可以把他们理解成以后工作以后的合作，一个人做登陆，一个人做注册，一个人做购买，等等。所以线程之间也可以存在一个通信，称为合作。</p>
<h2 id="9-2、为什么要处理线程通信"><a href="#9-2、为什么要处理线程通信" class="headerlink" title="9.2、为什么要处理线程通信"></a>9.2、为什么要处理线程通信</h2><p>多线程并发执行时，在默认情况下cpu是随机切换线程的，当我们需要多个线程共同完成一个任务，并且我们希望他们有规律的去执行，那么多线程之间需要一些协调通信，以此来帮我们达到多线程共同操作一份数据。</p>
<h2 id="9-3、如何保证线程间通信有效利用资源"><a href="#9-3、如何保证线程间通信有效利用资源" class="headerlink" title="9.3、如何保证线程间通信有效利用资源"></a>9.3、如何保证线程间通信有效利用资源</h2><p>多个线程在处理同一个资源，并且任务不同时，需要线程通信来帮助解决线程之间对同一个变量的使用或操作，就说多个线程在操作同一个数据时，避免对同一变量的争夺，也就是我们需要通过一定的手段，使各个线程能有效的利用资源，而这种手段被称之为 – <strong>等待唤醒机制</strong>。</p>
<h2 id="9-4、等待唤醒机制"><a href="#9-4、等待唤醒机制" class="headerlink" title="9.4、等待唤醒机制"></a>9.4、等待唤醒机制</h2><p><strong>什么是等待唤醒机制</strong></p>
<p>这个是多个线程之间的一种<strong>协作</strong>机制，讲到线程，我们经常讲到的是线程之间的<strong>竞争</strong>(<strong>race</strong>),比如去争夺锁，但是这并不是故事的全部，线程之间也会有协作机制，就好比在公司里面，你和你的同事，你们之间就存在着晋升时的竞争，但是更多的时候，你们可能存在的时候，你们需要一起合作完成某些事情的一个合作关系。</p>
<p>就是在线程进行了规定的操作以后，就进入到一个等待状态（<strong>wait()</strong> ) ，等待其他线程完成执行完他们指定的代码过后，在将其唤醒（<strong>notify()</strong> )；在有多个线程进入等待以后，如果需要，可以使用 <strong>notifyAll()</strong> 来唤醒所有线程，</p>
<p><strong>wait/notify</strong>就是一种线程协作机制</p>
<p><strong>例子：</strong></p>
<p>我们用包子举例，等待与唤醒机制也被称作<strong>线程之间的通信</strong>。<strong>重点：有效的利用资源（生产包子，吃一个包子，在生产包子，吃一个包子。。。）</strong>这里的<strong>资源</strong>呢，指的就是包子（生产一个吃一个），</p>
<p><strong>重点解释：</strong></p>
<p>通信：对包子的状态进行判断（判断是否有包子，如果没有，吃包子线程则唤醒生产包子线程，吃包子线程等待，生产包子线程制作包子，做好包子之后修改包子状态，改为有包子；</p>
<p>有存在包子，生产包子线程则唤醒吃包子线程，生产包子线程等待，吃包子线程吃包子，吃完包子修改包子状态为没有）</p>
<p>他们可以反复执行，这也就叫做线程之间的通信，也被称之为等待和唤醒。</p>
<p>重点的是我们合理运用这个包子来判断到底是哪条线程在执行。</p>
<p>那等待与唤醒就要用到我们着几个方法</p>
<p><strong>等待唤醒中的方法</strong></p>
<p>等待唤醒机制就是用来解决线程之间的通信问题，使用到的3个方法的含义如下：</p>
<p>1、wait：线程不在活动，不在参与调度，进入wait set中，因此不会浪费<strong>CPU</strong>资源，也不会去竞争锁了，这个时候的线程即是<strong>WAITING</strong>状态，它还要等待别的线程执行一个<strong>特别的动作</strong>，也即是<strong>”通知“（ notify() ）</strong>在这个对象上等待的线程从wait set中释放出来，重新进入到调度队列中（ready quene）中。</p>
<p>2、notify：则选取所通知的对象的wait set中的一个线程释放，例如：餐厅有位置以后，等待最久的顾客优先入座。</p>
<p>3、notifyAll：则释放所通知对象的wait set上的全部线程</p>
<p><font color="red">注意：哪怕只通知了一个等待的线程，被通知的线程也不能立即恢复执行，因为它当初中断的地方是在同步块中，而此刻它已经不在持有锁，所以这个时候它需要再次尝试去获取锁，（很可能面临其他线程的竞争)成功以后才能调用wait方法之后的地方恢复执行。</font></p>
<p><strong>调用wait和notify所需要注意的细节</strong></p>
<p>1、wait和notify方法必须要由<strong>同一个锁对象</strong>调用，因为对应的锁对象可以通过notify唤醒<strong>使用同一个锁对象</strong>调用的wait方法后的线程</p>
<p>2、wait方法和notify方法都是属于Object类的方法，因为锁对象可以是任意对象，而任意对象的所属类都是继承了Object类</p>
<p>3、<strong>wait方法和notify方法必须使用在同步代码块或者是同步函数中使用</strong>，因为必须要通过锁对象才能调用者两个方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分析：需要哪些类</span></span><br><span class="line"><span class="comment"> * 		1、资源类：包子</span></span><br><span class="line"><span class="comment"> * 			设置包子的属性 ：皮   馅料  状态：1、有包子true 2、没包子false</span></span><br><span class="line"><span class="comment"> * 		2、生产者（包子铺)： 线程类可以继承Thread </span></span><br><span class="line"><span class="comment"> * 			设置线程任务（run)，重写run方法 -- 生产包子(对包子状态进行判断true或者false)</span></span><br><span class="line"><span class="comment"> * 			true:有包子，包子铺调用wait方法进入等待状态</span></span><br><span class="line"><span class="comment"> * 			false:没有包子，包子铺生产包子（可以增加趣味性，生产两种包子）</span></span><br><span class="line"><span class="comment"> * 			即有两种状态，(i%2==0)这样是不是就有两个状态了</span></span><br><span class="line"><span class="comment"> * 			包子铺生产好了包子修改状态为true</span></span><br><span class="line"><span class="comment"> * 			唤醒吃货线程，让吃货线程吃包子</span></span><br><span class="line"><span class="comment"> * 		   消费者（吃货）类：是一个线程类，可以继承Thread</span></span><br><span class="line"><span class="comment"> * 			设置线程任务（run），重写run方法 -- 吃包子(对包子的状态进行判断true或者false)</span></span><br><span class="line"><span class="comment"> *			false:没有包子，吃货线程调用wait方法，进入等待状态</span></span><br><span class="line"><span class="comment"> *			true:有包子，吃货吃包子，吃货吃完包子，修改包子的状态为false</span></span><br><span class="line"><span class="comment"> *			吃货唤醒包子线程，生产包子</span></span><br><span class="line"><span class="comment"> *		3、测试类：</span></span><br><span class="line"><span class="comment"> *			包含main方法的类，是程序执行的入口，启动程序</span></span><br><span class="line"><span class="comment"> *			创建包子对象，创建包子铺线程，开启</span></span><br><span class="line"><span class="comment"> *			创建吃货线程，开启</span></span><br><span class="line"><span class="comment"> */</span>	</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="9-5、生产者与消费者"><a href="#9-5、生产者与消费者" class="headerlink" title="9.5、生产者与消费者"></a>9.5、生产者与消费者</h2><p><strong>等待与唤醒机制，其实就是经典的生产者与消费者的问题</strong></p>
<p>就拿生产包子和消费包子来说等待唤醒机制如何有效的利用资源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">包子铺生产包子，吃货线程消费包子当。</span><br><span class="line">包子没有时（包子状态为false），吃货线程等待，包子铺线程生产包子（即包子状态为true），</span><br><span class="line">并通知吃货线程（解除吃货线程的等待状态），因为此时已经有包子了，那么包子铺线程进入等待状态。</span><br><span class="line">接下来，吃货线程能否进一步执行，取决于锁的获取情况，如果吃货获取到锁，那么就执行吃包子动作，</span><br><span class="line">包子吃完（包子状态为false），并通知包子铺线程（解除包子铺的等待状态），吃货线程进入等待，</span><br><span class="line">包子铺线程是否能够进一步执行，则取决于锁的获取情况</span><br></pre></td></tr></table></figure>

<p><strong>代码演示：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//包子类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="comment">//皮</span></span><br><span class="line">	String pi;（wrapper）</span><br><span class="line">	<span class="comment">//馅</span></span><br><span class="line">	String xian;（stuffing）</span><br><span class="line">	<span class="comment">//包子的状态为true或者false。设置初始值为false</span></span><br><span class="line">	<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	生产者（包子铺)： 线程类可以继承Thread </span></span><br><span class="line"><span class="comment"> 		设置线程任务（run)，重写run方法 -- 生产包子(对包子状态进行判断true或者false)</span></span><br><span class="line"><span class="comment"> 		true:有包子，包子铺调用wait方法进入等待状态</span></span><br><span class="line"><span class="comment"> 		false:没有包子，包子铺生产包子（可以增加趣味性，生产两种包子）</span></span><br><span class="line"><span class="comment"> 		即有两种状态，(i%2==0)这样是不是就有两个状态了</span></span><br><span class="line"><span class="comment"> 		包子铺生产好了包子修改状态为true</span></span><br><span class="line"><span class="comment"> 		唤醒吃货线程，让吃货线程吃包子</span></span><br><span class="line"><span class="comment"> 	注意：</span></span><br><span class="line"><span class="comment"> 		包子铺线程和包子线程关系 - 通信关系（互斥关系）</span></span><br><span class="line"><span class="comment"> 		必须同时同步技术保证两个线程只能有一个在执行</span></span><br><span class="line"><span class="comment"> 	锁对象必须保证唯一，可以使用包子对象作为锁对象。</span></span><br><span class="line"><span class="comment"> 	包子铺类和吃货类需要吧包子对象作为参数传递进来</span></span><br><span class="line"><span class="comment"> 		1、需要在成员位子创建一个包子变量</span></span><br><span class="line"><span class="comment"> 		2、使用带参数构造方法，为这个包子变量赋值</span></span><br><span class="line"><span class="comment"> 		</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//包子铺类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 1、需要定义在成员位置创建一个变量</span></span><br><span class="line">	<span class="keyword">private</span> Demo01 bz;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2、使用带参数构造方法，为这个包子变量赋值</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Demo02</span><span class="params">(Demo01 bz)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bz = bz;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置线程任务（run) 生产包子</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// 定义一个变量</span></span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">synchronized</span> (bz) &#123;</span><br><span class="line">				<span class="comment">// 对包子状态进行判断</span></span><br><span class="line">				<span class="keyword">if</span> (bz.flag == <span class="keyword">true</span>) &#123;</span><br><span class="line">					<span class="comment">// 包子铺调用wait方法进入等待状态</span></span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						bz.wait();</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 被唤醒之后执行，包子铺生产包子</span></span><br><span class="line">				<span class="comment">// 增加一些趣味性，交替产生两种包子</span></span><br><span class="line">				<span class="keyword">if</span> (count % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="comment">// 生产薄片包子</span></span><br><span class="line">					bz.pi = <span class="string">&quot;薄片&quot;</span>;</span><br><span class="line">					bz.xian = <span class="string">&quot;三鲜&quot;</span>;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="comment">// 生产厚皮，牛肉馅</span></span><br><span class="line">					bz.pi = <span class="string">&quot;厚皮&quot;</span>;</span><br><span class="line">					bz.xian = <span class="string">&quot;牛肉&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				count++;</span><br><span class="line">				System.out.println(<span class="string">&quot;包子铺正在生产&quot;</span> + bz.pi + bz.xian + <span class="string">&quot;包子&quot;</span>);</span><br><span class="line">				<span class="comment">// 生产包子需要3秒</span></span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">				&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">// 此时包子铺生产好了包子</span></span><br><span class="line">				<span class="comment">// 修改包子的状态为true</span></span><br><span class="line">				bz.flag = <span class="keyword">true</span>;</span><br><span class="line">				<span class="comment">// 唤醒吃货线程，让吃货线程吃包子</span></span><br><span class="line">				bz.notify();</span><br><span class="line">				System.out.println(<span class="string">&quot;包子铺已经生产好了：&quot;</span> + bz.pi + bz.xian + <span class="string">&quot;包子，吃货们可以开始吃了&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  消费者（吃货）类：是一个线程类，可以继承Thread</span></span><br><span class="line"><span class="comment">  		设置线程任务（run），重写run方法 -- 吃包子(对包子的状态进行判断true或者false)</span></span><br><span class="line"><span class="comment"> 		false:没有包子，吃货线程调用wait方法，进入等待状态</span></span><br><span class="line"><span class="comment"> 		true:有包子，吃货吃包子，吃货吃完包子，修改包子的状态为false</span></span><br><span class="line"><span class="comment"> 		吃货唤醒包子线程，生产包子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo03</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line">	<span class="comment">//1、需要在成员位置创建一个包子变量</span></span><br><span class="line">	<span class="keyword">private</span> Demo01 bz;</span><br><span class="line">	<span class="comment">//2、使用带参数的构造方法，为这个包子变量赋值</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Demo03</span><span class="params">(Demo01 bz)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bz = bz;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//设置线程任务（run)  吃包子</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">//使用死循环，让吃货一直吃包子</span></span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">			<span class="comment">//必须同时同步技术保证两个线程只能有一个在执行</span></span><br><span class="line">			<span class="keyword">synchronized</span> (bz) &#123;</span><br><span class="line">				<span class="comment">//对包子状态进行判断</span></span><br><span class="line">				<span class="keyword">if</span>(bz.flag == <span class="keyword">false</span>)&#123;</span><br><span class="line">					<span class="comment">//调用吃货的wait方法进入等待状态</span></span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						bz.wait();</span><br><span class="line">					&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">						e.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="comment">//被唤醒之后执行的代码，吃包子</span></span><br><span class="line">				System.out.println(<span class="string">&quot;吃货正在吃：&quot;</span> + bz.pi</span><br><span class="line">						+bz.xian +<span class="string">&quot;的包子&quot;</span>);</span><br><span class="line">				<span class="comment">//修改包子的状态为false </span></span><br><span class="line">				bz.flag = <span class="keyword">false</span>;</span><br><span class="line">				<span class="comment">//唤醒包子铺线程</span></span><br><span class="line">				bz.notify();</span><br><span class="line">				System.out.println(<span class="string">&quot;吃货已经把&quot;</span> +bz.pi + bz.xian</span><br><span class="line">					+<span class="string">&quot;的包子吃完了，包子铺开始生产包子&quot;</span>);</span><br><span class="line">				System.out.println(<span class="string">&quot;-----------------------&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**		</span></span><br><span class="line"><span class="comment"> * 3、测试类：</span></span><br><span class="line"><span class="comment"> *		包含main方法的类，是程序执行的入口，启动程序</span></span><br><span class="line"><span class="comment"> *		创建包子对象，创建包子铺线程，开启</span></span><br><span class="line"><span class="comment"> *		创建吃货线程，开启</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo04</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//创建包子对象：</span></span><br><span class="line">		Demo01 bz = <span class="keyword">new</span> Demo01();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建包子铺线程，开启，生产包子</span></span><br><span class="line">		Demo02 baozipu = <span class="keyword">new</span> Demo02(bz);</span><br><span class="line">		baozipu.start();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//创建吃货线程，开启，吃包子</span></span><br><span class="line">		Demo03 chibaozi = <span class="keyword">new</span> Demo03(bz);</span><br><span class="line">		chibaozi.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第十章、线程池"><a href="#第十章、线程池" class="headerlink" title="第十章、线程池"></a>第十章、线程池</h1><h2 id="10-1、线程池思想概念"><a href="#10-1、线程池思想概念" class="headerlink" title="10.1、线程池思想概念"></a>10.1、线程池思想概念</h2><p>我们使用线程的时候就去创建一个线程，这样实现起来非常简单，但是就会有这样的一个问题：</p>
<p>如果兵法的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁的创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。</p>
<p>那么有没有一种办法可以使线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务？</p>
<p>在Java中可以通过线程池来达到这样的效果，今天我们就来详细讲解一下Java线程池</p>
<h2 id="10-2、线程池概念"><a href="#10-2、线程池概念" class="headerlink" title="10.2、线程池概念"></a>10.2、线程池概念</h2><ul>
<li>线程池：其实就是一个容纳多个线程的容器，其中的线程可以反复使用，省去了频繁创建线程对象的操作，无需反复创建线程而消耗过多资源。</li>
</ul>
<p>由于线程池中有很多操作都是与优化资源相关的，我们在这里就不多叙述，我们通过一张图来了解线程的工作原理</p>
<p>线程池可以理解成一个容器，容器我们可以理解成什么？是不是可以理解成一个集合(ArrayList，HashSet，LinkedList，HashMap)这里我们可以用什么呢？是不是可以用一个LinkedList也可以用ArrayList集合这些集合的泛型就放什么呢，就放我们的线程。所以这个线程池实际上就是我们的集合就是我们的容器。</p>
<p>我们来画个图，来理解一下线程池的概念。在这里面创建一下线程到我们的集合中来</p>
<p>使用add方法添加线程</p>
<ol>
<li><p>当程序第一次启动的时候，我们可以创建多个线程，保存到一个集合中</p>
</li>
<li><p>当我们想要使用线程的时候，就可以从集合中取出线程来使用</p>
</li>
<li><p>Thread th1 = list.remove(0) :返还的是被移除的元素（线程只能被 一个任务使用）</p>
</li>
<li><p>如果使用Thread th2 =  LinkedList.removeFirest()</p>
</li>
<li><p>当使用线程需要把线程归还给线程池</p>
</li>
<li><p>list.add(th1);</p>
</li>
<li><p>Linked.addLast(th2); </p>
</li>
<li><p>所以线程里面有一个叫做队列的东西。依次拿出线程使用</p>
</li>
</ol>
<p>在JDK1.5以后，JDK内置了线程池，我们可以直接使用。</p>
<p>这就是线程池的原理</p>
<p>合理利用线程池能够带来三个好处：</p>
<ol>
<li><p>降低资源消耗，减少了创建和销毁线程的次数，每个工作线程都可以被重复利用，可执行多个任务</p>
</li>
<li><p>提高相应速度，当任务到达时，任务可以不需要的等到线程创建就可以立即执行</p>
</li>
<li><p>提高线程的可管理性，可以根据系统的承受能力，调整线程池中工作线程的数目，防止因为消耗过多的内存，而把服务器累趴下（每个线程需要大约1MB，线程开的越多，消耗的内存也就越大，最后死机）</p>
</li>
</ol>
<h2 id="10-3、线程池的使用"><a href="#10-3、线程池的使用" class="headerlink" title="10.3、线程池的使用"></a>10.3、线程池的使用</h2><p>Java里面线程池的顶级接口是java.util.concurrent,Executor,但是严格意义上来说Executor并不是一个线程池，而是一个执行线程的工具。真正的线程池接口是java.util.concurrent.ExecutorService。要配置一个线程池是比较复杂的，尤其是对于线程池的原理并不是很清楚的情况下，很有可能配置的线程池不是比较优的。因此在java.util.concurrent.Executors线程工程类里面提供了一些镜头工厂，生成一些常用的线程池，官方建议使用Executors工程类来创建线程池对象</p>
<p>Executors类中有个创建线程池的方法如下：</p>
<ul>
<li>public static ExecutorService newFixedThreadPool(int nThreads):返回线程池对象（创建的是有界线的线程池，也就是线程池中的线程个数可以指定最大数量）</li>
</ul>
<p>获取到一个线程池ExecutorService，那怎么使用呢，在这里定义了一个使用线程池对象的方法如下：</p>
<ul>
<li>public Future&lt;?&gt; submit(Runnable task)：获取线程池的某一个对象并执行</li>
<li>Future接口：用来记录线程任务执行完毕后产生的结果，线程池创建与使用。</li>
</ul>
<p>使用线程池中线程对象的步骤：</p>
<ol>
<li><p>创建线程池对象</p>
</li>
<li><p>创建Runnable接口子类对象（task）</p>
</li>
<li><p>提交Runnable接口子类对象。（task task）</p>
</li>
<li><p>关闭线程池（一般不做）</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> 	线程池：JDK1.5以后提供的</span></span><br><span class="line"><span class="comment"> 	在java.util.concurrent.Executors</span></span><br><span class="line"><span class="comment"> 	线程池工厂类，用来生产线程池</span></span><br><span class="line"><span class="comment"> 	Executors有个静态方法 -- 生产线程池的方法</span></span><br><span class="line"><span class="comment"> 	static ExecutorService newFicedThreadPool(int nThreads)</span></span><br><span class="line"><span class="comment"> 	创建一个可重用固定线程数的线程池</span></span><br><span class="line"><span class="comment"> 	参数：</span></span><br><span class="line"><span class="comment"> 		int nThreads:创建线程池中包含的线程数量</span></span><br><span class="line"><span class="comment"> 	返回值:</span></span><br><span class="line"><span class="comment"> 		ExecutorService接口，返回的是ExecutorService</span></span><br><span class="line"><span class="comment"> 		接口的实现类对象，我们可以使用ExecutorService接口接收（面向接口编程)</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 	java.util.concurrent.ExectorService:线程池接口</span></span><br><span class="line"><span class="comment"> 		用来从线程池中获取线程，调用start方法，执行线程任务</span></span><br><span class="line"><span class="comment"> 			submit（Runnable task) 提交一个Runnable任务用于执行</span></span><br><span class="line"><span class="comment"> 			</span></span><br><span class="line"><span class="comment"> 		关闭/消耗线程池的方法</span></span><br><span class="line"><span class="comment"> 			shutdown()</span></span><br><span class="line"><span class="comment"> 			</span></span><br><span class="line"><span class="comment"> 		线程池的使用步骤：</span></span><br><span class="line"><span class="comment"> 		1、使用线程池的工厂类Executors里面提供的静态方法newFixedThreadPool</span></span><br><span class="line"><span class="comment"> 		生产一个执行线程数量的线程池</span></span><br><span class="line"><span class="comment"> 		2、创建一个类，实现Runnable接口，重写run方法，设置线程任务</span></span><br><span class="line"><span class="comment"> 		3、调用ExectorService中的方法submit，传递线程任务(实现类），开启线程，执行run方法</span></span><br><span class="line"><span class="comment"> 		4、调用ExectorService中的方法shutdown销毁线程池（不建议使用）</span></span><br><span class="line"><span class="comment"> 		注意：我们使用线程池的目的是为了反复使用，销毁了就没了对吧。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//1、使用线程池的工厂类Executors里面提供的静态方法newFixedThreadPool</span></span><br><span class="line"><span class="comment">// 		生产一个执行线程数量的线程池</span></span><br><span class="line">		ExecutorService es = Executors.newFixedThreadPool(<span class="number">2</span>);</span><br><span class="line">		</span><br><span class="line"><span class="comment">//		3、调用ExectorService中的方法submit，传递线程任务(实现类），开启线程，执行run方法</span></span><br><span class="line">		es.submit(<span class="keyword">new</span> RunnableImpl());</span><br><span class="line"><span class="comment">//		线程池会一直开启，使用完了线程，会自动把线程归还给线程池，线程池可以继续使用</span></span><br><span class="line">		es.submit(<span class="keyword">new</span> RunnableImpl());<span class="comment">//pool-1-thread-1创建了一个新的线程</span></span><br><span class="line">		es.submit(<span class="keyword">new</span> RunnableImpl());<span class="comment">//pool-1-thread-2创建了一个新的线程</span></span><br><span class="line"><span class="comment">//		4、调用ExectorService中的方法shutdown销毁线程池（不建议使用）</span></span><br><span class="line">		es.shutdown();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//线程池被销毁了，便不能在执行了。会抛出异常</span></span><br><span class="line">    <span class="comment">//不能在获取线程</span></span><br><span class="line">		es.submit(<span class="keyword">new</span> RunnableImpl());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunnableImpl</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">			<span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">				System.out.println(Thread.currentThread().getName()+<span class="string">&quot;:&quot;</span>+i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaSe进阶项目——图书管理系统</title>
    <url>/2021/08/20/JavaSe%E8%BF%9B%E9%98%B6%E9%A1%B9%E7%9B%AE%E2%80%94%E2%80%94%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="一、图书管理系统需求分析"><a href="#一、图书管理系统需求分析" class="headerlink" title="一、图书管理系统需求分析"></a>一、图书管理系统需求分析</h1><h2 id="一、背景分析"><a href="#一、背景分析" class="headerlink" title="一、背景分析"></a>一、背景分析</h2><p>​            一直以来人们使用传统的人工方式管理图书资料。这种方式存在着许多缺点，如效率低、保密性差且较为繁琐。图书管理作为计算机应用的一个分支，有着手工管理无法比拟的优点，如检索迅速、查找方便、可靠性高、存储量大、保密性好、寿命长、成本低等。这些优点能够极大地提高图书管理的效率。因此，开发一套能够为用户提供充足的信息和快捷的查询手段的图书管理系统，将是非常必要的，也是十分及时的。</p>
<h2 id="二、功能模块分析"><a href="#二、功能模块分析" class="headerlink" title="二、功能模块分析"></a>二、功能模块分析</h2><p><img src="https://img-blog.csdnimg.cn/07ff6501e29a43a6804893b3f831de23.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="功能模块"></p>
<p>上图为图书馆管理系统的功能模块概览，该图书馆管理系统主要分为两大模块：</p>
<h3 id="一、管理员模块"><a href="#一、管理员模块" class="headerlink" title="一、管理员模块"></a>一、管理员模块</h3><h4 id="1-1、用户管理"><a href="#1-1、用户管理" class="headerlink" title="1.1、用户管理"></a>1.1、用户管理</h4><table>
<thead>
<tr>
<th>模块功能</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td>管理员登录</td>
<td align="center">用户输入用户名和密码进行登录，并作出相应提示，登录的同时需要对其身份进行验证，判断此用户为管理员还是普通账户，如果为管理员，则跳转到管理员界面，如果为普通用户则跳转到普通用户界面。</td>
</tr>
<tr>
<td>管理员添加</td>
<td align="center">在管理员界面，管理员选择管理员添加操作，可进行管理员添加，添加时需要进行重名检测。</td>
</tr>
<tr>
<td>普通用户列表查询</td>
<td align="center">选择普通用户列表查询，可查询所有已经注册的普通用户的基本信息列表（密码等隐私信息不可显示）。</td>
</tr>
<tr>
<td>用户账户禁用与开启</td>
<td align="center">管理员可对指定的普通用户进行账号禁用和开启操作，用户账号禁用后则不能进行登录。</td>
</tr>
</tbody></table>
<h4 id="1-2、书籍管理"><a href="#1-2、书籍管理" class="headerlink" title="1.2、书籍管理"></a>1.2、书籍管理</h4><table>
<thead>
<tr>
<th>模块功能</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td>书籍添加</td>
<td align="center">管理员在书籍管理界面进行书籍的添加，书籍添加时，书籍名可以重复，但是需要书籍编号作为主键。<br/>添书籍基础信息时，要指定此书籍的类别编号，可单独定义一张书籍类别表和书籍表关联，但是此类别表事先定义好数据，不作任何修改。</td>
</tr>
<tr>
<td>书籍删除</td>
<td align="center">管理员通过书籍编号可对指定的书籍进行删除，前提是这本书处于无人借阅状态，否则删除失败。</td>
</tr>
<tr>
<td>书籍修改</td>
<td align="center">管理员通过书籍编号可对指定书籍的信息进修改。</td>
</tr>
<tr>
<td>书籍列表查询</td>
<td align="center">进行书籍列表查询时，需要管理员选择要查询的字段（如书籍名、书籍作者、书籍类型），查询时都是进行模糊查询。</td>
</tr>
<tr>
<td>书籍详情查看</td>
<td align="center">根据书籍编号进行书籍详细信息显示。</td>
</tr>
</tbody></table>
<h3 id="二、普通用户模块"><a href="#二、普通用户模块" class="headerlink" title="二、普通用户模块"></a>二、普通用户模块</h3><h4 id="2-1、用户个人信息管理"><a href="#2-1、用户个人信息管理" class="headerlink" title="2.1、用户个人信息管理"></a>2.1、用户个人信息管理</h4><table>
<thead>
<tr>
<th>模块功能</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td>用户登录</td>
<td align="center">用户输入用户名和密码进行登录，并作出相应提示，登录的同时需要对其身份进行验证，判断此用户为管理员还是普通账户，如果为管理员，则跳转到管理员界面，如果为普通用户则跳转到普通用户界面。</td>
</tr>
<tr>
<td>用户注册</td>
<td align="center">普通使用此图书馆平台时，需要进行用户注册，注册时，需要对用户名进行重名检测。</td>
</tr>
<tr>
<td>个人基础信息查询</td>
<td align="center">用户登录后，可查询当前用户的基础信息（不包含密码等敏感信息）。</td>
</tr>
<tr>
<td>个人基础信息修改</td>
<td align="center">用户登录后，可对当前基础信息进行修改，用户名不可修改。</td>
</tr>
<tr>
<td>密码修改</td>
<td align="center">修改密码等敏感信息，需要单独用页面进行，修改时，需要用输入原始密码进行验证。</td>
</tr>
</tbody></table>
<h4 id="2-2、书籍管理"><a href="#2-2、书籍管理" class="headerlink" title="2.2、书籍管理"></a>2.2、书籍管理</h4><table>
<thead>
<tr>
<th>模块功能</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td>书籍列表查询</td>
<td align="center">进行书籍列表查询时，需要用户选择要查询的字段（如书籍名、书籍作者、书籍类型），查询时都是进行模糊查询。</td>
</tr>
<tr>
<td>书籍详细查询</td>
<td align="center">用户通过输入书籍编号，查询当前书籍的详细信息。</td>
</tr>
<tr>
<td>书籍借阅</td>
<td align="center">用户通过输入书籍编号进行相应书籍借阅，每次借阅行为只能借阅一本书籍。借阅时，如果此书籍状态为不可借阅，则借阅失败；如果此书籍库存数量为0，则借阅失败；借阅成功，则当前书籍库存数量为-1。</td>
</tr>
<tr>
<td>书籍归还</td>
<td align="center">在书籍归还界面，用书输入要归还的书籍编号进行书籍归还，然后将相应书籍的借阅状态修改成已归还，并将相关书籍的库存数量+1。</td>
</tr>
<tr>
<td>个人借阅历史</td>
<td align="center">通过此界面可查看自己借阅过的书籍列表，显示时按照借阅时间排序，并且显示此书籍的借阅状态（已归还、借阅中）</td>
</tr>
</tbody></table>
<h2 id="三、表结构"><a href="#三、表结构" class="headerlink" title="三、表结构"></a>三、表结构</h2><h3 id="1、用户表（t-user"><a href="#1、用户表（t-user" class="headerlink" title="1、用户表（t_user)"></a>1、用户表（t_user)</h3><table>
<thead>
<tr>
<th align="center">字段名</th>
<th align="center">数据类型</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">user_id</td>
<td align="center">int</td>
<td align="center">用户id，主键</td>
</tr>
<tr>
<td align="center">user_name</td>
<td align="center">varchar</td>
<td align="center">用户名，唯一，非空</td>
</tr>
<tr>
<td align="center">password</td>
<td align="center">varchar</td>
<td align="center">用户密码，非空</td>
</tr>
<tr>
<td align="center">age</td>
<td align="center">int</td>
<td align="center">年龄</td>
</tr>
<tr>
<td align="center">gender</td>
<td align="center">varchar</td>
<td align="center">性别</td>
</tr>
<tr>
<td align="center">phone</td>
<td align="center">varchar</td>
<td align="center">电话号码</td>
</tr>
<tr>
<td align="center">address</td>
<td align="center">varchar</td>
<td align="center">地址</td>
</tr>
<tr>
<td align="center">user_state</td>
<td align="center">int</td>
<td align="center">用户账号状态：  0：正常 ， 1：禁用</td>
</tr>
<tr>
<td align="center">role</td>
<td align="center">int</td>
<td align="center">用户性质：0：管理员，1：普通用户</td>
</tr>
</tbody></table>
<h3 id="2、书籍表（t-book）"><a href="#2、书籍表（t-book）" class="headerlink" title="2、书籍表（t_book）"></a>2、书籍表（t_book）</h3><table>
<thead>
<tr>
<th align="center">字段名</th>
<th align="center">数据类型</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">book_id</td>
<td align="center">int</td>
<td align="center">书籍编号，主键</td>
</tr>
<tr>
<td align="center">book_name</td>
<td align="center">varchar</td>
<td align="center">书籍名，非空</td>
</tr>
<tr>
<td align="center">book_author</td>
<td align="center">varchar</td>
<td align="center">书籍作者，非空</td>
</tr>
<tr>
<td align="center">book_num</td>
<td align="center">int</td>
<td align="center">书籍库存数量，非空</td>
</tr>
<tr>
<td align="center">book_category</td>
<td align="center">int</td>
<td align="center">书籍类别，该字段值和书籍类别表中的类别编号，非空</td>
</tr>
<tr>
<td align="center">book_state</td>
<td align="center">int</td>
<td align="center">书籍是否可借阅状态：  0：可借阅 ， 1：不可借阅</td>
</tr>
</tbody></table>
<h3 id="3、书籍类别表（book-category）"><a href="#3、书籍类别表（book-category）" class="headerlink" title="3、书籍类别表（book_category）"></a>3、书籍类别表（book_category）</h3><table>
<thead>
<tr>
<th align="center">字段名</th>
<th align="center">数据类型</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">category_id</td>
<td align="center">int</td>
<td align="center">书籍类别编号，主键</td>
</tr>
<tr>
<td align="center">category_name</td>
<td align="center">varchar</td>
<td align="center">书籍类别名，非空（如政治、军事、体育、经济等）</td>
</tr>
</tbody></table>
<h3 id="4、借阅信息表（t-borrowing-info）"><a href="#4、借阅信息表（t-borrowing-info）" class="headerlink" title="4、借阅信息表（t_borrowing_info）"></a>4、借阅信息表（t_borrowing_info）</h3><table>
<thead>
<tr>
<th align="center">字段名</th>
<th align="center">数据类型</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">borrowing_info_id</td>
<td align="center">int</td>
<td align="center">当前这条借阅数据的id，主键，  用户每借阅一本书籍时，会在当前借阅表中生成一条数据</td>
</tr>
<tr>
<td align="center">user_id</td>
<td align="center">int</td>
<td align="center">发生借阅行为的用户id，非空</td>
</tr>
<tr>
<td align="center">book_id</td>
<td align="center">int</td>
<td align="center">被借阅的书籍的id，非空</td>
</tr>
<tr>
<td align="center">borrowing_state</td>
<td align="center">int</td>
<td align="center">借阅状态：  0：借阅中  1：已归还</td>
</tr>
<tr>
<td align="center">borrowing_time</td>
<td align="center">datetime</td>
<td align="center">借阅时间</td>
</tr>
<tr>
<td align="center">giveback_time</td>
<td align="center">datetime</td>
<td align="center">归还书籍时间，初始为空，归还书籍后，显示最后还书时间</td>
</tr>
</tbody></table>
<h1 id="二、MVC设计模式"><a href="#二、MVC设计模式" class="headerlink" title="二、MVC设计模式"></a>二、MVC设计模式</h1><p>​        MVC 模式（Model–view–controller）是软件工程中的一种软件架构模式，它把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。</p>
<p>​        MVC 模式的目的是实现一种动态的程序设计，简化后续对程序的修改和扩展，并且使程序某一部分的重复利用成为可能。除此之外，MVC 模式通过对复杂度的简化，使程序的结构更加直观。软件系统在分离了自身的基本部分的同时，也赋予了各个基本部分应有的功能。专业人员可以通过自身的专长进行相关的分组：</p>
<ul>
<li>模型（Model）：程序员编写程序应有的功能（实现算法等等）、数据库专家进行数据管理和数据库设计(可以实现具体的功能)；</li>
<li>控制器（Controller）：负责转发请求，对请求进行处理；</li>
<li>视图（View）：界面设计人员进行图形界面设计。</li>
</ul>
<p><strong>MVC 模式的图形描述如下</strong>：</p>
<p><img src="https://img-blog.csdnimg.cn/dd2db3e06e8c421b9b4623f2b08ea5ad.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="MVC图解"><br><strong>MVC模式中三个组件的详细介绍如下</strong>：</p>
<ul>
<li>模型（Model）：用于封装与应用程序的业务逻辑相关的数据以及对数据的处理方法。“Model”有对数据直接访问的权力，例如对数据库的访问。“Model”不依赖“View”和“Controller”，也就是说， Model 不关心它会被如何显示或是如何被操作。但是 Model 中数据的变化一般会通过一种刷新机制被公布。为了实现这种机制，那些用于监视此 Model 的 View 必须事先在此 Model 上注册，由此，View 可以了解在数据 Model 上发生的改变。（比如：观察者模式（软件设计模式））；</li>
<li>视图（View）：能够实现数据有目的的显示（理论上，这不是必需的）。在 View 中一般没有程序上的逻辑。为了实现 View 上的刷新功能，View 需要访问它监视的数据模型（Model），因此应该事先在被它监视的数据那里注册；</li>
<li>控制器（Controller）：起到不同层面间的组织作用，用于控制应用程序的流程。它处理事件并作出响应。“事件”包括用户的行为和数据 Model 上的改变。</li>
</ul>
<p>从MVC模式的一般理解来看，视图层与模型层是存在直接联系的，并且模型层的变化会通过视图层反映出来，这确实是MVC模式的标准理解，不过在我目前接触到的实际应用中，更多的情况时，视图层与模型层是通过控制层联系起来的，两者之间并无直接的联系，三者之间的关系更类似下图所示：</p>
<p><img src="https://img-blog.csdnimg.cn/dad9eb29162649f48c56afc57c66453f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="MVC图解"><br>结合MVC模式的标准解释来看，上述模式可能是MVC模式的一种变型使用。</p>
<h1 id="三、实际开发"><a href="#三、实际开发" class="headerlink" title="三、实际开发"></a>三、实际开发</h1><h2 id="一、项目结构介绍"><a href="#一、项目结构介绍" class="headerlink" title="一、项目结构介绍"></a>一、项目结构介绍</h2><p>首先先看一下我的项目结构：<br><img src="https://img-blog.csdnimg.cn/b11a3a2b689b4d17bb46beadafcfca3f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="目录结构一"><img src="https://img-blog.csdnimg.cn/7cd50eac21ed4b8aade0892ffe3a4337.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="目录结构二"><br><strong>项目各包作用</strong>：</p>
<table>
<thead>
<tr>
<th align="center">包名</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">lib</td>
<td align="center">根据mysql版本下载的数据库连接器<br>具体下载地址为：<a href="https://mvnrepository.com/artifact/mysql/mysql-connector-java">https://mvnrepository.com/artifact/mysql/mysql-connector-java</a></td>
</tr>
<tr>
<td align="center">util</td>
<td align="center">存放了工具包，此项目中具体存放了Jdbc工具类</td>
</tr>
<tr>
<td align="center">cn.egret</td>
<td align="center">存放所有项目文件的总包</td>
</tr>
<tr>
<td align="center">dao</td>
<td align="center">存放和数据库交互的Java文件</td>
</tr>
<tr>
<td align="center">entity</td>
<td align="center">存放实体类</td>
</tr>
<tr>
<td align="center">service</td>
<td align="center">进一步封装了dao包的工具函数，引用dao包的函数</td>
</tr>
<tr>
<td align="center">各impl包</td>
<td align="center">存放了各包接口的实现类</td>
</tr>
<tr>
<td align="center">controller</td>
<td align="center">存放了控制器类，具体封装了各功能函数（如登录、注册等）</td>
</tr>
<tr>
<td align="center">page</td>
<td align="center">存放了各主要页面</td>
</tr>
<tr>
<td align="center">smallPage</td>
<td align="center">存放了小页面（面板）</td>
</tr>
<tr>
<td align="center">smallPage.admin</td>
<td align="center">存放了管理员界面的小页面</td>
</tr>
<tr>
<td align="center">smallPage.common</td>
<td align="center">存放了普通用户界面的小页面</td>
</tr>
<tr>
<td align="center">test</td>
<td align="center">存放了dao包各函数的测试类</td>
</tr>
</tbody></table>
<h2 id="二、开发流程"><a href="#二、开发流程" class="headerlink" title="二、开发流程"></a>二、开发流程</h2><h3 id="一、创建数据库"><a href="#一、创建数据库" class="headerlink" title="一、创建数据库"></a>一、创建数据库</h3><p>利用Navicat Premium 15新建数据库library，然后根据需求设计各表，最终效果如下图所示：<br><img src="https://img-blog.csdnimg.cn/89b243dd96d24a50aca8a977fda783c7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="数据库"><br>以下是数据库设计代码，由Navicat Premium 15自动生成，可保存后在自己的数据库中运行，便可得到以上各表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> Navicat Premium Data Transfer</span><br><span class="line"></span><br><span class="line"> Source Server         : localhost_3306</span><br><span class="line"> Source Server Type    : MySQL</span><br><span class="line"> Source Server Version : 80017</span><br><span class="line"> Source Host           : localhost:3306</span><br><span class="line"> Source Schema         : library</span><br><span class="line"></span><br><span class="line"> Target Server Type    : MySQL</span><br><span class="line"> Target Server Version : 80017</span><br><span class="line"> File Encoding         : 65001</span><br><span class="line"></span><br><span class="line"> Date: 29/07/2021 21:18:41</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for book_category</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `book_category`;</span><br><span class="line">CREATE TABLE `book_category`  (</span><br><span class="line">  `category_id` int(11) NOT NULL COMMENT &#x27;书籍类别编号，主键&#x27;,</span><br><span class="line">  `category_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT &#x27;书籍类别名，非空（如政治、军事、体育、经济等）&#x27;,</span><br><span class="line">  PRIMARY KEY (`category_id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of book_category</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `book_category` VALUES (1, &#x27;政治&#x27;);</span><br><span class="line">INSERT INTO `book_category` VALUES (2, &#x27;计算机科学&#x27;);</span><br><span class="line">INSERT INTO `book_category` VALUES (3, &#x27;文学&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_book</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_book`;</span><br><span class="line">CREATE TABLE `t_book`  (</span><br><span class="line">  `book_id` int(11) NOT NULL COMMENT &#x27;书籍编号，主键&#x27;,</span><br><span class="line">  `book_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT &#x27;书籍名，非空&#x27;,</span><br><span class="line">  `book_author` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT &#x27;书籍作者，非空&#x27;,</span><br><span class="line">  `book_num` int(11) NOT NULL COMMENT &#x27;书籍库存数量，非空&#x27;,</span><br><span class="line">  `book_category` int(255) NOT NULL COMMENT &#x27;书籍类别，该字段值和书籍类别表中的类别编号，非空&#x27;,</span><br><span class="line">  `book_state` int(255) NOT NULL COMMENT &#x27;书籍是否可借阅状态：0：可借阅  ， 1：不可借阅&#x27;,</span><br><span class="line">  PRIMARY KEY (`book_id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_book</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_book` VALUES (1, &#x27;操作系统&#x27;, &#x27;王五&#x27;, 3, 2, 0);</span><br><span class="line">INSERT INTO `t_book` VALUES (2, &#x27;计算机组成原理&#x27;, &#x27;王五&#x27;, 1, 2, 0);</span><br><span class="line">INSERT INTO `t_book` VALUES (3, &#x27;世界政治&#x27;, &#x27;佚名&#x27;, 2, 1, 0);</span><br><span class="line">INSERT INTO `t_book` VALUES (4, &#x27;红色革命&#x27;, &#x27;伟人&#x27;, 1, 1, 0);</span><br><span class="line">INSERT INTO `t_book` VALUES (5, &#x27;愤青的那些事&#x27;, &#x27;愤青&#x27;, 3, 3, 0);</span><br><span class="line">INSERT INTO `t_book` VALUES (6, &#x27;爱恨别离伤春秋&#x27;, &#x27;有情人&#x27;, 3, 3, 0);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_borrowing_info</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_borrowing_info`;</span><br><span class="line">CREATE TABLE `t_borrowing_info`  (</span><br><span class="line">  `borrowing_info_id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;当前这条借阅数据的id，主键，\r\n用户每借阅一本书籍时，会在当前借阅表中生成一条数据\r\n当前这条借阅数据的id，主键，用户每借阅一本书籍时，会在当前借阅表中生成一条数据&#x27;,</span><br><span class="line">  `user_id` int(11) NOT NULL COMMENT &#x27;发生借阅行为的用户id，非空&#x27;,</span><br><span class="line">  `book_id` int(11) NOT NULL COMMENT &#x27;被借阅的书籍的id，非空&#x27;,</span><br><span class="line">  `borrowing_state` int(11) NOT NULL COMMENT &#x27;借阅状态：0：借阅中    1：已归还&#x27;,</span><br><span class="line">  `borrowing_time` datetime NOT NULL COMMENT &#x27;借阅时间&#x27;,</span><br><span class="line">  `giveback_time` datetime NULL DEFAULT NULL COMMENT &#x27;归还书籍时间，初始为空，归还书籍后，显示最后还书时间&#x27;,</span><br><span class="line">  PRIMARY KEY (`borrowing_info_id`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_borrowing_info</span><br><span class="line">-- ----------------------------</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for t_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `t_user`;</span><br><span class="line">CREATE TABLE `t_user`  (</span><br><span class="line">  `user_id` int(11) NOT NULL AUTO_INCREMENT COMMENT &#x27;用户id，主键&#x27;,</span><br><span class="line">  `user_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT &#x27;用户名，唯一，非空&#x27;,</span><br><span class="line">  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT &#x27;用户密码，非空&#x27;,</span><br><span class="line">  `age` int(11) NULL DEFAULT NULL COMMENT &#x27;年龄&#x27;,</span><br><span class="line">  `gender` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT &#x27;性别&#x27;,</span><br><span class="line">  `phone` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT &#x27;电话号码&#x27;,</span><br><span class="line">  `address` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT &#x27;地址&#x27;,</span><br><span class="line">  `user_state` int(11) NOT NULL COMMENT &#x27;用户账号状态：\r\n0：正常 ， 1：禁用\r\n用户账号状态：\r\n0：正常 ， 1：禁用\r\n用户账号状态：0：正常 ， 1：禁用&#x27;,</span><br><span class="line">  `role` int(11) NOT NULL COMMENT &#x27;用户性质：0：管理员，1：普通用户&#x27;,</span><br><span class="line">  PRIMARY KEY (`user_id`) USING BTREE,</span><br><span class="line">  UNIQUE INDEX `user_name`(`user_name`) USING BTREE</span><br><span class="line">) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = DYNAMIC;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of t_user</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `t_user` VALUES (1, &#x27;张三&#x27;, &#x27;123456&#x27;, 18, &#x27;男&#x27;, &#x27;123123&#x27;, &#x27;厦门&#x27;, 0, 1);</span><br><span class="line">INSERT INTO `t_user` VALUES (2, &#x27;李四&#x27;, &#x27;123456&#x27;, 19, &#x27;女&#x27;, &#x27;456456&#x27;, &#x27;江苏&#x27;, 0, 1);</span><br><span class="line">INSERT INTO `t_user` VALUES (3, &#x27;admin&#x27;, &#x27;111111&#x27;, 9999, &#x27;未知&#x27;, &#x27;未知&#x27;, &#x27;互联网&#x27;, 0, 0);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="二、添加数据库连接器"><a href="#二、添加数据库连接器" class="headerlink" title="二、添加数据库连接器"></a>二、添加数据库连接器</h3><p>在项目中新建lib文件夹，然后在网上下载和自己mysql数据库相对应的连接器，放到lib文件夹中，然后右击连接器文件—&gt;Build Path—&gt;Add to Build Path<br><img src="https://img-blog.csdnimg.cn/6fb88858210a4c7a99b519d5ff14e581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="添加连接器"></p>
<h3 id="三、创建文件jdbc-properties"><a href="#三、创建文件jdbc-properties" class="headerlink" title="三、创建文件jdbc.properties"></a>三、创建文件jdbc.properties</h3><p>新建文件jdbc.properties，在里面填上以下内容：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/library?useUnicode=true&amp;characterEncoding=UTF-8&amp;userSSL=true&amp;serverTimezone=UTC </span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root #数据库账户</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456 #数据库密码</span></span><br></pre></td></tr></table></figure>



<h3 id="四、创建工具类JdbcUtil-java"><a href="#四、创建工具类JdbcUtil-java" class="headerlink" title="四、创建工具类JdbcUtil.java"></a>四、创建工具类JdbcUtil.java</h3><p>在util包中新建工具类JdbcUtil.java，以下为代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">static</span> &#123;</span><br><span class="line">		<span class="comment">// 读取资源文件,获取值</span></span><br><span class="line">		<span class="comment">// 创建properties集合类</span></span><br><span class="line">		Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">// 获取src路径下的文件的⽅式---&gt;ClassLoader 类加载器</span></span><br><span class="line">			ClassLoader classLoader = JdbcUtil.class.getClassLoader();</span><br><span class="line"></span><br><span class="line">			<span class="comment">// URL表示统⼀资源标识符</span></span><br><span class="line">			URL res = classLoader.getResource(<span class="string">&quot;jdbc.properties&quot;</span>);</span><br><span class="line">			String path = res.getPath();</span><br><span class="line">			System.out.println(path);</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 2. 加载文件</span></span><br><span class="line">			properties.load(<span class="keyword">new</span> FileReader(path));</span><br><span class="line">			url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">			username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">			password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">			driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">			Class.forName(driver);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 获取连接</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> 连接对象</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * DML操作（增删改） 1.获取连接数据库对象 2.预处理 3.执行更新操作</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="comment">// 调用者只需传入一个sql语句，和一个Object数组。该数组存储的是SQL语句中的占位符</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">executeUpdate</span><span class="params">(String sql, Object... obj)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		Connection con = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con = getConnection(); <span class="comment">// 调用getConnection()方法连接数据库</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ps = con.prepareStatement(sql);<span class="comment">// 预处理</span></span><br><span class="line"></span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; obj.length; i++) &#123;<span class="comment">// 预处理声明占位符</span></span><br><span class="line">				ps.setObject(i + <span class="number">1</span>, obj[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">int</span> count = ps.executeUpdate();<span class="comment">// 执行更新操作</span></span><br><span class="line">			</span><br><span class="line">			<span class="keyword">if</span>(count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">			close(<span class="keyword">null</span>, ps, con);<span class="comment">// 调用close()方法关闭资源</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/***</span></span><br><span class="line"><span class="comment">	 * DQL查询 Result获取数据集</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> sql</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> obj</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> List&lt;Map&lt;String, Object&gt;&gt; executeQuery(String sql, Object... obj) &#123;</span><br><span class="line">		Connection con = <span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con = getConnection();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e1.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">		PreparedStatement ps = <span class="keyword">null</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ps = con.prepareStatement(sql);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; obj.length; i++) &#123;</span><br><span class="line">				ps.setObject(i + <span class="number">1</span>, obj[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			rs = ps.executeQuery();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// new 一个空的list集合用来存放查询结果</span></span><br><span class="line">			List&lt;Map&lt;String, Object&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 获取结果集的列数</span></span><br><span class="line">			<span class="keyword">int</span> count = rs.getMetaData().getColumnCount();</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 对结果集遍历每一条数据是一个Map集合，列是key,值是value</span></span><br><span class="line">			<span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">				<span class="comment">// 一个空的map集合，用来存放每一行数据</span></span><br><span class="line">				Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">				<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">					Object ob = rs.getObject(i + <span class="number">1</span>);<span class="comment">// 获取值</span></span><br><span class="line">					String key = rs.getMetaData().getColumnName(i + <span class="number">1</span>);<span class="comment">// 获取k即列名</span></span><br><span class="line">					map.put(key, ob);</span><br><span class="line">				&#125;</span><br><span class="line">				list.add(map);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> list;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">			close(rs, ps, con);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 释放资源</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> rs</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> ps</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(ResultSet rs, PreparedStatement ps, Connection conn)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				rs.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">				e.printStackTrace();</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (ps != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					ps.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					conn.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="五、创建各实体类"><a href="#五、创建各实体类" class="headerlink" title="五、创建各实体类"></a>五、创建各实体类</h3><p>根据数据库表的需要在entity包中新建各实体类，以下为各实体类代码：</p>
<h4 id="Book-java"><a href="#Book-java" class="headerlink" title="Book.java"></a>Book.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> bookId; <span class="comment">// 书本ID</span></span><br><span class="line">	<span class="keyword">private</span> String bookName; <span class="comment">// 书名</span></span><br><span class="line">	<span class="keyword">private</span> String bookAuthor; <span class="comment">// 作者</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> bookNum; <span class="comment">// 书本剩余量</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> bookCategory; <span class="comment">// 书本类别</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> bookState; <span class="comment">// 书本状态  0表示可借阅  1表示不可借阅</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Book</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum, <span class="keyword">int</span> bookCategory, <span class="keyword">int</span> bookState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.bookId = bookId;</span><br><span class="line">		<span class="keyword">this</span>.bookName = bookName;</span><br><span class="line">		<span class="keyword">this</span>.bookAuthor = bookAuthor;</span><br><span class="line">		<span class="keyword">this</span>.bookNum = bookNum;</span><br><span class="line">		<span class="keyword">this</span>.bookCategory = bookCategory;</span><br><span class="line">		<span class="keyword">this</span>.bookState = bookState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookId</span><span class="params">(<span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookId = bookId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getBookName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookName</span><span class="params">(String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookName = bookName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getBookAuthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookAuthor;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookAuthor</span><span class="params">(String bookAuthor)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookAuthor = bookAuthor;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookNum;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookNum</span><span class="params">(<span class="keyword">int</span> bookNum)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookNum = bookNum;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookCategory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookCategory;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookCategory</span><span class="params">(<span class="keyword">int</span> bookCategory)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookCategory = bookCategory;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookState</span><span class="params">(<span class="keyword">int</span> bookState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookState = bookState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;Book [bookId=&quot;</span> + bookId + <span class="string">&quot;, bookName=&quot;</span> + bookName + <span class="string">&quot;, bookAuthor=&quot;</span> + bookAuthor + <span class="string">&quot;, bookNum=&quot;</span></span><br><span class="line">				+ bookNum + <span class="string">&quot;, bookCategory=&quot;</span> + bookCategory + <span class="string">&quot;, bookState=&quot;</span> + bookState + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> userId; <span class="comment">// 用户ID</span></span><br><span class="line">	<span class="keyword">private</span> String userName; <span class="comment">// 用户名</span></span><br><span class="line">	<span class="keyword">private</span> String passWord; <span class="comment">// 用户密码</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> age; <span class="comment">// 年龄</span></span><br><span class="line">	<span class="keyword">private</span> String gender; <span class="comment">// 性别</span></span><br><span class="line">	<span class="keyword">private</span> String phone; <span class="comment">// 手机号</span></span><br><span class="line">	<span class="keyword">private</span> String address; <span class="comment">// 地址</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> userState; <span class="comment">// 用户状态， 0表示可用 1表示禁用封号</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> role; <span class="comment">// 用户类别， 0表示管理员，1表示普通用户</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> userId, String userName, String passWard, <span class="keyword">int</span> age, String gender, String phone, String address,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">int</span> userState, <span class="keyword">int</span> role)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.userId = userId;</span><br><span class="line">		<span class="keyword">this</span>.userName = userName;</span><br><span class="line">		<span class="keyword">this</span>.passWord = passWard;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">		<span class="keyword">this</span>.gender = gender;</span><br><span class="line">		<span class="keyword">this</span>.phone = phone;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">		<span class="keyword">this</span>.userState = userState;</span><br><span class="line">		<span class="keyword">this</span>.role = role;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String userName, String passWard, <span class="keyword">int</span> age, String gender, String phone, String address, <span class="keyword">int</span> userState,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">int</span> role)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.userName = userName;</span><br><span class="line">		<span class="keyword">this</span>.passWord = passWard;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">		<span class="keyword">this</span>.gender = gender;</span><br><span class="line">		<span class="keyword">this</span>.phone = phone;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">		<span class="keyword">this</span>.userState = userState;</span><br><span class="line">		<span class="keyword">this</span>.role = role;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.userId = userId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.userName = userName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPassWord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> passWord;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassWord</span><span class="params">(String passWard)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.passWord = passWard;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> age;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.age = age;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> gender;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGender</span><span class="params">(String gender)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.gender = gender;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPhone</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> phone;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPhone</span><span class="params">(String phone)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.phone = phone;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.address = address;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserState</span><span class="params">(<span class="keyword">int</span> userState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.userState = userState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> role;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(<span class="keyword">int</span> role)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.role = role;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;User [userId=&quot;</span> + userId + <span class="string">&quot;, userName=&quot;</span> + userName + <span class="string">&quot;, passWard=&quot;</span> + passWord + <span class="string">&quot;, age=&quot;</span> + age</span><br><span class="line">				+ <span class="string">&quot;, gender=&quot;</span> + gender + <span class="string">&quot;, phone=&quot;</span> + phone + <span class="string">&quot;, address=&quot;</span> + address + <span class="string">&quot;, userState=&quot;</span> + userState</span><br><span class="line">				+ <span class="string">&quot;, role=&quot;</span> + role + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="BookCategory-java"><a href="#BookCategory-java" class="headerlink" title="BookCategory.java"></a>BookCategory.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookCategory</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> categoryId; <span class="comment">// 书籍类别编号</span></span><br><span class="line">	<span class="keyword">private</span> String categoryName; <span class="comment">// 书籍类别名</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BookCategory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BookCategory</span><span class="params">(<span class="keyword">int</span> categoryId, String categoryName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.categoryId = categoryId;</span><br><span class="line">		<span class="keyword">this</span>.categoryName = categoryName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCategoryId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> categoryId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryId</span><span class="params">(<span class="keyword">int</span> categoryId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.categoryId = categoryId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getCategoryName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> categoryName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCategoryName</span><span class="params">(String categoryName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.categoryName = categoryName;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;BookCategory [categoryId=&quot;</span> + categoryId + <span class="string">&quot;, categoryName=&quot;</span> + categoryName + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="BorrowingInfo-java"><a href="#BorrowingInfo-java" class="headerlink" title="BorrowingInfo.java"></a>BorrowingInfo.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Timestamp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorrowingInfo</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> borrowingInfoId; <span class="comment">// 借阅记录ID</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> userId; <span class="comment">// 用户ID</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> bookId; <span class="comment">// 书籍ID</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> borrowingState; <span class="comment">// 当前借阅状态</span></span><br><span class="line">	<span class="keyword">private</span> Timestamp borrowingTime; <span class="comment">// 借阅时间</span></span><br><span class="line">	<span class="keyword">private</span> Timestamp giveBackTime; <span class="comment">// 归还时间</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BorrowingInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BorrowingInfo</span><span class="params">(<span class="keyword">int</span> borrowingInfoId, <span class="keyword">int</span> userId, <span class="keyword">int</span> bookId, <span class="keyword">int</span> borrowingState, Timestamp borrowingTime,</span></span></span><br><span class="line"><span class="params"><span class="function">			Timestamp giveBackTime)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.borrowingInfoId = borrowingInfoId;</span><br><span class="line">		<span class="keyword">this</span>.userId = userId;</span><br><span class="line">		<span class="keyword">this</span>.bookId = bookId;</span><br><span class="line">		<span class="keyword">this</span>.borrowingState = borrowingState;</span><br><span class="line">		<span class="keyword">this</span>.borrowingTime = borrowingTime;</span><br><span class="line">		<span class="keyword">this</span>.giveBackTime = giveBackTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBorrowingInfoId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> borrowingInfoId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorrowingInfoId</span><span class="params">(<span class="keyword">int</span> borrowingInfoId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.borrowingInfoId = borrowingInfoId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserId</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.userId = userId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBookId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBookId</span><span class="params">(<span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.bookId = bookId;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getBorrowingState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> borrowingState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorrowingState</span><span class="params">(<span class="keyword">int</span> borrowingState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.borrowingState = borrowingState;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Timestamp <span class="title">getBorrowingTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> borrowingTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBorrowingTime</span><span class="params">(Timestamp borrowingTime)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.borrowingTime = borrowingTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Timestamp <span class="title">getGiveBackTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> giveBackTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGiveBackTime</span><span class="params">(Timestamp giveBackTime)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.giveBackTime = giveBackTime;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;BorrowingInfo [borrowingInfoId=&quot;</span> + borrowingInfoId + <span class="string">&quot;, userId=&quot;</span> + userId + <span class="string">&quot;, bookId=&quot;</span> + bookId</span><br><span class="line">				+ <span class="string">&quot;, borrowingState=&quot;</span> + borrowingState + <span class="string">&quot;, borrowingTime=&quot;</span> + borrowingTime + <span class="string">&quot;, giveBackTime=&quot;</span></span><br><span class="line">				+ giveBackTime + <span class="string">&quot;]&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="六、dao包各类的创建"><a href="#六、dao包各类的创建" class="headerlink" title="六、dao包各类的创建"></a>六、dao包各类的创建</h3><h4 id="各接口类"><a href="#各接口类" class="headerlink" title="各接口类"></a>各接口类</h4><h5 id="IBookDao-java"><a href="#IBookDao-java" class="headerlink" title="IBookDao.java"></a>IBookDao.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookDao</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">addBook</span><span class="params">(Book book)</span></span>; <span class="comment">// 添加书籍</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 删除书籍</span></span><br><span class="line">	</span><br><span class="line">	<span class="function">List&lt;Book&gt; <span class="title">findBookList</span><span class="params">()</span></span>;  <span class="comment">// 书籍列表查询</span></span><br><span class="line">	</span><br><span class="line">	<span class="function">Book <span class="title">findBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 书籍详细信息查询</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">changeBookState</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, <span class="keyword">int</span> newState)</span></span>; <span class="comment">// 修改书籍状态</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 借书</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 还书</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">changeBookBaseInfo</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum, <span class="keyword">int</span> bookCategory, <span class="keyword">int</span> newState)</span></span>; <span class="comment">// 修改书籍基本信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IUserDao-java"><a href="#IUserDao-java" class="headerlink" title="IUserDao.java"></a>IUserDao.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">User <span class="title">findUserByNameAndPassword</span><span class="params">(String userName, String password)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">String <span class="title">findPasswordById</span><span class="params">(<span class="keyword">int</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updatePasswordById</span><span class="params">(<span class="keyword">int</span> userId, String newPassword)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">List&lt;User&gt; <span class="title">findUser</span><span class="params">(<span class="keyword">int</span> role)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">User <span class="title">findUserById</span><span class="params">(<span class="keyword">int</span> userId)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getUserIdByName</span><span class="params">(String userName)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updateUserStateById</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> userState)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">deleteUserByIdAndUsername</span><span class="params">(<span class="keyword">int</span> userId, String userName)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updateBaseInfo</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> age, String gender, String phone,String address)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IBorrowInfoDao-java"><a href="#IBorrowInfoDao-java" class="headerlink" title="IBorrowInfoDao.java"></a>IBorrowInfoDao.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBorrowInfoDao</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span></span>; <span class="comment">// 借书</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span></span>; <span class="comment">// 还书</span></span><br><span class="line">	</span><br><span class="line">	<span class="function">List&lt;BorrowingInfo&gt; <span class="title">findBorrowInfo</span><span class="params">(<span class="keyword">int</span> userId)</span></span>; <span class="comment">// 查询个人已借阅历史</span></span><br><span class="line">	</span><br><span class="line">	<span class="function">List&lt;BorrowingInfo&gt; <span class="title">findAllBorrowInfo</span><span class="params">()</span></span>; <span class="comment">// 查询所有借阅历史</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IBookCategoryDao-java"><a href="#IBookCategoryDao-java" class="headerlink" title="IBookCategoryDao.java"></a>IBookCategoryDao.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookCategoryDao</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function">String <span class="title">findBookCategoryById</span><span class="params">(<span class="keyword">int</span> categoryId)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="各实现类："><a href="#各实现类：" class="headerlink" title="各实现类："></a>各实现类：</h4><h5 id="BookDaoImpl-java"><a href="#BookDaoImpl-java" class="headerlink" title="BookDaoImpl.java"></a>BookDaoImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBookDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.util.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title">IBookDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;insert into t_book (book_id,book_name,book_author,book_num,book_category,book_state) values(?,?,?,?,?,?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> JdbcUtil.executeUpdate(sql, book.getBookId(), book.getBookName(), book.getBookAuthor(),</span><br><span class="line">				book.getBookNum(), book.getBookCategory(), book.getBookState());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;delete from t_book where book_id = ? and book_name = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, bookId, bookName);</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功删除了书籍&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除书籍失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">findBookList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_book&quot;</span>;</span><br><span class="line">		List&lt;Book&gt; listBook = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			Book book = <span class="keyword">new</span> Book((<span class="keyword">int</span>) map.get(<span class="string">&quot;book_id&quot;</span>), (String) map.get(<span class="string">&quot;book_name&quot;</span>),</span><br><span class="line">					(String) map.get(<span class="string">&quot;book_author&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;book_num&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;book_category&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;book_state&quot;</span>));</span><br><span class="line">			listBook.add(book);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> listBook;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">findBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_book where book_id = ? and book_name = ?&quot;</span>;</span><br><span class="line">		Book book = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, bookId, bookName);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			book = <span class="keyword">new</span> Book((<span class="keyword">int</span>) map.get(<span class="string">&quot;book_id&quot;</span>), (String) map.get(<span class="string">&quot;book_name&quot;</span>), (String) map.get(<span class="string">&quot;book_author&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;book_num&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;book_category&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;book_state&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> book;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeBookState</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_book set book_state = ? where book_id = ? and book_name = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, newState, bookId, bookName);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功修改了书籍状态&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改书籍状态失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_book set book_num = ? where book_id = ? and book_name = ? and book_state = ?&quot;</span>;</span><br><span class="line">		Book book = findBook(bookId, bookName);</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span> (book.getBookNum() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">			flag = JdbcUtil.executeUpdate(sql, book.getBookNum() - <span class="number">1</span>, bookId, bookName, book.getBookState());</span><br><span class="line">			<span class="keyword">if</span> (book.getBookNum() == <span class="number">1</span>) &#123;</span><br><span class="line">				changeBookState(bookId, bookName, <span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功借书&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;借书失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_book set book_num = ? where book_id = ? and book_name = ? and book_state = ?&quot;</span>;</span><br><span class="line">		Book book = findBook(bookId, bookName);</span><br><span class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span> (book.getBookNum() &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">			flag = JdbcUtil.executeUpdate(sql, book.getBookNum() + <span class="number">1</span>, bookId, bookName, book.getBookState());</span><br><span class="line">			<span class="keyword">if</span> (book.getBookNum() == <span class="number">0</span>) &#123;</span><br><span class="line">				changeBookState(bookId, bookName, <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功还书11&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;还书失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeBookBaseInfo</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum, <span class="keyword">int</span> bookCategory,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_book set book_name = ?, book_author = ?, book_num = ?, book_category = ?, book_state = ? where book_id = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">		Book book = findBook(bookId, bookName);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bookName.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">			bookName = book.getBookName();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bookAuthor.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">			bookAuthor = book.getBookAuthor();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bookNum == -<span class="number">1</span>) &#123;</span><br><span class="line">			bookNum = book.getBookNum();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (bookCategory == -<span class="number">1</span>) &#123;</span><br><span class="line">			bookCategory = book.getBookCategory();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (newState == -<span class="number">1</span>) &#123;</span><br><span class="line">			newState = book.getBookState();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, bookName, bookAuthor, bookNum, bookCategory, newState);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功修改了书籍基本信息&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改书籍基本信息失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="UserDaoImpl-java"><a href="#UserDaoImpl-java" class="headerlink" title="UserDaoImpl.java"></a>UserDaoImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.egret.util.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 用户添加</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;insert into t_user (user_name,password,age,gender,phone,address,user_state,role) values(?,?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, user.getUserName(), user.getPassWord(), user.getAge(),</span><br><span class="line">				user.getGender(), user.getPhone(), user.getAddress(), user.getUserState(), user.getRole());</span><br><span class="line">		user.setUserId(getUserIdByName(user.getUserName()));</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">findUserByNameAndPassword</span><span class="params">(String userName, String password)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_user where user_name = ? and password = ?&quot;</span>;</span><br><span class="line">		User user = <span class="keyword">null</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, userName, password);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			user = <span class="keyword">new</span> User((<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>), (String) map.get(<span class="string">&quot;user_name&quot;</span>), (String) map.get(<span class="string">&quot;password&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;age&quot;</span>), (String) map.get(<span class="string">&quot;gender&quot;</span>), (String) map.get(<span class="string">&quot;phone&quot;</span>),</span><br><span class="line">					(String) map.get(<span class="string">&quot;address&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_state&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">findPasswordById</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_user where user_id = ?&quot;</span>;</span><br><span class="line">		String password = <span class="keyword">null</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			password = (String) map.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updatePasswordById</span><span class="params">(<span class="keyword">int</span> userId, String newPassword)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_user set password = ? where user_id = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, newPassword, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功修改了密码&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改密码失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_user where user_id = ?&quot;</span>;</span><br><span class="line">		User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			user = <span class="keyword">new</span> User((<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>), (String) map.get(<span class="string">&quot;user_name&quot;</span>), (String) map.get(<span class="string">&quot;password&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;age&quot;</span>), (String) map.get(<span class="string">&quot;gender&quot;</span>), (String) map.get(<span class="string">&quot;phone&quot;</span>),</span><br><span class="line">					(String) map.get(<span class="string">&quot;address&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_state&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateUserStateById</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> userState)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_user set user_state = ? where user_id = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, userState, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功修改了用户状态&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改用户状态失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteUserByIdAndUsername</span><span class="params">(<span class="keyword">int</span> userId, String userName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;delete from t_user where user_id = ? and user_name = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, userId, userName);</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功删除了用户&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;删除用户失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">(<span class="keyword">int</span> role)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_user where role = ?&quot;</span>;</span><br><span class="line">		List&lt;User&gt; listUser = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, role);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			User user = <span class="keyword">new</span> User((<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>), (String) map.get(<span class="string">&quot;user_name&quot;</span>), (String) map.get(<span class="string">&quot;password&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;age&quot;</span>), (String) map.get(<span class="string">&quot;gender&quot;</span>), (String) map.get(<span class="string">&quot;phone&quot;</span>),</span><br><span class="line">					(String) map.get(<span class="string">&quot;address&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_state&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">			listUser.add(user);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> listUser;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserIdByName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_user where user_name = ?&quot;</span>;</span><br><span class="line">		<span class="keyword">int</span> id = -<span class="number">1</span>;</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, userName);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			id = (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateBaseInfo</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> age, String gender, String phone, String address)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_user set age = ?, gender = ?, phone = ?, address = ? where user_id = ?&quot;</span>;</span><br><span class="line">		User user = findUserById(userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (age == -<span class="number">1</span>) &#123;</span><br><span class="line">			age = user.getAge();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (gender.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">			gender = user.getGender();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (phone.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">			phone = user.getPhone();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (address.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">			address = user.getAddress();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, age, gender, phone, address, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改信息成功&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;修改信息失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="BorrowInfoDaoImpl-java"><a href="#BorrowInfoDaoImpl-java" class="headerlink" title="BorrowInfoDaoImpl.java"></a>BorrowInfoDaoImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBorrowInfoDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"><span class="keyword">import</span> cn.egret.util.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorrowInfoDaoImpl</span> <span class="keyword">implements</span> <span class="title">IBorrowInfoDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;insert into t_borrowing_info(user_id,book_id,borrowing_state,borrowing_time) values(?,?,?,?)&quot;</span>;</span><br><span class="line">		java.util.Date d = <span class="keyword">new</span> java.util.Date();</span><br><span class="line"></span><br><span class="line">		java.sql.Timestamp date = <span class="keyword">new</span> java.sql.Timestamp(d.getTime());<span class="comment">//会丢失时分秒</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, userId, bookId, <span class="number">0</span>, date);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功借书&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;借书失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;update t_borrowing_info set giveback_time = ?, borrowing_state = ? where user_id = ? and book_id = ?&quot;</span>;</span><br><span class="line">		java.util.Date d = <span class="keyword">new</span> java.util.Date();</span><br><span class="line"></span><br><span class="line">		java.sql.Timestamp date = <span class="keyword">new</span> java.sql.Timestamp(d.getTime());<span class="comment">//会丢失时分秒</span></span><br><span class="line">		<span class="keyword">boolean</span> flag = JdbcUtil.executeUpdate(sql, date, <span class="number">1</span>, userId, bookId);</span><br><span class="line">		<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;成功还书&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			System.out.println(<span class="string">&quot;还书失败&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> flag;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;BorrowingInfo&gt; <span class="title">findBorrowInfo</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_borrowing_info where user_id = ?&quot;</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;BorrowingInfo&gt; BIList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, userId);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			BorrowingInfo BI = <span class="keyword">new</span> BorrowingInfo((<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;book_id&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;borrowing_state&quot;</span>),</span><br><span class="line">					(java.sql.Timestamp) map.get(<span class="string">&quot;borrowing_time&quot;</span>), (java.sql.Timestamp) map.get(<span class="string">&quot;giveback_time&quot;</span>));</span><br><span class="line">			BIList.add(BI);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> BIList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;BorrowingInfo&gt; <span class="title">findAllBorrowInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select * from t_borrowing_info&quot;</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;BorrowingInfo&gt; BIList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			BorrowingInfo BI = <span class="keyword">new</span> BorrowingInfo((<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;user_id&quot;</span>),</span><br><span class="line">					(<span class="keyword">int</span>) map.get(<span class="string">&quot;book_id&quot;</span>), (<span class="keyword">int</span>) map.get(<span class="string">&quot;borrowing_state&quot;</span>),</span><br><span class="line">					(java.sql.Timestamp) map.get(<span class="string">&quot;borrowing_time&quot;</span>), (java.sql.Timestamp) map.get(<span class="string">&quot;giveback_time&quot;</span>));</span><br><span class="line">			BIList.add(BI);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> BIList;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="BookCategoryDaoImpl-java"><a href="#BookCategoryDaoImpl-java" class="headerlink" title="BookCategoryDaoImpl.java"></a>BookCategoryDaoImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBookCategoryDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.util.JdbcUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookCategoryDaoImpl</span> <span class="keyword">implements</span> <span class="title">IBookCategoryDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">findBookCategoryById</span><span class="params">(<span class="keyword">int</span> categoryId)</span> </span>&#123;</span><br><span class="line">		String sql = <span class="string">&quot;select category_name from book_category where category_id = ?&quot;</span>;</span><br><span class="line">		String categoryName = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">		List&lt;Map&lt;String, Object&gt;&gt; list = JdbcUtil.executeQuery(sql, categoryId);</span><br><span class="line">		<span class="keyword">for</span> (Map&lt;String, Object&gt; map : list) &#123;</span><br><span class="line">			categoryName = (String) map.get(<span class="string">&quot;category_name&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> categoryName;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="七、service包各类的创建"><a href="#七、service包各类的创建" class="headerlink" title="七、service包各类的创建"></a>七、service包各类的创建</h3><h4 id="各接口类-1"><a href="#各接口类-1" class="headerlink" title="各接口类"></a>各接口类</h4><h5 id="IBookService-java"><a href="#IBookService-java" class="headerlink" title="IBookService.java"></a>IBookService.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookService</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">addBook</span><span class="params">(Book book)</span></span>; <span class="comment">// 添加书籍</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 删除书籍</span></span><br><span class="line"></span><br><span class="line">	<span class="function">List&lt;Book&gt; <span class="title">findBookList</span><span class="params">()</span></span>; <span class="comment">// 书籍列表查询</span></span><br><span class="line"></span><br><span class="line">	<span class="function">Book <span class="title">findBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 书籍详细信息查询</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">changeBookState</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, <span class="keyword">int</span> newState)</span></span>; <span class="comment">// 修改书籍状态</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 借书</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span></span>; <span class="comment">// 还书</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">changeBookBaseInfo</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum, <span class="keyword">int</span> bookCategory, <span class="keyword">int</span> newState)</span></span>; <span class="comment">// 修改书籍基本信息</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IUserService-java"><a href="#IUserService-java" class="headerlink" title="IUserService.java"></a>IUserService.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">User <span class="title">findUserByNameAndPassword</span><span class="params">(String userName, String password)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">String <span class="title">findPasswordById</span><span class="params">(<span class="keyword">int</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updatePasswordById</span><span class="params">(<span class="keyword">int</span> userId, String newPassword)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">List&lt;User&gt; <span class="title">findUser</span><span class="params">(<span class="keyword">int</span> role)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">User <span class="title">findUserById</span><span class="params">(<span class="keyword">int</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getUserIdByName</span><span class="params">(String userName)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updateUserStateById</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> userState)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">deleteUserByIdAndUsername</span><span class="params">(<span class="keyword">int</span> userId, String userName)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">updateBaseInfo</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> age, String gender, String phone,String address)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IBorrowInfoService-java"><a href="#IBorrowInfoService-java" class="headerlink" title="IBorrowInfoService.java"></a>IBorrowInfoService.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBorrowInfoService</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span></span>; <span class="comment">// 借书</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span></span>; <span class="comment">// 还书</span></span><br><span class="line"></span><br><span class="line">	<span class="function">List&lt;BorrowingInfo&gt; <span class="title">findBorrowInfo</span><span class="params">(<span class="keyword">int</span> userId)</span></span>; <span class="comment">// 查询个人已借阅历史</span></span><br><span class="line">	</span><br><span class="line">	<span class="function">List&lt;BorrowingInfo&gt; <span class="title">findAllBorrowInfo</span><span class="params">()</span></span>; <span class="comment">// 查询所有已借阅历史</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="IBookCategoryService-java"><a href="#IBookCategoryService-java" class="headerlink" title="IBookCategoryService.java"></a>IBookCategoryService.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBookCategoryService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function">String <span class="title">findBookCategoryById</span><span class="params">(<span class="keyword">int</span> categoryId)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="各实现类"><a href="#各实现类" class="headerlink" title="各实现类"></a>各实现类</h4><h5 id="BookServiceImpl-java"><a href="#BookServiceImpl-java" class="headerlink" title="BookServiceImpl.java"></a>BookServiceImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBookDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBookService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title">IBookService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> IBookDao bookDao = <span class="keyword">new</span> BookDaoImpl();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.addBook(book);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.deleteBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;Book&gt; <span class="title">findBookList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.findBookList();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Book <span class="title">findBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.findBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeBookState</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.changeBookState(bookId, bookName, newState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.borrowBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.giveBackBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">changeBookBaseInfo</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum, <span class="keyword">int</span> bookCategory,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bookDao.changeBookBaseInfo(bookId, bookName, bookAuthor, bookNum, bookCategory, newState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="UserServiceImpl-java"><a href="#UserServiceImpl-java" class="headerlink" title="UserServiceImpl.java"></a>UserServiceImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IUserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> IUserDao userDao= <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.addUser(user);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">findUserByNameAndPassword</span><span class="params">(String userName, String password)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.findUserByNameAndPassword(userName, password);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">findPasswordById</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.findPasswordById(userId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updatePasswordById</span><span class="params">(<span class="keyword">int</span> userId, String newPassword)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.updatePasswordById(userId, newPassword);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">(<span class="keyword">int</span> role)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.findUser(role);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">findUserById</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.findUserById(userId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getUserIdByName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.getUserIdByName(userName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateUserStateById</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> userState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.updateUserStateById(userId, userState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteUserByIdAndUsername</span><span class="params">(<span class="keyword">int</span> userId, String userName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.deleteUserByIdAndUsername(userId, userName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateBaseInfo</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> age, String gender, String phone, String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> userDao.updateBaseInfo(userId, age, gender, phone, address);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="BorrowInfoServiceImpl-java"><a href="#BorrowInfoServiceImpl-java" class="headerlink" title="BorrowInfoServiceImpl.java"></a>BorrowInfoServiceImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBorrowInfoDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BorrowInfoDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBorrowInfoService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorrowInfoServiceImpl</span> <span class="keyword">implements</span> <span class="title">IBorrowInfoService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> IBorrowInfoDao BI = <span class="keyword">new</span> BorrowInfoDaoImpl();</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BI.borrowBook(userId, bookId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BI.giveBackBook(userId, bookId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;BorrowingInfo&gt; <span class="title">findBorrowInfo</span><span class="params">(<span class="keyword">int</span> userId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BI.findBorrowInfo(userId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> List&lt;BorrowingInfo&gt; <span class="title">findAllBorrowInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BI.findAllBorrowInfo();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="BookCategoryServiceImpl-java"><a href="#BookCategoryServiceImpl-java" class="headerlink" title="BookCategoryServiceImpl.java"></a>BookCategoryServiceImpl.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.IBookCategoryDao;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BookCategoryDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBookCategoryService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookCategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title">IBookCategoryService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> IBookCategoryDao BCD = <span class="keyword">new</span> BookCategoryDaoImpl();</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">findBookCategoryById</span><span class="params">(<span class="keyword">int</span> categoryId)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BCD.findBookCategoryById(categoryId);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="八、controller包各类创建"><a href="#八、controller包各类创建" class="headerlink" title="八、controller包各类创建"></a>八、controller包各类创建</h3><h4 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a>UserController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> IUserService uService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 登录</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title">login</span><span class="params">(String userName, String password)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.findUserByNameAndPassword(userName, password);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 注册</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">register</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.addUser(user);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 禁用普通账号与开启</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userState</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">changeUserState</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> userState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.updateUserStateById(userId, userState);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询普通用户列表</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;User&gt; <span class="title">findCommonUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.findUser(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询用户基本信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">findUserInfo</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.findUserById(id).toString();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询用户</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title">findUser</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.findUserById(id);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 修改密码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> newPassword</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">changePassword</span><span class="params">(<span class="keyword">int</span> userId, String newPassword)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.updatePasswordById(userId, newPassword);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 修改基本信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> age</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> gender</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> phone</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> address</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">changeBaseInfo</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> age, String gender, String phone, String address)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> uService.updateBaseInfo(userId, age, gender, phone, address);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="BookController-java"><a href="#BookController-java" class="headerlink" title="BookController.java"></a>BookController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBookCategoryService;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBookService;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.IBorrowInfoService;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.impl.BookCategoryServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.impl.BookServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.service.impl.BorrowInfoServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> IBookService bService = <span class="keyword">new</span> BookServiceImpl();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> IBorrowInfoService bIService = <span class="keyword">new</span> BorrowInfoServiceImpl();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> IBookCategoryService BCS = <span class="keyword">new</span> BookCategoryServiceImpl();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 添加书籍</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> book</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">addBook</span><span class="params">(Book book)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.addBook(book);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除书籍</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.deleteBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 书籍基本信息修改</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookAuthor</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookNum</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookCategory</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> newState</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">changeBookBaseInfo</span><span class="params">(<span class="keyword">int</span> bookId, String bookName, String bookAuthor, <span class="keyword">int</span> bookNum,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">int</span> bookCategory, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.changeBookBaseInfo(bookId, bookName, bookAuthor, bookNum, bookCategory, newState);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 书籍列表查询</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Book&gt; <span class="title">findBookList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.findBookList();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 书籍详细信息查询</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Book <span class="title">findBook</span><span class="params">(<span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.findBook(bookId, bookName);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 书籍借阅</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">borrowBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.borrowBook(bookId, bookName) &amp;&amp; bIService.borrowBook(userId, bookId);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 书籍归还</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> bookName</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">giveBackBook</span><span class="params">(<span class="keyword">int</span> userId, <span class="keyword">int</span> bookId, String bookName)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bService.giveBackBook(bookId, bookName) &amp;&amp; bIService.giveBackBook(userId, bookId);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询用户借阅信息</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;BorrowingInfo&gt; <span class="title">findUserBorrowInfoList</span><span class="params">(<span class="keyword">int</span> userId)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bIService.findBorrowInfo(userId);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;BorrowingInfo&gt; <span class="title">findAllBorrowInfoList</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> bIService.findAllBorrowInfo();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 查询书籍类别</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">findBookCategory</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> BCS.findBookCategoryById(id);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="九、page包各类创建"><a href="#九、page包各类创建" class="headerlink" title="九、page包各类创建"></a>九、page包各类创建</h3><p>各page页面均是利用ecplise的WindowsBuilder插件生成的，可自己从网上下载使用。</p>
<h4 id="MainFrame-java"><a href="#MainFrame-java" class="headerlink" title="MainFrame.java"></a>MainFrame.java</h4><p><strong>此类为整个应用程序的入口</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainFrame</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">MainFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> LoginPage();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> MainFrame();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="LoginPage-java"><a href="#LoginPage-java" class="headerlink" title="LoginPage.java"></a>LoginPage.java</h4><p><strong>登录界面</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPasswordField;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginPage</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> JFrame frame;</span><br><span class="line">	<span class="keyword">private</span> JTextField userNameField;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField;</span><br><span class="line">	<span class="keyword">private</span> User user;</span><br><span class="line">	<span class="keyword">private</span> AdminPage adminPage;</span><br><span class="line">	<span class="keyword">private</span> RegisterPage registerPage;</span><br><span class="line">	<span class="keyword">private</span> CommonUserPage commonUserPage;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">LoginPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		initialize();</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initialize the contents of the frame.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		frame = <span class="keyword">new</span> JFrame();</span><br><span class="line">		frame.setTitle(<span class="string">&quot;图书管理系统&quot;</span>);</span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">641</span>, <span class="number">453</span>);</span><br><span class="line">		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">		frame.setLocationRelativeTo(<span class="keyword">null</span>);<span class="comment">// 窗口在屏幕中间显示</span></span><br><span class="line">		frame.getContentPane().setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">623</span>, <span class="number">406</span>);</span><br><span class="line">		frame.getContentPane().add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用  户  名：&quot;</span>);</span><br><span class="line">		userNameLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		userNameLabel.setBounds(<span class="number">152</span>, <span class="number">98</span>, <span class="number">146</span>, <span class="number">39</span>);</span><br><span class="line">		panel.add(userNameLabel);</span><br><span class="line"></span><br><span class="line">		JLabel passWordLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;密     码：&quot;</span>);</span><br><span class="line">		passWordLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		passWordLabel.setBounds(<span class="number">152</span>, <span class="number">190</span>, <span class="number">125</span>, <span class="number">39</span>);</span><br><span class="line">		panel.add(passWordLabel);</span><br><span class="line"></span><br><span class="line">		userNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userNameField.setBounds(<span class="number">325</span>, <span class="number">105</span>, <span class="number">134</span>, <span class="number">29</span>);</span><br><span class="line">		panel.add(userNameField);</span><br><span class="line">		userNameField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		passwordField = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField.setBounds(<span class="number">325</span>, <span class="number">197</span>, <span class="number">134</span>, <span class="number">29</span>);</span><br><span class="line">		panel.add(passwordField);</span><br><span class="line"></span><br><span class="line">		JButton loginButton = <span class="keyword">new</span> JButton(<span class="string">&quot;登  录&quot;</span>);</span><br><span class="line">		loginButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		loginButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">				<span class="comment">// 获取文本框中的值</span></span><br><span class="line">				String userName = userNameField.getText();</span><br><span class="line">				String password = <span class="keyword">new</span> String(passwordField.getPassword());</span><br><span class="line">				<span class="keyword">if</span> (userName == <span class="keyword">null</span> || userName.trim().equals(<span class="string">&quot;&quot;</span>) || password.trim().equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">					JOptionPane.showMessageDialog(loginButton, <span class="string">&quot;用户名或密码不能为空&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					user = UserController.login(userName, password);</span><br><span class="line">					System.out.println(userName);</span><br><span class="line">					System.out.println(password);</span><br><span class="line">					<span class="keyword">if</span> (user != <span class="keyword">null</span>) &#123;</span><br><span class="line">						<span class="keyword">if</span> (user.getUserState() == <span class="number">1</span>) &#123;</span><br><span class="line">							JOptionPane.showMessageDialog(loginButton, <span class="string">&quot;当前账号已被禁用，请联系管理员&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">						&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							<span class="keyword">if</span> (user.getRole() == <span class="number">0</span>) &#123;<span class="comment">// 打开新的页面 - 管理员界面</span></span><br><span class="line">								adminPage = <span class="keyword">new</span> AdminPage(<span class="string">&quot;管理员界面&quot;</span>, user);</span><br><span class="line"></span><br><span class="line">								frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">								<span class="comment">// // 将原本的⻚⾯关闭</span></span><br><span class="line">								dispose();</span><br><span class="line">								System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">							&#125; <span class="keyword">else</span> <span class="keyword">if</span> (user.getRole() == <span class="number">1</span>) &#123;</span><br><span class="line">								<span class="comment">// 打开新的界面- 普通用户界面CustomerPage</span></span><br><span class="line">								commonUserPage = <span class="keyword">new</span> CommonUserPage(<span class="string">&quot;普通用户界面&quot;</span>, user);</span><br><span class="line">								frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">								<span class="comment">// customerPage.setVisible(true);</span></span><br><span class="line">								<span class="comment">// 将原本的⻚⾯关闭</span></span><br><span class="line">								dispose();</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125; <span class="keyword">else</span> <span class="keyword">if</span> (user == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">						JOptionPane.showMessageDialog(loginButton, <span class="string">&quot;用户名或密码错误&quot;</span>, <span class="string">&quot;错误&quot;</span>, <span class="number">0</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		loginButton.setBounds(<span class="number">122</span>, <span class="number">295</span>, <span class="number">140</span>, <span class="number">51</span>);</span><br><span class="line">		panel.add(loginButton);</span><br><span class="line"></span><br><span class="line">		JButton registerButton = <span class="keyword">new</span> JButton(<span class="string">&quot;注  册&quot;</span>);</span><br><span class="line">		registerButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		registerButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				RegisterPage registerPage = <span class="keyword">new</span> RegisterPage(<span class="string">&quot;注册页面&quot;</span>);</span><br><span class="line">				frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">				dispose();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		registerButton.setBounds(<span class="number">355</span>, <span class="number">295</span>, <span class="number">140</span>, <span class="number">51</span>);</span><br><span class="line">		panel.add(registerButton);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="RegisterPage-java"><a href="#RegisterPage-java" class="headerlink" title="RegisterPage.java"></a>RegisterPage.java</h4><p><strong>注册界面</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPasswordField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JComboBox;</span><br><span class="line"><span class="keyword">import</span> javax.swing.ButtonGroup;</span><br><span class="line"><span class="keyword">import</span> javax.swing.DefaultComboBoxModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JRadioButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RegisterPage</span> <span class="keyword">extends</span> <span class="title">JFrame</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> JFrame frame;</span><br><span class="line">	<span class="keyword">private</span> JTextField userNameField;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField1;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField2;</span><br><span class="line">	<span class="keyword">private</span> JTextField ageField;</span><br><span class="line">	<span class="keyword">private</span> JTextField phoneField;</span><br><span class="line">	<span class="keyword">private</span> JTextField addressField;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">RegisterPage</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		initialize(name);</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initialize the contents of the frame.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		frame = <span class="keyword">new</span> JFrame(name);</span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">503</span>, <span class="number">618</span>);</span><br><span class="line">		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		frame.setLocationRelativeTo(<span class="keyword">null</span>);<span class="comment">// 窗口在屏幕中间显示</span></span><br><span class="line">		frame.getContentPane().setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">484</span>, <span class="number">571</span>);</span><br><span class="line">		frame.getContentPane().add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		userNameLabel.setBounds(<span class="number">100</span>, <span class="number">35</span>, <span class="number">71</span>, <span class="number">39</span>);</span><br><span class="line">		panel.add(userNameLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel passWordLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;密  码：&quot;</span>);</span><br><span class="line">		passWordLabel.setBounds(<span class="number">100</span>, <span class="number">98</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(passWordLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel passWordLabel1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;重复密码：&quot;</span>);</span><br><span class="line">		passWordLabel1.setBounds(<span class="number">94</span>, <span class="number">148</span>, <span class="number">84</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(passWordLabel1);</span><br><span class="line">		</span><br><span class="line">		JLabel ageLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;年  龄：&quot;</span>);</span><br><span class="line">		ageLabel.setBounds(<span class="number">100</span>, <span class="number">200</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(ageLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel genderLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;性  别：&quot;</span>);</span><br><span class="line">		genderLabel.setBounds(<span class="number">100</span>, <span class="number">257</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(genderLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel phoneLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;手机号：&quot;</span>);</span><br><span class="line">		phoneLabel.setBounds(<span class="number">100</span>, <span class="number">312</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(phoneLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel addressLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;地  址：&quot;</span>);</span><br><span class="line">		addressLabel.setBounds(<span class="number">100</span>, <span class="number">367</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(addressLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel roleLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户类别：&quot;</span>);</span><br><span class="line">		roleLabel.setBounds(<span class="number">88</span>, <span class="number">423</span>, <span class="number">90</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(roleLabel);</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		userNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userNameField.setBounds(<span class="number">196</span>, <span class="number">42</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(userNameField);</span><br><span class="line">		userNameField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		passwordField1 = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField1.setBounds(<span class="number">196</span>, <span class="number">95</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(passwordField1);</span><br><span class="line">		</span><br><span class="line">		passwordField2 = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField2.setBounds(<span class="number">196</span>, <span class="number">145</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(passwordField2);</span><br><span class="line">		</span><br><span class="line">		ageField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		ageField.setText(<span class="string">&quot;18&quot;</span>);</span><br><span class="line">		ageField.setColumns(<span class="number">10</span>);</span><br><span class="line">		ageField.setBounds(<span class="number">196</span>, <span class="number">197</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(ageField);</span><br><span class="line">		</span><br><span class="line">		phoneField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		phoneField.setColumns(<span class="number">10</span>);</span><br><span class="line">		phoneField.setBounds(<span class="number">196</span>, <span class="number">309</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(phoneField);</span><br><span class="line">		</span><br><span class="line">		addressField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		addressField.setColumns(<span class="number">10</span>);</span><br><span class="line">		addressField.setBounds(<span class="number">196</span>, <span class="number">364</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(addressField);</span><br><span class="line">		</span><br><span class="line">		JComboBox comboBox = <span class="keyword">new</span> JComboBox();</span><br><span class="line">		comboBox.setModel(<span class="keyword">new</span> DefaultComboBoxModel(<span class="keyword">new</span> String[] &#123;<span class="string">&quot;管理员&quot;</span>, <span class="string">&quot;普通用户&quot;</span>&#125;));</span><br><span class="line">		comboBox.setSelectedIndex(<span class="number">1</span>);</span><br><span class="line">		comboBox.setBounds(<span class="number">196</span>, <span class="number">420</span>, <span class="number">158</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(comboBox);</span><br><span class="line">		</span><br><span class="line">		JRadioButton genderButton1 = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">		genderButton1.setBounds(<span class="number">196</span>, <span class="number">253</span>, <span class="number">58</span>, <span class="number">27</span>);</span><br><span class="line">		genderButton1.setSelected(<span class="keyword">true</span>);</span><br><span class="line">		</span><br><span class="line">		JRadioButton genderButton2 = <span class="keyword">new</span> JRadioButton(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">		genderButton2.setBounds(<span class="number">271</span>, <span class="number">253</span>, <span class="number">58</span>, <span class="number">27</span>);</span><br><span class="line">		</span><br><span class="line">		ButtonGroup btnGroup = <span class="keyword">new</span> ButtonGroup();</span><br><span class="line">        btnGroup.add(genderButton1);</span><br><span class="line">        btnGroup.add(genderButton2);</span><br><span class="line">        </span><br><span class="line">		panel.add(genderButton1);</span><br><span class="line">		panel.add(genderButton2);</span><br><span class="line">		</span><br><span class="line">		JButton button1 = <span class="keyword">new</span> JButton(<span class="string">&quot;确认注册&quot;</span>);</span><br><span class="line">		button1.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">18</span>));</span><br><span class="line">		button1.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				</span><br><span class="line">				String userName = userNameField.getText();</span><br><span class="line">				</span><br><span class="line">				String passWord1 = <span class="keyword">new</span> String(passwordField1.getPassword());</span><br><span class="line">				String passWord2 = <span class="keyword">new</span> String(passwordField2.getPassword());</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> age = Integer.parseInt(ageField.getText());</span><br><span class="line">				</span><br><span class="line">				String gender = <span class="keyword">null</span>;</span><br><span class="line">				<span class="keyword">if</span>(genderButton1.isSelected()) &#123;</span><br><span class="line">					gender = <span class="string">&quot;男&quot;</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> <span class="keyword">if</span>(genderButton2.isSelected()) &#123;</span><br><span class="line">					gender = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">				String phone = phoneField.getText();</span><br><span class="line">				String address = addressField.getText();</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> role = comboBox.getSelectedIndex();</span><br><span class="line">				</span><br><span class="line"><span class="comment">//				System.out.println(userName);</span></span><br><span class="line"><span class="comment">//				System.out.println(passWord1);</span></span><br><span class="line"><span class="comment">//				System.out.println(passWord2);</span></span><br><span class="line"><span class="comment">//				System.out.println(age);</span></span><br><span class="line"><span class="comment">//				System.out.println(gender);</span></span><br><span class="line"><span class="comment">//				System.out.println(phone);</span></span><br><span class="line"><span class="comment">//				System.out.println(address);</span></span><br><span class="line"><span class="comment">//				System.out.println(role);</span></span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(userName.equals(<span class="string">&quot;&quot;</span>) || passWord1.equals(<span class="string">&quot;&quot;</span>) || passWord2.equals(<span class="string">&quot;&quot;</span>) || phone.equals(<span class="string">&quot;&quot;</span>) || address.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;输入数据中有空数据，非法，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(button1, <span class="string">&quot;输入数据中有空数据，非法，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);	</span><br><span class="line">					userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					passwordField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					passwordField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					phoneField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					addressField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!passWord1.equals(passWord2)) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;两次输入的密码不一致，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(button1, <span class="string">&quot;两次输入的密码不一致，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);	</span><br><span class="line">					userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					passwordField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					passwordField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					phoneField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					addressField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					User user = <span class="keyword">new</span> User(userName,passWord1,age,gender,phone,address,<span class="number">0</span>,role);</span><br><span class="line">					<span class="keyword">boolean</span> flag = UserController.register(user);</span><br><span class="line">					System.out.println(flag);</span><br><span class="line">					<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">						JOptionPane.showMessageDialog(button1, <span class="string">&quot;恭喜您注册成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);	</span><br><span class="line">						<span class="keyword">new</span> LoginPage();</span><br><span class="line">						frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">						dispose();</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						JOptionPane.showMessageDialog(button1, <span class="string">&quot;注册失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);						</span><br><span class="line">						userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						passwordField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						passwordField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						phoneField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">						addressField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">					&#125;</span><br><span class="line">					</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button1.setBounds(<span class="number">88</span>, <span class="number">492</span>, <span class="number">121</span>, <span class="number">39</span>);</span><br><span class="line">		panel.add(button1);</span><br><span class="line">		</span><br><span class="line">		JButton button2 = <span class="keyword">new</span> JButton(<span class="string">&quot;取  消&quot;</span>);</span><br><span class="line">		button2.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button2.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">18</span>));</span><br><span class="line">		button2.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">new</span> LoginPage();</span><br><span class="line">				frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">				dispose();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button2.setBounds(<span class="number">251</span>, <span class="number">492</span>, <span class="number">121</span>, <span class="number">39</span>);</span><br><span class="line">		panel.add(button2);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="AdminPage-java"><a href="#AdminPage-java" class="headerlink" title="AdminPage.java"></a>AdminPage.java</h4><p><strong>管理员界面</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTree;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.TreeSelectionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.TreeSelectionListener;</span><br><span class="line"><span class="keyword">import</span> javax.swing.tree.DefaultTreeModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.AddAdmin;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.AddAndDeleteBook;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.ChangeUserState;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.SearchBookList;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.SearchUserList;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.UserInfoSearch;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.WelcomePage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.UserInfoSearchPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.tree.DefaultMutableTreeNode;</span><br><span class="line"><span class="keyword">import</span> java.awt.CardLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AdminPage</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> JFrame frame;</span><br><span class="line">	<span class="keyword">private</span> CardLayout cl;</span><br><span class="line">	JPanel panel_2;</span><br><span class="line">	<span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">	WelcomePage welcomePage;</span><br><span class="line">	SearchUserList searchUserList;</span><br><span class="line">	SearchBookList searchBookList;</span><br><span class="line">	AddAdmin addAdmin;</span><br><span class="line">	AddAndDeleteBook addAndDeleteBook;</span><br><span class="line">	UserInfoSearch userInfoSearch;</span><br><span class="line">	ChangeUserState changeUserState;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AdminPage</span><span class="params">(String name, User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(name);</span><br><span class="line">		<span class="keyword">this</span>.user = user;</span><br><span class="line">		initialize(name);</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initialize the contents of the frame.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		frame = <span class="keyword">new</span> JFrame(name);</span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">1076</span>, <span class="number">661</span>);</span><br><span class="line">		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">		frame.setLocationRelativeTo(<span class="keyword">null</span>);<span class="comment">// 窗口在屏幕中间显示</span></span><br><span class="line">		frame.getContentPane().setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		FlowLayout flowLayout = (FlowLayout) panel.getLayout();</span><br><span class="line">		flowLayout.setAlignment(FlowLayout.RIGHT);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1058</span>, <span class="number">38</span>);</span><br><span class="line">		frame.getContentPane().add(panel);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;欢迎&quot;</span> + user.getUserName() + <span class="string">&quot;登录&quot;</span>);</span><br><span class="line">		panel.add(upLabel1);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel2 = <span class="keyword">new</span> JLabel(<span class="string">&quot; | &quot;</span>);</span><br><span class="line">		panel.add(upLabel2);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel3 = <span class="keyword">new</span> JLabel(<span class="string">&quot;退出登录&quot;</span>);</span><br><span class="line">		upLabel3.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">new</span> LoginPage();</span><br><span class="line">				frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">				dispose();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.add(upLabel3);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">35</span>, <span class="number">184</span>, <span class="number">579</span>);</span><br><span class="line">		frame.getContentPane().add(panel_1);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JTree tree = <span class="keyword">new</span> JTree();</span><br><span class="line">		tree.setModel(<span class="keyword">new</span> DefaultTreeModel(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot; &quot;</span>) &#123;</span><br><span class="line">			&#123;</span><br><span class="line">				DefaultMutableTreeNode node_1;</span><br><span class="line">				node_1 = <span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;用户管理&quot;</span>);</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;管理员添加&quot;</span>));</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;用户列表查询&quot;</span>));</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;禁用与启用用户&quot;</span>));</span><br><span class="line">				add(node_1);</span><br><span class="line">				node_1 = <span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;书籍管理&quot;</span>);</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;书籍列表查询&quot;</span>));</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;书籍添加与删除&quot;</span>));</span><br><span class="line">				add(node_1);</span><br><span class="line">				add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;个人信息&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;));</span><br><span class="line">		tree.addTreeSelectionListener(<span class="keyword">new</span> TreeSelectionListener() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueChanged</span><span class="params">(TreeSelectionEvent e)</span> </span>&#123;</span><br><span class="line">				String name = ((DefaultMutableTreeNode) tree.getLastSelectedPathComponent()).toString();</span><br><span class="line">				user = UserController.login(user.getUserName(), user.getPassWord());</span><br><span class="line">				<span class="keyword">if</span> (name.equals(<span class="string">&quot;管理员添加&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;addAdmin&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;用户列表查询&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;searchUserList&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;禁用与启用用户&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;changeUserState&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;书籍列表查询&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;searchBookList&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;书籍添加与删除&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;addAndDeleteBook&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;个人信息&quot;</span>)) &#123;</span><br><span class="line">					panel_2.remove(userInfoSearch);</span><br><span class="line">					userInfoSearch = <span class="keyword">new</span> UserInfoSearch(user);</span><br><span class="line">					panel_2.add(userInfoSearch, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		tree.setBounds(<span class="number">14</span>, <span class="number">13</span>, <span class="number">156</span>, <span class="number">553</span>);</span><br><span class="line">		panel_1.add(tree);</span><br><span class="line"></span><br><span class="line">		panel_2 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_2.setBounds(<span class="number">183</span>, <span class="number">35</span>, <span class="number">875</span>, <span class="number">579</span>);</span><br><span class="line">		frame.getContentPane().add(panel_2);</span><br><span class="line">		panel_2.setLayout(<span class="keyword">new</span> CardLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">		welcomePage = <span class="keyword">new</span> WelcomePage(user.getUserName()); <span class="comment">// 欢迎页面</span></span><br><span class="line">		searchUserList = <span class="keyword">new</span> SearchUserList(); <span class="comment">// 查询用户列表</span></span><br><span class="line">		searchBookList = <span class="keyword">new</span> SearchBookList(); <span class="comment">// 查询书籍列表</span></span><br><span class="line">		addAdmin = <span class="keyword">new</span> AddAdmin(); <span class="comment">// 添加管理员</span></span><br><span class="line">		addAndDeleteBook = <span class="keyword">new</span> AddAndDeleteBook(); <span class="comment">// 增加删除书籍</span></span><br><span class="line">		userInfoSearch = <span class="keyword">new</span> UserInfoSearch(user); <span class="comment">// 用户详细信息</span></span><br><span class="line">		changeUserState = <span class="keyword">new</span> ChangeUserState(user); <span class="comment">// 禁用与启用用户</span></span><br><span class="line"></span><br><span class="line">		panel_2.add(welcomePage, <span class="string">&quot;welcomePage&quot;</span>);</span><br><span class="line">		panel_2.add(searchUserList, <span class="string">&quot;searchUserList&quot;</span>);</span><br><span class="line">		panel_2.add(searchBookList, <span class="string">&quot;searchBookList&quot;</span>);</span><br><span class="line">		panel_2.add(addAdmin, <span class="string">&quot;addAdmin&quot;</span>);</span><br><span class="line">		panel_2.add(addAndDeleteBook, <span class="string">&quot;addAndDeleteBook&quot;</span>);</span><br><span class="line">		panel_2.add(userInfoSearch, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">		panel_2.add(changeUserState, <span class="string">&quot;changeUserState&quot;</span>);</span><br><span class="line"></span><br><span class="line">		cl = (CardLayout) (panel_2.getLayout());</span><br><span class="line">		cl.show(panel_2, <span class="string">&quot;welcomePage&quot;</span>);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="CommonUserPage-java"><a href="#CommonUserPage-java" class="headerlink" title="CommonUserPage.java"></a>CommonUserPage.java</h4><p><strong>普通用户界面</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.CardLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.FlowLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTree;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.TreeSelectionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.swing.event.TreeSelectionListener;</span><br><span class="line"><span class="keyword">import</span> javax.swing.tree.DefaultMutableTreeNode;</span><br><span class="line"><span class="keyword">import</span> javax.swing.tree.DefaultTreeModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.BorrowAndGiveBackPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.SearchBookListPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.SearchUserBorrowInfoPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.UpdataPasswordPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.UpdateBaseInfoPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.UserInfoSearchPage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.common.WelcomePage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonUserPage</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> JFrame frame;</span><br><span class="line">	<span class="keyword">private</span> CardLayout cl;</span><br><span class="line">	JPanel panel_2;</span><br><span class="line">	<span class="keyword">private</span> User user;</span><br><span class="line"></span><br><span class="line">	WelcomePage welcomePage; <span class="comment">// 欢迎页面</span></span><br><span class="line">	SearchBookListPage searchBookList; <span class="comment">// 查询书籍列表</span></span><br><span class="line">	UserInfoSearchPage userInfoSearch; <span class="comment">// 个人信息查询</span></span><br><span class="line">	BorrowAndGiveBackPage borrowAndGiveBackPage; <span class="comment">// 借还书页面</span></span><br><span class="line">	SearchUserBorrowInfoPage searchUserBorrowInfoPage; <span class="comment">// 查询用户借阅信息</span></span><br><span class="line">	UpdataPasswordPage updatePasswordPage; <span class="comment">// 修改密码</span></span><br><span class="line">	UpdateBaseInfoPage updateBaseInfoPage; <span class="comment">// 修改基本信息</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CommonUserPage</span><span class="params">(String name, User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(name);</span><br><span class="line">		<span class="keyword">this</span>.user = user;</span><br><span class="line">		initialize(name);</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Initialize the contents of the frame.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		frame = <span class="keyword">new</span> JFrame(name);</span><br><span class="line">		frame.setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">1076</span>, <span class="number">661</span>);</span><br><span class="line">		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">		frame.setLocationRelativeTo(<span class="keyword">null</span>);<span class="comment">// 窗口在屏幕中间显示</span></span><br><span class="line">		frame.getContentPane().setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		FlowLayout flowLayout = (FlowLayout) panel.getLayout();</span><br><span class="line">		flowLayout.setAlignment(FlowLayout.RIGHT);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1058</span>, <span class="number">38</span>);</span><br><span class="line">		frame.getContentPane().add(panel);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;欢迎&quot;</span> + user.getUserName() + <span class="string">&quot;登录&quot;</span>);</span><br><span class="line">		panel.add(upLabel1);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel2 = <span class="keyword">new</span> JLabel(<span class="string">&quot; | &quot;</span>);</span><br><span class="line">		panel.add(upLabel2);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel3 = <span class="keyword">new</span> JLabel(<span class="string">&quot;退出登录&quot;</span>);</span><br><span class="line">		upLabel3.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">new</span> LoginPage();</span><br><span class="line">				frame.setVisible(<span class="keyword">false</span>);</span><br><span class="line">				dispose();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">		JLabel updatePWLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;密码修改&quot;</span>);</span><br><span class="line">		updatePWLabel.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				user = UserController.login(user.getUserName(), user.getPassWord());</span><br><span class="line">				panel_2.remove(updatePasswordPage);</span><br><span class="line">				updatePasswordPage = <span class="keyword">new</span> UpdataPasswordPage(user);</span><br><span class="line">				panel_2.add(updatePasswordPage, <span class="string">&quot;updatePasswordPage&quot;</span>);</span><br><span class="line">				cl.show(panel_2, <span class="string">&quot;updatePasswordPage&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.add(updatePWLabel);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel2_1 = <span class="keyword">new</span> JLabel(<span class="string">&quot; | &quot;</span>);</span><br><span class="line">		panel.add(upLabel2_1);</span><br><span class="line"></span><br><span class="line">		JLabel updateBILable = <span class="keyword">new</span> JLabel(<span class="string">&quot;个人基础信息修改&quot;</span>);</span><br><span class="line">		updateBILable.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				user = UserController.login(user.getUserName(), user.getPassWord());</span><br><span class="line">				panel_2.remove(updateBaseInfoPage);</span><br><span class="line">				updateBaseInfoPage = <span class="keyword">new</span> UpdateBaseInfoPage(user);</span><br><span class="line">				panel_2.add(updateBaseInfoPage, <span class="string">&quot;updateBaseInfoPage&quot;</span>);</span><br><span class="line">				cl.show(panel_2, <span class="string">&quot;updateBaseInfoPage&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.add(updateBILable);</span><br><span class="line"></span><br><span class="line">		JLabel upLabel2_2 = <span class="keyword">new</span> JLabel(<span class="string">&quot; | &quot;</span>);</span><br><span class="line">		panel.add(upLabel2_2);</span><br><span class="line">		panel.add(upLabel3);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">35</span>, <span class="number">184</span>, <span class="number">579</span>);</span><br><span class="line">		frame.getContentPane().add(panel_1);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JTree tree = <span class="keyword">new</span> JTree();</span><br><span class="line">		tree.setModel(<span class="keyword">new</span> DefaultTreeModel(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot; &quot;</span>) &#123;</span><br><span class="line">			&#123;</span><br><span class="line">				DefaultMutableTreeNode node_1;</span><br><span class="line">				node_1 = <span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;书籍管理&quot;</span>);</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;书籍列表查询&quot;</span>));</span><br><span class="line">				add(node_1);</span><br><span class="line">				node_1 = <span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;借阅管理&quot;</span>);</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;借阅与归还书籍&quot;</span>));</span><br><span class="line">				node_1.add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;个人借阅历史查看&quot;</span>));</span><br><span class="line">				add(node_1);</span><br><span class="line">				add(<span class="keyword">new</span> DefaultMutableTreeNode(<span class="string">&quot;个人信息&quot;</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;));</span><br><span class="line">		tree.addTreeSelectionListener(<span class="keyword">new</span> TreeSelectionListener() &#123;</span><br><span class="line"></span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">valueChanged</span><span class="params">(TreeSelectionEvent e)</span> </span>&#123;</span><br><span class="line">				String name = ((DefaultMutableTreeNode) tree.getLastSelectedPathComponent()).toString();</span><br><span class="line">				user = UserController.login(user.getUserName(), user.getPassWord());</span><br><span class="line">				<span class="keyword">if</span> (name.equals(<span class="string">&quot;书籍列表查询&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;searchBookList&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;借阅与归还书籍&quot;</span>)) &#123;</span><br><span class="line">					panel_2.remove(borrowAndGiveBackPage);</span><br><span class="line">					borrowAndGiveBackPage = <span class="keyword">new</span> BorrowAndGiveBackPage(user);</span><br><span class="line">					panel_2.add(borrowAndGiveBackPage, <span class="string">&quot;borrowAndGiveBackPage&quot;</span>);</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;borrowAndGiveBackPage&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;个人借阅历史查看&quot;</span>)) &#123;</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;searchUserBorrowInfoPage&quot;</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name.equals(<span class="string">&quot;个人信息&quot;</span>)) &#123;</span><br><span class="line">					panel_2.remove(userInfoSearch);</span><br><span class="line">					userInfoSearch = <span class="keyword">new</span> UserInfoSearchPage(user);</span><br><span class="line">					panel_2.add(userInfoSearch, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">					cl.show(panel_2, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		tree.setBounds(<span class="number">14</span>, <span class="number">13</span>, <span class="number">156</span>, <span class="number">553</span>);</span><br><span class="line">		panel_1.add(tree);</span><br><span class="line"></span><br><span class="line">		panel_2 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_2.setBounds(<span class="number">183</span>, <span class="number">35</span>, <span class="number">875</span>, <span class="number">579</span>);</span><br><span class="line">		frame.getContentPane().add(panel_2);</span><br><span class="line">		panel_2.setLayout(<span class="keyword">new</span> CardLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">		welcomePage = <span class="keyword">new</span> WelcomePage(user.getUserName()); <span class="comment">// 欢迎页面</span></span><br><span class="line">		<span class="comment">// SearchUserList searchUserList = new SearchUserList();</span></span><br><span class="line">		searchBookList = <span class="keyword">new</span> SearchBookListPage(); <span class="comment">// 查询书籍列表</span></span><br><span class="line">		<span class="comment">// AddAdmin addAdmin = new AddAdmin();</span></span><br><span class="line">		<span class="comment">// AddAndDeleteBook addAndDeleteBook = new AddAndDeleteBook();</span></span><br><span class="line">		userInfoSearch = <span class="keyword">new</span> UserInfoSearchPage(user); <span class="comment">// 个人信息查询</span></span><br><span class="line">		borrowAndGiveBackPage = <span class="keyword">new</span> BorrowAndGiveBackPage(user); <span class="comment">// 借还书页面</span></span><br><span class="line">		searchUserBorrowInfoPage = <span class="keyword">new</span> SearchUserBorrowInfoPage(); <span class="comment">// 查询用户借阅信息</span></span><br><span class="line">		updatePasswordPage = <span class="keyword">new</span> UpdataPasswordPage(user); <span class="comment">// 修改密码</span></span><br><span class="line">		updateBaseInfoPage = <span class="keyword">new</span> UpdateBaseInfoPage(user); <span class="comment">// 修改基本信息</span></span><br><span class="line"></span><br><span class="line">		panel_2.add(welcomePage, <span class="string">&quot;welcomePage&quot;</span>);</span><br><span class="line">		<span class="comment">// panel_2.add(searchUserList, &quot;searchUserList&quot;);</span></span><br><span class="line">		panel_2.add(searchBookList, <span class="string">&quot;searchBookList&quot;</span>);</span><br><span class="line">		<span class="comment">// panel_2.add(addAdmin, &quot;addAdmin&quot;);</span></span><br><span class="line">		<span class="comment">// panel_2.add(addAndDeleteBook, &quot;addAndDeleteBook&quot;);</span></span><br><span class="line">		panel_2.add(userInfoSearch, <span class="string">&quot;userInfoSearch&quot;</span>);</span><br><span class="line">		panel_2.add(borrowAndGiveBackPage, <span class="string">&quot;borrowAndGiveBackPage&quot;</span>);</span><br><span class="line">		panel_2.add(searchUserBorrowInfoPage, <span class="string">&quot;searchUserBorrowInfoPage&quot;</span>);</span><br><span class="line">		panel_2.add(updatePasswordPage, <span class="string">&quot;updatePasswordPage&quot;</span>);</span><br><span class="line">		panel_2.add(updateBaseInfoPage, <span class="string">&quot;UpdateBaseInfoPage&quot;</span>);</span><br><span class="line"></span><br><span class="line">		cl = (CardLayout) (panel_2.getLayout());</span><br><span class="line">		cl.show(panel_2, <span class="string">&quot;welcomePage&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="smallPage-admin包内各面板的创建"><a href="#smallPage-admin包内各面板的创建" class="headerlink" title="smallPage.admin包内各面板的创建"></a>smallPage.admin包内各面板的创建</h4><h5 id="WelcomePage-java"><a href="#WelcomePage-java" class="headerlink" title="WelcomePage.java"></a>WelcomePage.java</h5><p><strong>欢迎面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WelcomePage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">WelcomePage</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">1000</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">		JLabel label = <span class="keyword">new</span> JLabel(<span class="string">&quot;尊敬的管理员 &quot;</span> +name +<span class="string">&quot; 您好，欢迎来到小波图书管理系统&quot;</span>);</span><br><span class="line">		label.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">31</span>));</span><br><span class="line">		label.setBounds(<span class="number">35</span>, <span class="number">147</span>, <span class="number">888</span>, <span class="number">125</span>);</span><br><span class="line">		add(label);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="AddAdmin-java"><a href="#AddAdmin-java" class="headerlink" title="AddAdmin.java"></a>AddAdmin.java</h5><p><strong>添加管理员面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPasswordField;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddAdmin</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField userNameField;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AddAdmin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">1000</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		userNameLabel.setBounds(<span class="number">143</span>, <span class="number">57</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		add(userNameLabel);</span><br><span class="line"></span><br><span class="line">		JLabel passwordLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;密   码：&quot;</span>);</span><br><span class="line">		passwordLabel.setBounds(<span class="number">143</span>, <span class="number">114</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		add(passwordLabel);</span><br><span class="line"></span><br><span class="line">		userNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userNameField.setBounds(<span class="number">259</span>, <span class="number">54</span>, <span class="number">132</span>, <span class="number">24</span>);</span><br><span class="line">		add(userNameField);</span><br><span class="line">		userNameField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		passwordField = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField.setBounds(<span class="number">259</span>, <span class="number">111</span>, <span class="number">132</span>, <span class="number">24</span>);</span><br><span class="line">		add(passwordField);</span><br><span class="line"></span><br><span class="line">		JButton button = <span class="keyword">new</span> JButton(<span class="string">&quot;添   加&quot;</span>);</span><br><span class="line">		button.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String userName = userNameField.getText();</span><br><span class="line">				String password = <span class="keyword">new</span> String(passwordField.getPassword());</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (userName.equals(<span class="string">&quot;&quot;</span>) || userName == <span class="keyword">null</span> || password.equals(<span class="string">&quot;&quot;</span>) || password == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;数据未填写完整，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(button, <span class="string">&quot;数据未填写完整，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					User us = <span class="keyword">new</span> User(userName, password, -<span class="number">1</span>, <span class="string">&quot;未知&quot;</span>, <span class="string">&quot;未知&quot;</span>, <span class="string">&quot;未知&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">					<span class="keyword">boolean</span> flag = UserController.register(us);</span><br><span class="line">					<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">						JOptionPane.showMessageDialog(button, <span class="string">&quot;添加管理员成功&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						JOptionPane.showMessageDialog(button, <span class="string">&quot;添加管理员失败&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				passwordField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button.setBounds(<span class="number">221</span>, <span class="number">215</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		add(button);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="AddAndDeleteBook-java"><a href="#AddAndDeleteBook-java" class="headerlink" title="AddAndDeleteBook.java"></a>AddAndDeleteBook.java</h5><p><strong>添加和删除书籍面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.BookController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JComboBox;</span><br><span class="line"><span class="keyword">import</span> javax.swing.DefaultComboBoxModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddAndDeleteBook</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookIdField1;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNameField1;</span><br><span class="line">	<span class="keyword">private</span> JTextField authorField;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNumField;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookIdField2;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNameField2;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">AddAndDeleteBook</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">966</span>, <span class="number">626</span>);</span><br><span class="line">		add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JLabel deleteLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;添   书&quot;</span>);</span><br><span class="line">		deleteLabel.setBounds(<span class="number">138</span>, <span class="number">25</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(deleteLabel);</span><br><span class="line"></span><br><span class="line">		JLabel addBookLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;删   书&quot;</span>);</span><br><span class="line">		addBookLabel.setBounds(<span class="number">446</span>, <span class="number">116</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(addBookLabel);</span><br><span class="line"></span><br><span class="line">		JLabel bookIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书籍编号：&quot;</span>);</span><br><span class="line">		bookIdLabel.setBounds(<span class="number">77</span>, <span class="number">73</span>, <span class="number">102</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookIdLabel);</span><br><span class="line"></span><br><span class="line">		JLabel bookIdLabel1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;书籍编号：&quot;</span>);</span><br><span class="line">		bookIdLabel1.setBounds(<span class="number">394</span>, <span class="number">198</span>, <span class="number">96</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookIdLabel1);</span><br><span class="line"></span><br><span class="line">		JLabel bookNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书  名：&quot;</span>);</span><br><span class="line">		bookNameLabel.setBounds(<span class="number">88</span>, <span class="number">132</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookNameLabel);</span><br><span class="line"></span><br><span class="line">		JLabel bookNameLabel1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;书  名：&quot;</span>);</span><br><span class="line">		bookNameLabel1.setBounds(<span class="number">403</span>, <span class="number">285</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookNameLabel1);</span><br><span class="line"></span><br><span class="line">		JLabel bookAuthorLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;作  者：&quot;</span>);</span><br><span class="line">		bookAuthorLabel.setBounds(<span class="number">88</span>, <span class="number">198</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookAuthorLabel);</span><br><span class="line"></span><br><span class="line">		JLabel bookCategoryLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;类  别：&quot;</span>);</span><br><span class="line">		bookCategoryLabel.setBounds(<span class="number">88</span>, <span class="number">335</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookCategoryLabel);</span><br><span class="line"></span><br><span class="line">		JLabel bookNumLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;数  量：&quot;</span>);</span><br><span class="line">		bookNumLabel.setBounds(<span class="number">88</span>, <span class="number">268</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookNumLabel);</span><br><span class="line"></span><br><span class="line">		bookIdField1 = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookIdField1.setBounds(<span class="number">193</span>, <span class="number">70</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookIdField1);</span><br><span class="line">		bookIdField1.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		bookIdField2 = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookIdField2.setColumns(<span class="number">10</span>);</span><br><span class="line">		bookIdField2.setBounds(<span class="number">504</span>, <span class="number">195</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookIdField2);</span><br><span class="line"></span><br><span class="line">		bookNameField1 = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNameField1.setBounds(<span class="number">193</span>, <span class="number">129</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookNameField1);</span><br><span class="line">		bookNameField1.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		bookNameField2 = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNameField2.setColumns(<span class="number">10</span>);</span><br><span class="line">		bookNameField2.setBounds(<span class="number">504</span>, <span class="number">282</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookNameField2);</span><br><span class="line"></span><br><span class="line">		authorField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		authorField.setBounds(<span class="number">193</span>, <span class="number">195</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(authorField);</span><br><span class="line">		authorField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		bookNumField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNumField.setBounds(<span class="number">193</span>, <span class="number">265</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookNumField);</span><br><span class="line">		bookNumField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JComboBox bookCategoryComboBox = <span class="keyword">new</span> JComboBox();</span><br><span class="line">		bookCategoryComboBox.setModel(<span class="keyword">new</span> DefaultComboBoxModel(<span class="keyword">new</span> String[] &#123; <span class="string">&quot;政治&quot;</span>, <span class="string">&quot;计算机科学&quot;</span>, <span class="string">&quot;文学&quot;</span> &#125;));</span><br><span class="line">		bookCategoryComboBox.setBounds(<span class="number">193</span>, <span class="number">332</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookCategoryComboBox);</span><br><span class="line"></span><br><span class="line">		JButton addButton = <span class="keyword">new</span> JButton(<span class="string">&quot;增加书籍&quot;</span>);</span><br><span class="line">		addButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookId = bookIdField1.getText();</span><br><span class="line">				String bookName = bookNameField1.getText();</span><br><span class="line">				String author = authorField.getText();</span><br><span class="line">				String bookNum = bookNumField.getText();</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (bookId.equals(<span class="string">&quot;&quot;</span>) || bookId == <span class="keyword">null</span> || bookName.equals(<span class="string">&quot;&quot;</span>) || bookName == <span class="keyword">null</span> || author.equals(<span class="string">&quot;&quot;</span>)</span><br><span class="line">						|| author == <span class="keyword">null</span> || bookNum.equals(<span class="string">&quot;&quot;</span>) || bookNum == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全输入数据，添加失败！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(addButton, <span class="string">&quot;未完全输入数据，添加失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookIdNum = Integer.parseInt(bookId);</span><br><span class="line">					<span class="keyword">int</span> bookNumn = Integer.parseInt(bookNum);</span><br><span class="line">					<span class="keyword">int</span> bookCategory = bookCategoryComboBox.getSelectedIndex() + <span class="number">1</span>;</span><br><span class="line">					Book bo = <span class="keyword">new</span> Book(bookIdNum,bookName,author,bookNumn,bookCategory,<span class="number">0</span>);</span><br><span class="line">					<span class="keyword">boolean</span> flag = BookController.addBook(bo);</span><br><span class="line">					<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;添加书籍成功&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(addButton, <span class="string">&quot;添加书籍成功&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;添加书籍失败&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(addButton, <span class="string">&quot;添加书籍失败&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				bookIdField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				bookNameField1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				authorField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				bookNumField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		addButton.setBounds(<span class="number">109</span>, <span class="number">439</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(addButton);</span><br><span class="line"></span><br><span class="line">		JButton deleteButton = <span class="keyword">new</span> JButton(<span class="string">&quot;删除书籍&quot;</span>);</span><br><span class="line">		deleteButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookId = bookIdField2.getText();</span><br><span class="line">				String bookName = bookNameField2.getText();</span><br><span class="line">				<span class="keyword">if</span>(bookId.equals(<span class="string">&quot;&quot;</span>) || bookId == <span class="keyword">null</span> || bookName.equals(<span class="string">&quot;&quot;</span>) || bookName == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全输入数据，添加失败！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(deleteButton, <span class="string">&quot;未完全输入数据，添加失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookIdNum = Integer.parseInt(bookId);</span><br><span class="line">					<span class="keyword">boolean</span> flag = BookController.deleteBook(bookIdNum, bookName);</span><br><span class="line">					<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;删除书籍成功&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(deleteButton, <span class="string">&quot;删除书籍成功&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">						</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(deleteButton, <span class="string">&quot;删除失败&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				bookIdField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				bookNameField2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		deleteButton.setBounds(<span class="number">634</span>, <span class="number">238</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(deleteButton);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="ChangeUserState-java"><a href="#ChangeUserState-java" class="headerlink" title="ChangeUserState.java"></a>ChangeUserState.java</h5><p><strong>更改用户状态面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChangeUserState</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField userIdField;</span><br><span class="line">	<span class="keyword">private</span> JTextField userNameField;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ChangeUserState</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JLabel userIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户ID:&quot;</span>);</span><br><span class="line">		userIdLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userIdLabel.setBounds(<span class="number">141</span>, <span class="number">100</span>, <span class="number">123</span>, <span class="number">37</span>);</span><br><span class="line">		add(userIdLabel);</span><br><span class="line"></span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户名：&quot;</span>);</span><br><span class="line">		userNameLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userNameLabel.setBounds(<span class="number">141</span>, <span class="number">207</span>, <span class="number">102</span>, <span class="number">37</span>);</span><br><span class="line">		add(userNameLabel);</span><br><span class="line"></span><br><span class="line">		JButton stopButton = <span class="keyword">new</span> JButton(<span class="string">&quot;禁  用&quot;</span>);</span><br><span class="line">		stopButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String userIdS = userIdField.getText();</span><br><span class="line">				String userName = userNameField.getText();</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (userIdS.equals(<span class="string">&quot;&quot;</span>) || userIdS == <span class="keyword">null</span> || userName.equals(<span class="string">&quot;&quot;</span>) || userName == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全填写数据，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(stopButton, <span class="string">&quot;未完全填写数据，请重新输入！！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> userId = Integer.parseInt(userIdS);</span><br><span class="line">					<span class="keyword">boolean</span> flag = UserController.changeUserState(userId, <span class="number">1</span>);</span><br><span class="line">					<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;禁用账号成功！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(stopButton, <span class="string">&quot;禁用账号成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;禁用账号失败！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(stopButton, <span class="string">&quot;禁用账号失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				userIdField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		stopButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		stopButton.setBounds(<span class="number">106</span>, <span class="number">321</span>, <span class="number">122</span>, <span class="number">44</span>);</span><br><span class="line">		add(stopButton);</span><br><span class="line"></span><br><span class="line">		JButton startButton = <span class="keyword">new</span> JButton(<span class="string">&quot;启  用&quot;</span>);</span><br><span class="line">		startButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String userIdS = userIdField.getText();</span><br><span class="line">				String userName = userNameField.getText();</span><br><span class="line"></span><br><span class="line">				<span class="keyword">if</span> (userIdS.equals(<span class="string">&quot;&quot;</span>) || userIdS == <span class="keyword">null</span> || userName.equals(<span class="string">&quot;&quot;</span>) || userName == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全填写数据，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(startButton, <span class="string">&quot;未完全填写数据，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> userId = Integer.parseInt(userIdS);</span><br><span class="line">					<span class="keyword">boolean</span> flag = UserController.changeUserState(userId, <span class="number">0</span>);</span><br><span class="line">					<span class="keyword">if</span> (flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;启用账号成功！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(startButton, <span class="string">&quot;启用账号成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;启用账号失败！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(startButton, <span class="string">&quot;启用账号失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				userIdField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				userNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		startButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		startButton.setBounds(<span class="number">322</span>, <span class="number">321</span>, <span class="number">123</span>, <span class="number">44</span>);</span><br><span class="line">		add(startButton);</span><br><span class="line"></span><br><span class="line">		userIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userIdField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userIdField.setBounds(<span class="number">278</span>, <span class="number">102</span>, <span class="number">136</span>, <span class="number">31</span>);</span><br><span class="line">		add(userIdField);</span><br><span class="line">		userIdField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		userNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userNameField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userNameField.setBounds(<span class="number">278</span>, <span class="number">207</span>, <span class="number">136</span>, <span class="number">37</span>);</span><br><span class="line">		add(userNameField);</span><br><span class="line">		userNameField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="SearchBookList-java"><a href="#SearchBookList-java" class="headerlink" title="SearchBookList.java"></a>SearchBookList.java</h5><p><strong>查询书籍列表面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JScrollPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTable;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableCellRenderer;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.JTableHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.BookController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchBookList</span> <span class="keyword">extends</span> <span class="title">JPanel</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> JTextField bookIdField;</span><br><span class="line">	<span class="keyword">private</span> Object[] columnNames = &#123; <span class="string">&quot;书籍编号&quot;</span>, <span class="string">&quot;书名&quot;</span>, <span class="string">&quot;作者&quot;</span>, <span class="string">&quot;剩余数量&quot;</span>, <span class="string">&quot;类别&quot;</span>, <span class="string">&quot;是否可借阅&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> Object[][] rowData;</span><br><span class="line">	JScrollPane scrollpane;</span><br><span class="line">	JTable table;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNameField;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SearchBookList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">881</span>, <span class="number">586</span>);</span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">876</span>, <span class="number">62</span>);</span><br><span class="line">		add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		bookIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookIdField.setBounds(<span class="number">320</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookIdField);</span><br><span class="line">		bookIdField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JLabel bookIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书籍编号：&quot;</span>);</span><br><span class="line">		bookIdLabel.setBounds(<span class="number">236</span>, <span class="number">28</span>, <span class="number">92</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookIdLabel);</span><br><span class="line"></span><br><span class="line">		JButton SearchbButton = <span class="keyword">new</span> JButton(<span class="string">&quot;搜  索&quot;</span>);</span><br><span class="line">		SearchbButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookIdString = bookIdField.getText();</span><br><span class="line">				String bookNameString = bookNameField.getText();</span><br><span class="line">				<span class="keyword">if</span>(bookIdString.equals(<span class="string">&quot;&quot;</span>) || bookIdString == <span class="keyword">null</span> || bookNameString.equals(<span class="string">&quot;&quot;</span>) || bookNameString == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;查询内容未填写完整！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;查询内容未填写完整！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookId = Integer.parseInt(bookIdString);</span><br><span class="line">					String bookName = bookNameString;</span><br><span class="line">					</span><br><span class="line">					Book bo = BookController.findBook(bookId, bookName);</span><br><span class="line">					<span class="keyword">if</span>(bo != <span class="keyword">null</span>) &#123;</span><br><span class="line">						rowData = <span class="keyword">new</span> Object[<span class="number">1</span>][<span class="number">6</span>];</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">0</span>] = bo.getBookId();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">1</span>] = bo.getBookName();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">2</span>] = bo.getBookAuthor();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">3</span>] = bo.getBookNum();</span><br><span class="line">						</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">4</span>] = BookController.findBookCategory(bo.getBookCategory());</span><br><span class="line">						<span class="keyword">if</span>(bo.getBookState() == <span class="number">0</span>) &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">5</span>] = <span class="string">&quot;可借阅&quot;</span>;</span><br><span class="line">						&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">5</span>] = <span class="string">&quot;不可借阅&quot;</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						</span><br><span class="line">						table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;没有此书！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;没有此书！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		SearchbButton.setBounds(<span class="number">663</span>, <span class="number">24</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(SearchbButton);</span><br><span class="line"></span><br><span class="line">		JButton AllBookbutton = <span class="keyword">new</span> JButton(<span class="string">&quot;显示所有书籍&quot;</span>);</span><br><span class="line">		AllBookbutton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				List&lt;Book&gt; list = BookController.findBookList();</span><br><span class="line">				rowData = <span class="keyword">new</span> Object[list.size()][<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">				<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (Book bo : list) &#123;</span><br><span class="line">					rowData[i][<span class="number">0</span>] = bo.getBookId();</span><br><span class="line">					rowData[i][<span class="number">1</span>] = bo.getBookName();</span><br><span class="line">					rowData[i][<span class="number">2</span>] = bo.getBookAuthor();</span><br><span class="line">					rowData[i][<span class="number">3</span>] = bo.getBookNum();</span><br><span class="line">					</span><br><span class="line">					rowData[i][<span class="number">4</span>] = BookController.findBookCategory(bo.getBookCategory());</span><br><span class="line">					<span class="keyword">if</span>(bo.getBookState() == <span class="number">0</span>) &#123;</span><br><span class="line">						rowData[i][<span class="number">5</span>] = <span class="string">&quot;可借阅&quot;</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						rowData[i][<span class="number">5</span>] = <span class="string">&quot;不可借阅&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">				table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		AllBookbutton.setBounds(<span class="number">56</span>, <span class="number">24</span>, <span class="number">128</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(AllBookbutton);</span><br><span class="line">		</span><br><span class="line">		JLabel bookNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书  名：&quot;</span>);</span><br><span class="line">		bookNameLabel.setBounds(<span class="number">445</span>, <span class="number">28</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookNameLabel);</span><br><span class="line">		</span><br><span class="line">		bookNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNameField.setBounds(<span class="number">523</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookNameField);</span><br><span class="line">		bookNameField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">62</span>, <span class="number">876</span>, <span class="number">522</span>);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		add(panel_1);</span><br><span class="line"></span><br><span class="line">		table = <span class="keyword">new</span> JTable(rowData,columnNames);</span><br><span class="line">		table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">		table.setBounds(<span class="number">25</span>, <span class="number">13</span>, <span class="number">781</span>, <span class="number">349</span>);</span><br><span class="line">		</span><br><span class="line">		DefaultTableCellRenderer r   = <span class="keyword">new</span> DefaultTableCellRenderer(); <span class="comment">// 表格内容居中</span></span><br><span class="line">		r.setHorizontalAlignment(JLabel.CENTER);   </span><br><span class="line">		table.setDefaultRenderer(Object.class, r);</span><br><span class="line">		</span><br><span class="line">		JTableHeader jTableHeader = table.getTableHeader();</span><br><span class="line">		panel_1.add(jTableHeader,BorderLayout.NORTH);</span><br><span class="line">		panel_1.add(table,BorderLayout.CENTER);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="SearchUserList-java"><a href="#SearchUserList-java" class="headerlink" title="SearchUserList.java"></a>SearchUserList.java</h5><p><strong>查询用户列表面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JScrollPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTable;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableCellRenderer;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.JTableHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchUserList</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField userIdField;</span><br><span class="line">	<span class="keyword">private</span> Object[] columnNames = &#123; <span class="string">&quot;用户ID&quot;</span>, <span class="string">&quot;用户名&quot;</span>, <span class="string">&quot;密码&quot;</span>, <span class="string">&quot;年龄&quot;</span>, <span class="string">&quot;性别&quot;</span>, <span class="string">&quot;手机号&quot;</span>, <span class="string">&quot;地址&quot;</span>, <span class="string">&quot;账号状态&quot;</span> &#125;;</span><br><span class="line">	<span class="keyword">private</span> Object[][] rowData;</span><br><span class="line">	JScrollPane scrollpane;</span><br><span class="line">	JTable table;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SearchUserList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">881</span>, <span class="number">586</span>);</span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">876</span>, <span class="number">62</span>);</span><br><span class="line">		add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		userIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userIdField.setBounds(<span class="number">515</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(userIdField);</span><br><span class="line">		userIdField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JLabel userIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户 ID：&quot;</span>);</span><br><span class="line">		userIdLabel.setBounds(<span class="number">444</span>, <span class="number">28</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(userIdLabel);</span><br><span class="line"></span><br><span class="line">		JButton SearchbButton = <span class="keyword">new</span> JButton(<span class="string">&quot;搜  索&quot;</span>);</span><br><span class="line">		SearchbButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String userIdString = userIdField.getText();</span><br><span class="line">				<span class="keyword">if</span>(userIdString.equals(<span class="string">&quot;&quot;</span>) || userIdString == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未填写用户ID&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;未填写用户ID&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> userId = Integer.parseInt(userIdString);</span><br><span class="line">					User us = UserController.findUser(userId);</span><br><span class="line">					<span class="keyword">if</span>(us != <span class="keyword">null</span>) &#123;</span><br><span class="line">						rowData = <span class="keyword">new</span> Object[<span class="number">1</span>][<span class="number">8</span>];</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">0</span>] = us.getUserId();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">1</span>] = us.getUserName();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">2</span>] = us.getPassWord();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">3</span>] = us.getAge();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">4</span>] = us.getGender();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">5</span>] = us.getPhone();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">6</span>] = us.getAddress();</span><br><span class="line"></span><br><span class="line">						<span class="keyword">if</span> (us.getUserState() == <span class="number">0</span>) &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">7</span>] = <span class="string">&quot;正常&quot;</span>;</span><br><span class="line">						&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">7</span>] = <span class="string">&quot;禁用&quot;</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;没有此用户！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;没有此用户！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		SearchbButton.setBounds(<span class="number">663</span>, <span class="number">24</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(SearchbButton);</span><br><span class="line"></span><br><span class="line">		JButton AllUserbutton = <span class="keyword">new</span> JButton(<span class="string">&quot;显示所有用户&quot;</span>);</span><br><span class="line">		AllUserbutton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				List&lt;User&gt; list = UserController.findCommonUser();</span><br><span class="line">				rowData = <span class="keyword">new</span> Object[list.size()][<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line">				<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (User us : list) &#123;</span><br><span class="line">					rowData[i][<span class="number">0</span>] = us.getUserId();</span><br><span class="line">					rowData[i][<span class="number">1</span>] = us.getUserName();</span><br><span class="line">					rowData[i][<span class="number">2</span>] = us.getPassWord();</span><br><span class="line">					rowData[i][<span class="number">3</span>] = us.getAge();</span><br><span class="line">					rowData[i][<span class="number">4</span>] = us.getGender();</span><br><span class="line">					rowData[i][<span class="number">5</span>] = us.getPhone();</span><br><span class="line">					rowData[i][<span class="number">6</span>] = us.getAddress();</span><br><span class="line"></span><br><span class="line">					<span class="keyword">if</span> (us.getUserState() == <span class="number">0</span>) &#123;</span><br><span class="line">						rowData[i][<span class="number">7</span>] = <span class="string">&quot;正常&quot;</span>;</span><br><span class="line">					&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">						rowData[i][<span class="number">7</span>] = <span class="string">&quot;禁用&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">				table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		AllUserbutton.setBounds(<span class="number">56</span>, <span class="number">24</span>, <span class="number">128</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(AllUserbutton);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">62</span>, <span class="number">876</span>, <span class="number">522</span>);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		add(panel_1);</span><br><span class="line"></span><br><span class="line">		table = <span class="keyword">new</span> JTable(rowData,columnNames);</span><br><span class="line">		table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">		table.setBounds(<span class="number">25</span>, <span class="number">13</span>, <span class="number">781</span>, <span class="number">349</span>);</span><br><span class="line">		</span><br><span class="line">		DefaultTableCellRenderer r   = <span class="keyword">new</span> DefaultTableCellRenderer(); <span class="comment">// 表格内容居中</span></span><br><span class="line">		r.setHorizontalAlignment(JLabel.CENTER);   </span><br><span class="line">		table.setDefaultRenderer(Object.class, r);</span><br><span class="line">		</span><br><span class="line">		JTableHeader jTableHeader = table.getTableHeader();</span><br><span class="line">		panel_1.add(jTableHeader,BorderLayout.NORTH);</span><br><span class="line">		panel_1.add(table,BorderLayout.CENTER);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="UserInfoSearch-java"><a href="#UserInfoSearch-java" class="headerlink" title="UserInfoSearch.java"></a>UserInfoSearch.java</h5><p><strong>用户详细信息查询面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.admin;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoSearch</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	User user;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserInfoSearch</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.user = user;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		String userId = <span class="string">&quot;用户ID：&quot;</span> + user.getUserId();</span><br><span class="line">		String userName = <span class="string">&quot;用户名：&quot;</span> + user.getUserName();</span><br><span class="line">		String age = <span class="string">&quot;年龄：&quot;</span> + user.getAge();</span><br><span class="line">		String gender = <span class="string">&quot;性别：&quot;</span> + user.getGender();</span><br><span class="line">		String phone = <span class="string">&quot;电话：&quot;</span> + user.getPhone();</span><br><span class="line">		String address = <span class="string">&quot;地址：&quot;</span> + user.getAddress();</span><br><span class="line">		String userState = <span class="string">&quot;用户状态：&quot;</span> + (user.getUserState() == <span class="number">0</span> ? <span class="string">&quot;正常&quot;</span> : <span class="string">&quot;禁用&quot;</span>);</span><br><span class="line">		String userRole = <span class="string">&quot;用户类别：&quot;</span> + (user.getRole() == <span class="number">0</span> ? <span class="string">&quot;管理员&quot;</span> : <span class="string">&quot;普通用户&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		JLabel userIdLabel = <span class="keyword">new</span> JLabel(userId);</span><br><span class="line">		userIdLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userIdLabel.setBounds(<span class="number">142</span>, <span class="number">65</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(userIdLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(userName);</span><br><span class="line">		userNameLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userNameLabel.setBounds(<span class="number">440</span>, <span class="number">65</span>, <span class="number">299</span>, <span class="number">37</span>);</span><br><span class="line">		add(userNameLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel ageLabel = <span class="keyword">new</span> JLabel(age);</span><br><span class="line">		ageLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		ageLabel.setBounds(<span class="number">142</span>, <span class="number">175</span>, <span class="number">200</span>, <span class="number">42</span>);</span><br><span class="line">		add(ageLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel phoneLabel = <span class="keyword">new</span> JLabel(phone);</span><br><span class="line">		phoneLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		phoneLabel.setBounds(<span class="number">142</span>, <span class="number">284</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(phoneLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel addressLabel = <span class="keyword">new</span> JLabel(address);</span><br><span class="line">		addressLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		addressLabel.setBounds(<span class="number">440</span>, <span class="number">279</span>, <span class="number">213</span>, <span class="number">46</span>);</span><br><span class="line">		add(addressLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userStateLabel = <span class="keyword">new</span> JLabel(userState);</span><br><span class="line">		userStateLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userStateLabel.setBounds(<span class="number">142</span>, <span class="number">393</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(userStateLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userRoleLabel = <span class="keyword">new</span> JLabel(userRole);</span><br><span class="line">		userRoleLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userRoleLabel.setBounds(<span class="number">440</span>, <span class="number">393</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(userRoleLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel genderLabel = <span class="keyword">new</span> JLabel(gender);</span><br><span class="line">		genderLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		genderLabel.setBounds(<span class="number">440</span>, <span class="number">178</span>, <span class="number">213</span>, <span class="number">37</span>);</span><br><span class="line">		add(genderLabel);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="smallPage-common包内各面板的创建"><a href="#smallPage-common包内各面板的创建" class="headerlink" title="smallPage.common包内各面板的创建"></a>smallPage.common包内各面板的创建</h4><h5 id="WelcomePage-java-1"><a href="#WelcomePage-java-1" class="headerlink" title="WelcomePage.java"></a>WelcomePage.java</h5><p><strong>欢迎面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WelcomePage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">WelcomePage</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">1000</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line">		JLabel label = <span class="keyword">new</span> JLabel(name + <span class="string">&quot; 您好，欢迎来到小波图书管理系统&quot;</span>);</span><br><span class="line">		label.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">31</span>));</span><br><span class="line">		label.setBounds(<span class="number">183</span>, <span class="number">144</span>, <span class="number">557</span>, <span class="number">125</span>);</span><br><span class="line">		add(label);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="BorrowAndGiveBackPage-java"><a href="#BorrowAndGiveBackPage-java" class="headerlink" title="BorrowAndGiveBackPage.java"></a>BorrowAndGiveBackPage.java</h5><p><strong>借还书面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.BookController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorrowAndGiveBackPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookIdField;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNameField;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BorrowAndGiveBackPage</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		JLabel bookIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书籍编号：&quot;</span>);</span><br><span class="line">		bookIdLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		bookIdLabel.setBounds(<span class="number">86</span>, <span class="number">167</span>, <span class="number">130</span>, <span class="number">36</span>);</span><br><span class="line">		add(bookIdLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel bookNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书  名：&quot;</span>);</span><br><span class="line">		bookNameLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		bookNameLabel.setBounds(<span class="number">101</span>, <span class="number">268</span>, <span class="number">125</span>, <span class="number">50</span>);</span><br><span class="line">		add(bookNameLabel);</span><br><span class="line">		</span><br><span class="line">		bookIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookIdField.setBounds(<span class="number">240</span>, <span class="number">175</span>, <span class="number">143</span>, <span class="number">24</span>);</span><br><span class="line">		add(bookIdField);</span><br><span class="line">		bookIdField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		bookNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNameField.setBounds(<span class="number">240</span>, <span class="number">283</span>, <span class="number">143</span>, <span class="number">24</span>);</span><br><span class="line">		add(bookNameField);</span><br><span class="line">		bookNameField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		JButton borrowButton = <span class="keyword">new</span> JButton(<span class="string">&quot;借   书&quot;</span>);</span><br><span class="line">		borrowButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookName = bookNameField.getText();</span><br><span class="line">				String bookId = bookIdField.getText();</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(bookName.equals(<span class="string">&quot;&quot;</span>) || bookName == <span class="keyword">null</span> || bookId.equals(<span class="string">&quot;&quot;</span>) || bookId == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全输入数据，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(borrowButton, <span class="string">&quot;未完全输入数据，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookIdNum = Integer.parseInt(bookId);</span><br><span class="line">					<span class="keyword">boolean</span> flag = BookController.borrowBook(user.getUserId(), bookIdNum, bookName);</span><br><span class="line">					<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;借书成功！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(borrowButton, <span class="string">&quot;借书成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;借书失败！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(borrowButton, <span class="string">&quot;借书失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				bookNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				bookIdField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		borrowButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">21</span>));</span><br><span class="line">		borrowButton.setBounds(<span class="number">69</span>, <span class="number">380</span>, <span class="number">125</span>, <span class="number">36</span>);</span><br><span class="line">		add(borrowButton);</span><br><span class="line">		</span><br><span class="line">		JButton giveBackButton = <span class="keyword">new</span> JButton(<span class="string">&quot;还   书&quot;</span>);</span><br><span class="line">		giveBackButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookName = bookNameField.getText();</span><br><span class="line">				String bookId = bookIdField.getText();</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(bookName.equals(<span class="string">&quot;&quot;</span>) || bookName == <span class="keyword">null</span> || bookId.equals(<span class="string">&quot;&quot;</span>) || bookId == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;未完全输入数据，请重新输入！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(giveBackButton, <span class="string">&quot;未完全输入数据，请重新输入！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookIdNum = Integer.parseInt(bookId);</span><br><span class="line">					<span class="keyword">boolean</span> flag = BookController.giveBackBook(user.getUserId(), bookIdNum, bookName);</span><br><span class="line">					<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;还书成功！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(giveBackButton, <span class="string">&quot;还书成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;还书失败！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(giveBackButton, <span class="string">&quot;还书失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				bookNameField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				bookIdField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		giveBackButton.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">21</span>));</span><br><span class="line">		giveBackButton.setBounds(<span class="number">285</span>, <span class="number">378</span>, <span class="number">125</span>, <span class="number">38</span>);</span><br><span class="line">		add(giveBackButton);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="SearchBookListPage-java"><a href="#SearchBookListPage-java" class="headerlink" title="SearchBookListPage.java"></a>SearchBookListPage.java</h5><p><strong>查询书籍列表面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.EventQueue;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JScrollPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTable;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableCellRenderer;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.JTableHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.BookController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchBookListPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> JTextField bookIdField;</span><br><span class="line">	<span class="keyword">private</span> Object[] columnNames = &#123; <span class="string">&quot;书籍编号&quot;</span>, <span class="string">&quot;书名&quot;</span>, <span class="string">&quot;作者&quot;</span>, <span class="string">&quot;剩余数量&quot;</span>, <span class="string">&quot;类别&quot;</span>, <span class="string">&quot;是否可借阅&quot;</span>&#125;;</span><br><span class="line">	<span class="keyword">private</span> Object[][] rowData;</span><br><span class="line">	JScrollPane scrollpane;</span><br><span class="line">	JTable table;</span><br><span class="line">	<span class="keyword">private</span> JTextField bookNameField;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Create the application.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SearchBookListPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">881</span>, <span class="number">586</span>);</span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">876</span>, <span class="number">62</span>);</span><br><span class="line">		add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		bookIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookIdField.setBounds(<span class="number">320</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookIdField);</span><br><span class="line">		bookIdField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JLabel bookIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书籍编号：&quot;</span>);</span><br><span class="line">		bookIdLabel.setBounds(<span class="number">236</span>, <span class="number">28</span>, <span class="number">92</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookIdLabel);</span><br><span class="line"></span><br><span class="line">		JButton SearchbButton = <span class="keyword">new</span> JButton(<span class="string">&quot;搜  索&quot;</span>);</span><br><span class="line">		SearchbButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String bookIdString = bookIdField.getText();</span><br><span class="line">				String bookNameString = bookNameField.getText();</span><br><span class="line">				<span class="keyword">if</span>(bookIdString.equals(<span class="string">&quot;&quot;</span>) || bookIdString == <span class="keyword">null</span> || bookNameString.equals(<span class="string">&quot;&quot;</span>) || bookNameString == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;查询内容未填写完整！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;查询内容未填写完整！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> bookId = Integer.parseInt(bookIdString);</span><br><span class="line">					String bookName = bookNameString;</span><br><span class="line">					</span><br><span class="line">					Book bo = BookController.findBook(bookId, bookName);</span><br><span class="line">					<span class="keyword">if</span>(bo != <span class="keyword">null</span>) &#123;</span><br><span class="line">						rowData = <span class="keyword">new</span> Object[<span class="number">1</span>][<span class="number">6</span>];</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">0</span>] = bo.getBookId();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">1</span>] = bo.getBookName();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">2</span>] = bo.getBookAuthor();</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">3</span>] = bo.getBookNum();</span><br><span class="line">						</span><br><span class="line">						rowData[<span class="number">0</span>][<span class="number">4</span>] = BookController.findBookCategory(bo.getBookCategory());</span><br><span class="line">						<span class="keyword">if</span>(bo.getBookState() == <span class="number">0</span>) &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">5</span>] = <span class="string">&quot;可借阅&quot;</span>;</span><br><span class="line">						&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">							rowData[<span class="number">0</span>][<span class="number">5</span>] = <span class="string">&quot;不可借阅&quot;</span>;</span><br><span class="line">						&#125;</span><br><span class="line">						</span><br><span class="line">						table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;没有此书！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;没有此书！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		SearchbButton.setBounds(<span class="number">663</span>, <span class="number">24</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(SearchbButton);</span><br><span class="line"></span><br><span class="line">		JButton AllBookbutton = <span class="keyword">new</span> JButton(<span class="string">&quot;显示所有书籍&quot;</span>);</span><br><span class="line">		AllBookbutton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				List&lt;Book&gt; list = BookController.findBookList();</span><br><span class="line">				rowData = <span class="keyword">new</span> Object[list.size()][<span class="number">6</span>];</span><br><span class="line"></span><br><span class="line">				<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (Book bo : list) &#123;</span><br><span class="line">					rowData[i][<span class="number">0</span>] = bo.getBookId();</span><br><span class="line">					rowData[i][<span class="number">1</span>] = bo.getBookName();</span><br><span class="line">					rowData[i][<span class="number">2</span>] = bo.getBookAuthor();</span><br><span class="line">					rowData[i][<span class="number">3</span>] = bo.getBookNum();</span><br><span class="line">					</span><br><span class="line">					rowData[i][<span class="number">4</span>] = BookController.findBookCategory(bo.getBookCategory());</span><br><span class="line">					<span class="keyword">if</span>(bo.getBookState() == <span class="number">0</span>) &#123;</span><br><span class="line">						rowData[i][<span class="number">5</span>] = <span class="string">&quot;可借阅&quot;</span>;</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						rowData[i][<span class="number">5</span>] = <span class="string">&quot;不可借阅&quot;</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">				table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		AllBookbutton.setBounds(<span class="number">56</span>, <span class="number">24</span>, <span class="number">128</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(AllBookbutton);</span><br><span class="line">		</span><br><span class="line">		JLabel bookNameLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;书  名：&quot;</span>);</span><br><span class="line">		bookNameLabel.setBounds(<span class="number">445</span>, <span class="number">28</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(bookNameLabel);</span><br><span class="line">		</span><br><span class="line">		bookNameField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		bookNameField.setBounds(<span class="number">523</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(bookNameField);</span><br><span class="line">		bookNameField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">62</span>, <span class="number">876</span>, <span class="number">522</span>);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		add(panel_1);</span><br><span class="line"></span><br><span class="line">		table = <span class="keyword">new</span> JTable(rowData,columnNames);</span><br><span class="line">		table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">		table.setBounds(<span class="number">25</span>, <span class="number">13</span>, <span class="number">781</span>, <span class="number">349</span>);</span><br><span class="line">		</span><br><span class="line">		DefaultTableCellRenderer r   = <span class="keyword">new</span> DefaultTableCellRenderer(); <span class="comment">// 表格内容居中</span></span><br><span class="line">		r.setHorizontalAlignment(JLabel.CENTER);   </span><br><span class="line">		table.setDefaultRenderer(Object.class, r);</span><br><span class="line">		</span><br><span class="line">		JTableHeader jTableHeader = table.getTableHeader();</span><br><span class="line">		panel_1.add(jTableHeader,BorderLayout.NORTH);</span><br><span class="line">		panel_1.add(table,BorderLayout.CENTER);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="SearchUserBorrowInfoPage-java"><a href="#SearchUserBorrowInfoPage-java" class="headerlink" title="SearchUserBorrowInfoPage.java"></a>SearchUserBorrowInfoPage.java</h5><p><strong>查询用户借阅信息列表面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.BorderLayout;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JScrollPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTable;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableCellRenderer;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.DefaultTableModel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.table.JTableHeader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.BookController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchUserBorrowInfoPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Object[] columnNames = &#123; <span class="string">&quot;借阅信息编号&quot;</span>, <span class="string">&quot;用户ID&quot;</span>, <span class="string">&quot;书籍编号&quot;</span>, <span class="string">&quot;借阅状态&quot;</span>, <span class="string">&quot;借阅时间&quot;</span>, <span class="string">&quot;归还时间&quot;</span> &#125;;</span><br><span class="line">	<span class="keyword">private</span> Object[][] rowData;</span><br><span class="line">	JTable table;</span><br><span class="line">	<span class="keyword">private</span> JTextField userIdField;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SearchUserBorrowInfoPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		setSize(<span class="number">881</span>, <span class="number">586</span>);</span><br><span class="line">		JPanel panel = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">876</span>, <span class="number">62</span>);</span><br><span class="line">		add(panel);</span><br><span class="line">		panel.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JButton SearchbButton = <span class="keyword">new</span> JButton(<span class="string">&quot;搜  索&quot;</span>);</span><br><span class="line">		SearchbButton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String userId = userIdField.getText();</span><br><span class="line">				<span class="keyword">if</span> (userId.equals(<span class="string">&quot;&quot;</span>) || userId == <span class="keyword">null</span>) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;查询内容未填写完整！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(SearchbButton, <span class="string">&quot;查询内容未填写完整！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">int</span> userIdNum = Integer.parseInt(userId);</span><br><span class="line">					</span><br><span class="line">					List&lt;BorrowingInfo&gt; userBI = BookController.findUserBorrowInfoList(userIdNum);</span><br><span class="line">					rowData = <span class="keyword">new</span> Object[userBI.size()][<span class="number">6</span>];</span><br><span class="line">					</span><br><span class="line">					<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">for</span>(BorrowingInfo bI: userBI) &#123;</span><br><span class="line">						rowData[i][<span class="number">0</span>] = bI.getBorrowingInfoId();</span><br><span class="line">						rowData[i][<span class="number">1</span>] = bI.getUserId();</span><br><span class="line">						rowData[i][<span class="number">2</span>] = bI.getBookId();</span><br><span class="line">						</span><br><span class="line">						rowData[i][<span class="number">3</span>] = (bI.getBorrowingState() == <span class="number">0</span> ? <span class="string">&quot;借阅中&quot;</span> : <span class="string">&quot;已归还&quot;</span>);</span><br><span class="line">						rowData[i][<span class="number">4</span>] = bI.getBorrowingTime();</span><br><span class="line">						rowData[i][<span class="number">5</span>] = bI.getGiveBackTime();</span><br><span class="line">						i++;</span><br><span class="line">					&#125;</span><br><span class="line">					table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line"></span><br><span class="line">		SearchbButton.setBounds(<span class="number">588</span>, <span class="number">24</span>, <span class="number">113</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(SearchbButton);</span><br><span class="line"></span><br><span class="line">		JButton AllInfobutton = <span class="keyword">new</span> JButton(<span class="string">&quot;显示所有借阅信息&quot;</span>);</span><br><span class="line">		AllInfobutton.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				List&lt;BorrowingInfo&gt; userBI = BookController.findAllBorrowInfoList();</span><br><span class="line">				rowData = <span class="keyword">new</span> Object[userBI.size()][<span class="number">6</span>];</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span>(BorrowingInfo bI: userBI) &#123;</span><br><span class="line">					rowData[i][<span class="number">0</span>] = bI.getBorrowingInfoId();</span><br><span class="line">					rowData[i][<span class="number">1</span>] = bI.getUserId();</span><br><span class="line">					rowData[i][<span class="number">2</span>] = bI.getBookId();</span><br><span class="line">					rowData[i][<span class="number">3</span>] = (bI.getBorrowingState() == <span class="number">0</span> ? <span class="string">&quot;借阅中&quot;</span> : <span class="string">&quot;已归还&quot;</span>);</span><br><span class="line">					rowData[i][<span class="number">4</span>] = bI.getBorrowingTime();</span><br><span class="line">					rowData[i][<span class="number">5</span>] = bI.getGiveBackTime();</span><br><span class="line">					i++;</span><br><span class="line">				&#125;</span><br><span class="line">				table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		AllInfobutton.setBounds(<span class="number">66</span>, <span class="number">24</span>, <span class="number">170</span>, <span class="number">27</span>);</span><br><span class="line">		panel.add(AllInfobutton);</span><br><span class="line"></span><br><span class="line">		JLabel userIdLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;用户ID：&quot;</span>);</span><br><span class="line">		userIdLabel.setBounds(<span class="number">333</span>, <span class="number">28</span>, <span class="number">72</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(userIdLabel);</span><br><span class="line"></span><br><span class="line">		userIdField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		userIdField.setBounds(<span class="number">419</span>, <span class="number">25</span>, <span class="number">86</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(userIdField);</span><br><span class="line">		userIdField.setColumns(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">		JPanel panel_1 = <span class="keyword">new</span> JPanel();</span><br><span class="line">		panel_1.setBounds(<span class="number">0</span>, <span class="number">62</span>, <span class="number">876</span>, <span class="number">522</span>);</span><br><span class="line">		panel_1.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">		add(panel_1);</span><br><span class="line"></span><br><span class="line">		table = <span class="keyword">new</span> JTable(rowData, columnNames);</span><br><span class="line">		table.setModel(<span class="keyword">new</span> DefaultTableModel(rowData, columnNames));</span><br><span class="line">		table.setBounds(<span class="number">25</span>, <span class="number">13</span>, <span class="number">781</span>, <span class="number">349</span>);</span><br><span class="line"></span><br><span class="line">		DefaultTableCellRenderer r = <span class="keyword">new</span> DefaultTableCellRenderer(); <span class="comment">// 表格内容居中</span></span><br><span class="line">		r.setHorizontalAlignment(JLabel.CENTER);</span><br><span class="line">		table.setDefaultRenderer(Object.class, r);</span><br><span class="line"></span><br><span class="line">		JTableHeader jTableHeader = table.getTableHeader();</span><br><span class="line">		panel_1.add(jTableHeader, BorderLayout.NORTH);</span><br><span class="line">		panel_1.add(table, BorderLayout.CENTER);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="UpdataPasswordPage-java"><a href="#UpdataPasswordPage-java" class="headerlink" title="UpdataPasswordPage.java"></a>UpdataPasswordPage.java</h5><p><strong>更改密码面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JPasswordField;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdataPasswordPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField_1;</span><br><span class="line">	<span class="keyword">private</span> JPasswordField passwordField_2;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UpdataPasswordPage</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">		JLabel oldPasswordLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;旧密码：&quot;</span>);</span><br><span class="line">		oldPasswordLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		oldPasswordLabel.setBounds(<span class="number">205</span>, <span class="number">157</span>, <span class="number">113</span>, <span class="number">18</span>);</span><br><span class="line">		add(oldPasswordLabel);</span><br><span class="line"></span><br><span class="line">		JLabel newPassword1 = <span class="keyword">new</span> JLabel(<span class="string">&quot;新密码：&quot;</span>);</span><br><span class="line">		newPassword1.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		newPassword1.setBounds(<span class="number">205</span>, <span class="number">241</span>, <span class="number">113</span>, <span class="number">18</span>);</span><br><span class="line">		add(newPassword1);</span><br><span class="line"></span><br><span class="line">		JLabel newPassword2 = <span class="keyword">new</span> JLabel(<span class="string">&quot;重复新密码：&quot;</span>);</span><br><span class="line">		newPassword2.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		newPassword2.setBounds(<span class="number">184</span>, <span class="number">334</span>, <span class="number">147</span>, <span class="number">18</span>);</span><br><span class="line">		add(newPassword2);</span><br><span class="line"></span><br><span class="line">		passwordField = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField.setBounds(<span class="number">357</span>, <span class="number">156</span>, <span class="number">155</span>, <span class="number">24</span>);</span><br><span class="line">		add(passwordField);</span><br><span class="line"></span><br><span class="line">		passwordField_1 = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField_1.setBounds(<span class="number">357</span>, <span class="number">240</span>, <span class="number">155</span>, <span class="number">24</span>);</span><br><span class="line">		add(passwordField_1);</span><br><span class="line"></span><br><span class="line">		passwordField_2 = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">		passwordField_2.setBounds(<span class="number">357</span>, <span class="number">333</span>, <span class="number">155</span>, <span class="number">24</span>);</span><br><span class="line">		add(passwordField_2);</span><br><span class="line"></span><br><span class="line">		JButton Button = <span class="keyword">new</span> JButton(<span class="string">&quot;提  交&quot;</span>);</span><br><span class="line">		Button.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String oldPassword = <span class="keyword">new</span> String(passwordField.getPassword());</span><br><span class="line">				String newPassword1 = <span class="keyword">new</span> String(passwordField_1.getPassword());</span><br><span class="line">				String newPassword2 = <span class="keyword">new</span> String(passwordField_2.getPassword());</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(!oldPassword.equals(user.getPassWord())) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;旧密码错误！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(Button, <span class="string">&quot;旧密码错误！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">if</span>(!newPassword1.equals(newPassword2)) &#123;</span><br><span class="line">						System.out.println(<span class="string">&quot;两次输入的密码不一样！&quot;</span>);</span><br><span class="line">						JOptionPane.showMessageDialog(Button, <span class="string">&quot;两次输入的密码不一样！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">					&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">						<span class="keyword">boolean</span> flag = UserController.changePassword(user.getUserId(), newPassword1);</span><br><span class="line">						<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">							System.out.println(<span class="string">&quot;修改密码成功！&quot;</span>);</span><br><span class="line">							JOptionPane.showMessageDialog(Button, <span class="string">&quot;修改密码成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">						&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">							System.out.println(<span class="string">&quot;修改密码失败！&quot;</span>);</span><br><span class="line">							JOptionPane.showMessageDialog(Button, <span class="string">&quot;修改密码失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">				passwordField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				passwordField_1.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				passwordField_2.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		Button.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">18</span>));</span><br><span class="line">		Button.setBounds(<span class="number">278</span>, <span class="number">417</span>, <span class="number">130</span>, <span class="number">38</span>);</span><br><span class="line">		add(Button);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="UpdateBaseInfoPage-java"><a href="#UpdateBaseInfoPage-java" class="headerlink" title="UpdateBaseInfoPage.java"></a>UpdateBaseInfoPage.java</h5><p><strong>更改用户基本信息面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.UserController;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JOptionPane;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JTextField;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JButton;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateBaseInfoPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JTextField ageField;</span><br><span class="line">	<span class="keyword">private</span> JTextField genderField;</span><br><span class="line">	<span class="keyword">private</span> JTextField phoneField;</span><br><span class="line">	<span class="keyword">private</span> JTextField addressField;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UpdateBaseInfoPage</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		JLabel ageLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;年  龄：&quot;</span>);</span><br><span class="line">		ageLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		ageLabel.setBounds(<span class="number">113</span>, <span class="number">104</span>, <span class="number">131</span>, <span class="number">39</span>);</span><br><span class="line">		add(ageLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel genderLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;性  别：&quot;</span>);</span><br><span class="line">		genderLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		genderLabel.setBounds(<span class="number">113</span>, <span class="number">188</span>, <span class="number">131</span>, <span class="number">39</span>);</span><br><span class="line">		add(genderLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel phoneLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;电  话：&quot;</span>);</span><br><span class="line">		phoneLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		phoneLabel.setBounds(<span class="number">113</span>, <span class="number">276</span>, <span class="number">131</span>, <span class="number">39</span>);</span><br><span class="line">		add(phoneLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel addressLabel = <span class="keyword">new</span> JLabel(<span class="string">&quot;地  址：&quot;</span>);</span><br><span class="line">		addressLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		addressLabel.setBounds(<span class="number">113</span>, <span class="number">357</span>, <span class="number">131</span>, <span class="number">39</span>);</span><br><span class="line">		add(addressLabel);</span><br><span class="line">		</span><br><span class="line">		ageField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		ageField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		ageField.setBounds(<span class="number">258</span>, <span class="number">104</span>, <span class="number">153</span>, <span class="number">39</span>);</span><br><span class="line">		add(ageField);</span><br><span class="line">		ageField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		genderField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		genderField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		genderField.setBounds(<span class="number">258</span>, <span class="number">192</span>, <span class="number">153</span>, <span class="number">39</span>);</span><br><span class="line">		add(genderField);</span><br><span class="line">		genderField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		phoneField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		phoneField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		phoneField.setBounds(<span class="number">258</span>, <span class="number">277</span>, <span class="number">153</span>, <span class="number">39</span>);</span><br><span class="line">		add(phoneField);</span><br><span class="line">		phoneField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		addressField = <span class="keyword">new</span> JTextField();</span><br><span class="line">		addressField.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		addressField.setBounds(<span class="number">258</span>, <span class="number">361</span>, <span class="number">153</span>, <span class="number">39</span>);</span><br><span class="line">		add(addressField);</span><br><span class="line">		addressField.setColumns(<span class="number">10</span>);</span><br><span class="line">		</span><br><span class="line">		JButton button = <span class="keyword">new</span> JButton(<span class="string">&quot;确认修改&quot;</span>);</span><br><span class="line">		button.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="meta">@Override</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				String ageString = ageField.getText();</span><br><span class="line">				String gender = genderField.getText();</span><br><span class="line">				String phone = phoneField.getText();</span><br><span class="line">				String address = addressField.getText();</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">int</span> age;</span><br><span class="line">				<span class="keyword">if</span>(ageString == <span class="keyword">null</span> || ageString.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">					age = -<span class="number">1</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					age = Integer.parseInt(ageString);</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">boolean</span> flag = UserController.changeBaseInfo(user.getUserId(), age, gender, phone, address);</span><br><span class="line">				</span><br><span class="line">				<span class="keyword">if</span>(flag) &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;更新成功！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(button, <span class="string">&quot;更新成功！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					System.out.println(<span class="string">&quot;更新失败！&quot;</span>);</span><br><span class="line">					JOptionPane.showMessageDialog(button, <span class="string">&quot;更新失败！&quot;</span>, <span class="string">&quot;提示&quot;</span>, <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">				ageField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				genderField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				phoneField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">				addressField.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">20</span>));</span><br><span class="line">		button.setBounds(<span class="number">163</span>, <span class="number">441</span>, <span class="number">131</span>, <span class="number">45</span>);</span><br><span class="line">		add(button);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="UserInfoSearchPage-java"><a href="#UserInfoSearchPage-java" class="headerlink" title="UserInfoSearchPage.java"></a>UserInfoSearchPage.java</h5><p><strong>用户详细信息查询面板</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.controller.page.smallPage.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.JPanel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JLabel;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoSearchPage</span> <span class="keyword">extends</span> <span class="title">JPanel</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	User user;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UserInfoSearchPage</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.user = user;</span><br><span class="line">		setLayout(<span class="keyword">null</span>);</span><br><span class="line">		</span><br><span class="line">		String userId = <span class="string">&quot;用户ID：&quot;</span> + user.getUserId();</span><br><span class="line">		String userName = <span class="string">&quot;用户名：&quot;</span> + user.getUserName();</span><br><span class="line">		String age = <span class="string">&quot;年龄：&quot;</span> + user.getAge();</span><br><span class="line">		String gender = <span class="string">&quot;性别：&quot;</span> + user.getGender();</span><br><span class="line">		String phone = <span class="string">&quot;电话：&quot;</span> + user.getPhone();</span><br><span class="line">		String address = <span class="string">&quot;地址：&quot;</span> + user.getAddress();</span><br><span class="line">		String userState = <span class="string">&quot;用户状态：&quot;</span> + (user.getUserState() == <span class="number">0</span> ? <span class="string">&quot;正常&quot;</span> : <span class="string">&quot;禁用&quot;</span>);</span><br><span class="line">		String userRole = <span class="string">&quot;用户类别：&quot;</span> + (user.getRole() == <span class="number">0</span> ? <span class="string">&quot;管理员&quot;</span> : <span class="string">&quot;普通用户&quot;</span>);</span><br><span class="line">		</span><br><span class="line">		JLabel userIdLabel = <span class="keyword">new</span> JLabel(userId);</span><br><span class="line">		userIdLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userIdLabel.setBounds(<span class="number">142</span>, <span class="number">65</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(userIdLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userNameLabel = <span class="keyword">new</span> JLabel(userName);</span><br><span class="line">		userNameLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userNameLabel.setBounds(<span class="number">440</span>, <span class="number">65</span>, <span class="number">299</span>, <span class="number">37</span>);</span><br><span class="line">		add(userNameLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel ageLabel = <span class="keyword">new</span> JLabel(age);</span><br><span class="line">		ageLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		ageLabel.setBounds(<span class="number">142</span>, <span class="number">175</span>, <span class="number">200</span>, <span class="number">42</span>);</span><br><span class="line">		add(ageLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel phoneLabel = <span class="keyword">new</span> JLabel(phone);</span><br><span class="line">		phoneLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		phoneLabel.setBounds(<span class="number">142</span>, <span class="number">284</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(phoneLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel addressLabel = <span class="keyword">new</span> JLabel(address);</span><br><span class="line">		addressLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		addressLabel.setBounds(<span class="number">440</span>, <span class="number">279</span>, <span class="number">213</span>, <span class="number">46</span>);</span><br><span class="line">		add(addressLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userStateLabel = <span class="keyword">new</span> JLabel(userState);</span><br><span class="line">		userStateLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userStateLabel.setBounds(<span class="number">142</span>, <span class="number">393</span>, <span class="number">200</span>, <span class="number">37</span>);</span><br><span class="line">		add(userStateLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel userRoleLabel = <span class="keyword">new</span> JLabel(userRole);</span><br><span class="line">		userRoleLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		userRoleLabel.setBounds(<span class="number">440</span>, <span class="number">393</span>, <span class="number">241</span>, <span class="number">37</span>);</span><br><span class="line">		add(userRoleLabel);</span><br><span class="line">		</span><br><span class="line">		JLabel genderLabel = <span class="keyword">new</span> JLabel(gender);</span><br><span class="line">		genderLabel.setFont(<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, Font.PLAIN, <span class="number">25</span>));</span><br><span class="line">		genderLabel.setBounds(<span class="number">440</span>, <span class="number">178</span>, <span class="number">213</span>, <span class="number">37</span>);</span><br><span class="line">		add(genderLabel);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="十、Test包内测试类的创建"><a href="#十、Test包内测试类的创建" class="headerlink" title="十、Test包内测试类的创建"></a>十、Test包内测试类的创建</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.egret.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.egret.controller.page.smallPage.admin.WelcomePage;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BookCategoryDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BookDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.BorrowInfoDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.Book;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.BorrowingInfo;</span><br><span class="line"><span class="keyword">import</span> cn.egret.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		User user = <span class="keyword">new</span> User(<span class="string">&quot;小王&quot;</span>,<span class="string">&quot;121212&quot;</span>,<span class="number">18</span>,<span class="string">&quot;man&quot;</span>,<span class="string">&quot;110&quot;</span>,<span class="string">&quot;sky&quot;</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">		UserDaoImpl u = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"><span class="comment">//		u.addUser(user);</span></span><br><span class="line"><span class="comment">//		System.out.println(user.getUserId());</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		User user2 = u.findUserByNameAndPassword(&quot;张三&quot;, &quot;123456&quot;);</span></span><br><span class="line"><span class="comment">//		System.out.println(user2);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		System.out.println(u.findPasswordById(3));</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		System.out.println(u.updatePasswordById(1, &quot;555555&quot;));</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		User user3 = u.findUserById(2);</span></span><br><span class="line"><span class="comment">//		System.out.println(user3);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		System.out.println(u.updateUserStateById(2, 1));</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		System.out.println(u.deleteUserByIdAndUsername(1, &quot;张三&quot;));</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line"><span class="comment">//		List&lt;User&gt; l = u.findUser(1);</span></span><br><span class="line"><span class="comment">//		for(User use: l) &#123;</span></span><br><span class="line"><span class="comment">//			System.out.println(use);</span></span><br><span class="line"><span class="comment">//		&#125;</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		System.out.println(u.getUserIdByName(&quot;张三&quot;));</span></span><br><span class="line">		</span><br><span class="line">		Book book = <span class="keyword">new</span> Book(<span class="number">2001</span>,<span class="string">&quot;一书一世界&quot;</span>,<span class="string">&quot;张晓波&quot;</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line">		BookDaoImpl b = <span class="keyword">new</span> BookDaoImpl();</span><br><span class="line"><span class="comment">//		b.addBook(book);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		b.deleteBook(2001, &quot;一书一世界&quot;);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		List&lt;Book&gt; listBook = b.findBookList();</span></span><br><span class="line"><span class="comment">//		for(Book bo: listBook) &#123;</span></span><br><span class="line"><span class="comment">//			System.out.println(bo);</span></span><br><span class="line"><span class="comment">//		&#125;</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		Book book2 = b.findBook(2, &quot;操作系统&quot;);</span></span><br><span class="line"><span class="comment">//		System.out.println(book2);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		b.changeBookState(1, &quot;操作系统&quot;, 0);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		b.borrowBook(1, &quot;操作系统&quot;);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		b.giveBackBook(1, &quot;操作系统&quot;);</span></span><br><span class="line">		</span><br><span class="line">		BorrowInfoDaoImpl bor = <span class="keyword">new</span> BorrowInfoDaoImpl();</span><br><span class="line"><span class="comment">//		bor.borrowBook(2, 1);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		bor.giveBackBook(2, 1);</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		List&lt;BorrowingInfo&gt; BIList = bor.findBorrowInfo(2);</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line"><span class="comment">//		for(BorrowingInfo bbb: BIList) &#123;</span></span><br><span class="line"><span class="comment">//			System.out.println(bbb);</span></span><br><span class="line"><span class="comment">//		&#125;</span></span><br><span class="line"><span class="comment">//		</span></span><br><span class="line">		</span><br><span class="line">		BookCategoryDaoImpl bci = <span class="keyword">new</span> BookCategoryDaoImpl();</span><br><span class="line"><span class="comment">//		System.out.println(bci.findBookCategoryById(4));</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//		new WelcomePage();	</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="三、最终效果"><a href="#三、最终效果" class="headerlink" title="三、最终效果"></a>三、最终效果</h2><h3 id="一、登录界面"><a href="#一、登录界面" class="headerlink" title="一、登录界面"></a>一、登录界面</h3><p><img src="https://img-blog.csdnimg.cn/f71a011ee4c14324a7563f7af82b099a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="登录界面"></p>
<h3 id="二、注册界面"><a href="#二、注册界面" class="headerlink" title="二、注册界面"></a>二、注册界面</h3><p><img src="https://img-blog.csdnimg.cn/8cad6d4b94ac4d50a142221db0a97d80.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="注册界面"></p>
<h3 id="三、普通用户界面"><a href="#三、普通用户界面" class="headerlink" title="三、普通用户界面"></a>三、普通用户界面</h3><h4 id="1、主界面"><a href="#1、主界面" class="headerlink" title="1、主界面"></a>1、主界面</h4><p><img src="https://img-blog.csdnimg.cn/9a57d8d378a64580a1b9c5b09355d9ae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="主界面"></p>
<h4 id="2、书籍列表查询"><a href="#2、书籍列表查询" class="headerlink" title="2、书籍列表查询"></a>2、书籍列表查询</h4><p><img src="https://img-blog.csdnimg.cn/8e74fb33ade54bc0b59ab7790e1b4a76.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="书籍列表查询"></p>
<h4 id="3、借还书籍"><a href="#3、借还书籍" class="headerlink" title="3、借还书籍"></a>3、借还书籍</h4><p><img src="https://img-blog.csdnimg.cn/ff3b97820b194f2da99e7033088bfc7f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="借还书籍"></p>
<h4 id="4、个人借阅历史查询"><a href="#4、个人借阅历史查询" class="headerlink" title="4、个人借阅历史查询"></a>4、个人借阅历史查询</h4><p><img src="https://img-blog.csdnimg.cn/37a0a40f359145f69921ad34f7fbaa21.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="个人借阅历史查询"></p>
<h4 id="5、密码修改"><a href="#5、密码修改" class="headerlink" title="5、密码修改"></a>5、密码修改</h4><p><img src="https://img-blog.csdnimg.cn/4776e087027b46838df1b031d41d46cb.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="密码修改"></p>
<h4 id="6、个人基础信息修改"><a href="#6、个人基础信息修改" class="headerlink" title="6、个人基础信息修改"></a>6、个人基础信息修改</h4><p><img src="https://img-blog.csdnimg.cn/5140eecbc0ea4284b1357187940f45b9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="个人基础信息修改"></p>
<h4 id="7、个人信息查询"><a href="#7、个人信息查询" class="headerlink" title="7、个人信息查询"></a>7、个人信息查询</h4><p><img src="https://img-blog.csdnimg.cn/adbe763a42604441bdee6537f6551d39.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="个人信息查询"></p>
<h3 id="四、管理员界面"><a href="#四、管理员界面" class="headerlink" title="四、管理员界面"></a>四、管理员界面</h3><h4 id="1、主界面-1"><a href="#1、主界面-1" class="headerlink" title="1、主界面"></a>1、主界面</h4><p><img src="https://img-blog.csdnimg.cn/1feb6c8379de4bc69d32ccafb7100dc4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="主界面"></p>
<h4 id="2、管理员添加"><a href="#2、管理员添加" class="headerlink" title="2、管理员添加"></a>2、管理员添加</h4><p><img src="https://img-blog.csdnimg.cn/b5acc5ae74a54ebe834f81d0a24f01ef.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="管理员添加"></p>
<h4 id="3、用户列表查询"><a href="#3、用户列表查询" class="headerlink" title="3、用户列表查询"></a>3、用户列表查询</h4><p><img src="https://img-blog.csdnimg.cn/9ae92cd8a41a4d2aa63588d6f59a7398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="用户列表查询"></p>
<h4 id="4、禁用与启用用户"><a href="#4、禁用与启用用户" class="headerlink" title="4、禁用与启用用户"></a>4、禁用与启用用户</h4><p><img src="https://img-blog.csdnimg.cn/aee4c79043bf48babde933d36d0619cd.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="禁用与启用用户"></p>
<h4 id="5、书籍列表查询"><a href="#5、书籍列表查询" class="headerlink" title="5、书籍列表查询"></a>5、书籍列表查询</h4><p><img src="https://img-blog.csdnimg.cn/335a1c61546146289cd890e597772c64.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="书籍列表查询"></p>
<h4 id="6、书籍添加与删除"><a href="#6、书籍添加与删除" class="headerlink" title="6、书籍添加与删除"></a>6、书籍添加与删除</h4><p><img src="https://img-blog.csdnimg.cn/ee53fc7a237041ad82e2a7d98292f75b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="书籍添加与删除"></p>
<h4 id="7、个人信息查询-1"><a href="#7、个人信息查询-1" class="headerlink" title="7、个人信息查询"></a>7、个人信息查询</h4><p><img src="https://img-blog.csdnimg.cn/fed84018728a42e3b2d7799dfda706ca.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plZ3JldA==,size_16,color_FFFFFF,t_70" alt="个人信息查询"></p>
<p><font color="red">终此！</font></p>
]]></content>
      <categories>
        <category>Java项目</category>
      </categories>
      <tags>
        <tag>JavaSe进阶</tag>
      </tags>
  </entry>
</search>
